


void MyMethods::NNover30() {



37
128  0.0606683  0.0510657  -0.117271  -0.124858  -0.108949  -0.10436  0.0586417  -0.107465  0.0510068  -0.0979135  0.0506537  0.0609812  
128  0.027612  0.025007  0.0145405  -0.0698051  -0.0141043  0.00504095  0.0633329  0.000292458  0.0163272  -0.00218841  0.0337649  0.0479419  
1  1.074  
1  0.581537  
1  0.171643  
16384  -0.0569207  -0.0230944  -0.0643205  0.0135475  -0.0518168  -0.0602151  -0.00554253  -0.0532922  -0.0346675  0.0167146  -0.00182481  -0.0371079  
128  -0.0269874  -0.0197418  -0.0189738  1.03777e-05  -0.00527111  -0.0327615  -0.00345325  -0.0221474  -0.0318411  0.00594257  -0.000669463  -0.00930141  
1  1.08805  
1  0.533783  
1  0.137414  
16384  -0.013749  -0.030035  0.00516819  -0.0338341  -0.0142801  -0.0197499  -0.0253345  0.0240967  -0.0213274  0.00233559  -0.0370664  -0.0129658  
128  0.0243951  0.0285294  0.0147728  0.0308294  0.0220283  -0.0137905  0.00641507  -0.0295394  0.0143375  -0.0141117  -0.0034064  0.00566649  
1  1.10735  
1  0.553269  
1  0.0131249  
16384  -0.0224432  -0.00397953  0.00897598  -0.00790279  0.00971006  -0.0150169  0.00223339  0.0118703  0.00537287  0.00720955  -0.00270222  0.0112689  
128  0.0140348  0.00630633  0.0207395  -0.000641726  0.0191534  -0.00224535  0.0136929  0.0108479  0.0056949  -0.000728873  0.0118082  0.0164577  
1  1.08667  
1  0.53041  
1  0.0347418  
16384  0.0213355  0.00928052  -0.00812813  0.0040924  0.00618292  -0.00739114  0.0124032  0.000803058  0.0258261  -0.00616905  0.0148541  -0.00413702  
128  0.00855633  -0.0201172  -0.0472347  -0.0353289  -0.0282378  -0.0190324  -0.00930527  -0.0528888  -0.0254247  -0.0268066  -0.0156614  -0.0397372  
1  1.09197  
1  0.479918  
1  0.0937559  
16384  -0.0312853  -0.031184  0.0037773  -0.00952067  -0.024085  -0.00821025  -0.00904087  -0.00248462  -0.0193576  -0.0136046  -0.00516914  0.00235989  
128  0.00942464  0.00366596  -0.0217647  -0.00180118  -0.0032677  0.0124824  -0.0105298  -0.00169148  -0.00269823  0.0126691  -0.00261861  0.00484109  
1  1.11285  
1  0.515258  
1  0.0325971  
16384  -0.00170853  -0.0311506  0.0129985  -0.00137117  -0.0353801  -0.0134685  -0.0233631  -0.0296779  0.00307999  -0.00681104  0.0127624  0.0219483  
128  -0.0220906  -0.011495  0.0194534  0.00478974  -0.0312068  -0.0362171  0.00437419  -0.0388296  0.0094566  0.00319164  -0.0133897  -0.00446172  
1  1.06806  
1  0.491499  
1  0.102182  
128  0.000901587  0.000239965  -0.013966  -0.0212869  0.00179421  0.0088355  0.000282544  0.000988161  -0.0176673  -0.00100593  -0.0130726  -0.0154152  
1  -0.014031  

-30	-29.99	-29.98	-29.97	-29.96	-29.95	-29.94	-29.93	-29.92	-29.91	-29.9	-29.89	-29.88	-29.87	-29.86	-29.85	-29.84	-29.83	-29.82	-29.81	-29.8	-29.79	-29.78	-29.77	-29.76	-29.75	-29.74	-29.73	-29.72	-29.71	-29.7	-29.69	-29.68	-29.67	-29.66	-29.65	-29.64	-29.63	-29.62	-29.61	-29.6	-29.59	-29.58	-29.57	-29.56	-29.55	-29.54	-29.53	-29.52	-29.51	-29.5	-29.49	-29.48	-29.47	-29.46	-29.45	-29.44	-29.43	-29.42	-29.41	-29.4	-29.39	-29.38	-29.37	-29.36	-29.35	-29.34	-29.33	-29.32	-29.31	-29.3	-29.29	-29.28	-29.27	-29.26	-29.25	-29.24	-29.23	-29.22	-29.21	-29.2	-29.19	-29.18	-29.17	-29.16	-29.15	-29.14	-29.13	-29.12	-29.11	-29.1	-29.09	-29.08	-29.07	-29.06	-29.05	-29.04	-29.03	-29.02	-29.01	-29	-28.99	-28.98	-28.97	-28.96	-28.95	-28.94	-28.93	-28.92	-28.91	-28.9	-28.89	-28.88	-28.87	-28.86	-28.85	-28.84	-28.83	-28.82	-28.81	-28.8	-28.79	-28.78	-28.77	-28.76	-28.75	-28.74	-28.73	-28.72	-28.71	-28.7	-28.69	-28.68	-28.67	-28.66	-28.65	-28.64	-28.63	-28.62	-28.61	-28.6	-28.59	-28.58	-28.57	-28.56	-28.55	-28.54	-28.53	-28.52	-28.51	-28.5	-28.49	-28.48	-28.47	-28.46	-28.45	-28.44	-28.43	-28.42	-28.41	-28.4	-28.39	-28.38	-28.37	-28.36	-28.35	-28.34	-28.33	-28.32	-28.31	-28.3	-28.29	-28.28	-28.27	-28.26	-28.25	-28.24	-28.23	-28.22	-28.21	-28.2	-28.19	-28.18	-28.17	-28.16	-28.15	-28.14	-28.13	-28.12	-28.11	-28.1	-28.09	-28.08	-28.07	-28.06	-28.05	-28.04	-28.03	-28.02	-28.01	-28	-27.99	-27.98	-27.97	-27.96	-27.95	-27.94	-27.93	-27.92	-27.91	-27.9	-27.89	-27.88	-27.87	-27.86	-27.85	-27.84	-27.83	-27.82	-27.81	-27.8	-27.79	-27.78	-27.77	-27.76	-27.75	-27.74	-27.73	-27.72	-27.71	-27.7	-27.69	-27.68	-27.67	-27.66	-27.65	-27.64	-27.63	-27.62	-27.61	-27.6	-27.59	-27.58	-27.57	-27.56	-27.55	-27.54	-27.53	-27.52	-27.51	-27.5	-27.49	-27.48	-27.47	-27.46	-27.45	-27.44	-27.43	-27.42	-27.41	-27.4	-27.39	-27.38	-27.37	-27.36	-27.35	-27.34	-27.33	-27.32	-27.31	-27.3	-27.29	-27.28	-27.27	-27.26	-27.25	-27.24	-27.23	-27.22	-27.21	-27.2	-27.19	-27.18	-27.17	-27.16	-27.15	-27.14	-27.13	-27.12	-27.11	-27.1	-27.09	-27.08	-27.07	-27.06	-27.05	-27.04	-27.03	-27.02	-27.01	-27	-26.99	-26.98	-26.97	-26.96	-26.95	-26.94	-26.93	-26.92	-26.91	-26.9	-26.89	-26.88	-26.87	-26.86	-26.85	-26.84	-26.83	-26.82	-26.81	-26.8	-26.79	-26.78	-26.77	-26.76	-26.75	-26.74	-26.73	-26.72	-26.71	-26.7	-26.69	-26.68	-26.67	-26.66	-26.65	-26.64	-26.63	-26.62	-26.61	-26.6	-26.59	-26.58	-26.57	-26.56	-26.55	-26.54	-26.53	-26.52	-26.51	-26.5	-26.49	-26.48	-26.47	-26.46	-26.45	-26.44	-26.43	-26.42	-26.41	-26.4	-26.39	-26.38	-26.37	-26.36	-26.35	-26.34	-26.33	-26.32	-26.31	-26.3	-26.29	-26.28	-26.27	-26.26	-26.25	-26.24	-26.23	-26.22	-26.21	-26.2	-26.19	-26.18	-26.17	-26.16	-26.15	-26.14	-26.13	-26.12	-26.11	-26.1	-26.09	-26.08	-26.07	-26.06	-26.05	-26.04	-26.03	-26.02	-26.01	-26	-25.99	-25.98	-25.97	-25.96	-25.95	-25.94	-25.93	-25.92	-25.91	-25.9	-25.89	-25.88	-25.87	-25.86	-25.85	-25.84	-25.83	-25.82	-25.81	-25.8	-25.79	-25.78	-25.77	-25.76	-25.75	-25.74	-25.73	-25.72	-25.71	-25.7	-25.69	-25.68	-25.67	-25.66	-25.65	-25.64	-25.63	-25.62	-25.61	-25.6	-25.59	-25.58	-25.57	-25.56	-25.55	-25.54	-25.53	-25.52	-25.51	-25.5	-25.49	-25.48	-25.47	-25.46	-25.45	-25.44	-25.43	-25.42	-25.41	-25.4	-25.39	-25.38	-25.37	-25.36	-25.35	-25.34	-25.33	-25.32	-25.31	-25.3	-25.29	-25.28	-25.27	-25.26	-25.25	-25.24	-25.23	-25.22	-25.21	-25.2	-25.19	-25.18	-25.17	-25.16	-25.15	-25.14	-25.13	-25.12	-25.11	-25.1	-25.09	-25.08	-25.07	-25.06	-25.05	-25.04	-25.03	-25.02	-25.01	-25	-24.99	-24.98	-24.97	-24.96	-24.95	-24.94	-24.93	-24.92	-24.91	-24.9	-24.89	-24.88	-24.87	-24.86	-24.85	-24.84	-24.83	-24.82	-24.81	-24.8	-24.79	-24.78	-24.77	-24.76	-24.75	-24.74	-24.73	-24.72	-24.71	-24.7	-24.69	-24.68	-24.67	-24.66	-24.65	-24.64	-24.63	-24.62	-24.61	-24.6	-24.59	-24.58	-24.57	-24.56	-24.55	-24.54	-24.53	-24.52	-24.51	-24.5	-24.49	-24.48	-24.47	-24.46	-24.45	-24.44	-24.43	-24.42	-24.41	-24.4	-24.39	-24.38	-24.37	-24.36	-24.35	-24.34	-24.33	-24.32	-24.31	-24.3	-24.29	-24.28	-24.27	-24.26	-24.25	-24.24	-24.23	-24.22	-24.21	-24.2	-24.19	-24.18	-24.17	-24.16	-24.15	-24.14	-24.13	-24.12	-24.11	-24.1	-24.09	-24.08	-24.07	-24.06	-24.05	-24.04	-24.03	-24.02	-24.01	-24	-23.99	-23.98	-23.97	-23.96	-23.95	-23.94	-23.93	-23.92	-23.91	-23.9	-23.89	-23.88	-23.87	-23.86	-23.85	-23.84	-23.83	-23.82	-23.81	-23.8	-23.79	-23.78	-23.77	-23.76	-23.75	-23.74	-23.73	-23.72	-23.71	-23.7	-23.69	-23.68	-23.67	-23.66	-23.65	-23.64	-23.63	-23.62	-23.61	-23.6	-23.59	-23.58	-23.57	-23.56	-23.55	-23.54	-23.53	-23.52	-23.51	-23.5	-23.49	-23.48	-23.47	-23.46	-23.45	-23.44	-23.43	-23.42	-23.41	-23.4	-23.39	-23.38	-23.37	-23.36	-23.35	-23.34	-23.33	-23.32	-23.31	-23.3	-23.29	-23.28	-23.27	-23.26	-23.25	-23.24	-23.23	-23.22	-23.21	-23.2	-23.19	-23.18	-23.17	-23.16	-23.15	-23.14	-23.13	-23.12	-23.11	-23.1	-23.09	-23.08	-23.07	-23.06	-23.05	-23.04	-23.03	-23.02	-23.01	-23	-22.99	-22.98	-22.97	-22.96	-22.95	-22.94	-22.93	-22.92	-22.91	-22.9	-22.89	-22.88	-22.87	-22.86	-22.85	-22.84	-22.83	-22.82	-22.81	-22.8	-22.79	-22.78	-22.77	-22.76	-22.75	-22.74	-22.73	-22.72	-22.71	-22.7	-22.69	-22.68	-22.67	-22.66	-22.65	-22.64	-22.63	-22.62	-22.61	-22.6	-22.59	-22.58	-22.57	-22.56	-22.55	-22.54	-22.53	-22.52	-22.51	-22.5	-22.49	-22.48	-22.47	-22.46	-22.45	-22.44	-22.43	-22.42	-22.41	-22.4	-22.39	-22.38	-22.37	-22.36	-22.35	-22.34	-22.33	-22.32	-22.31	-22.3	-22.29	-22.28	-22.27	-22.26	-22.25	-22.24	-22.23	-22.22	-22.21	-22.2	-22.19	-22.18	-22.17	-22.16	-22.15	-22.14	-22.13	-22.12	-22.11	-22.1	-22.09	-22.08	-22.07	-22.06	-22.05	-22.04	-22.03	-22.02	-22.01	-22	-21.99	-21.98	-21.97	-21.96	-21.95	-21.94	-21.93	-21.92	-21.91	-21.9	-21.89	-21.88	-21.87	-21.86	-21.85	-21.84	-21.83	-21.82	-21.81	-21.8	-21.79	-21.78	-21.77	-21.76	-21.75	-21.74	-21.73	-21.72	-21.71	-21.7	-21.69	-21.68	-21.67	-21.66	-21.65	-21.64	-21.63	-21.62	-21.61	-21.6	-21.59	-21.58	-21.57	-21.56	-21.55	-21.54	-21.53	-21.52	-21.51	-21.5	-21.49	-21.48	-21.47	-21.46	-21.45	-21.44	-21.43	-21.42	-21.41	-21.4	-21.39	-21.38	-21.37	-21.36	-21.35	-21.34	-21.33	-21.32	-21.31	-21.3	-21.29	-21.28	-21.27	-21.26	-21.25	-21.24	-21.23	-21.22	-21.21	-21.2	-21.19	-21.18	-21.17	-21.16	-21.15	-21.14	-21.13	-21.12	-21.11	-21.1	-21.09	-21.08	-21.07	-21.06	-21.05	-21.04	-21.03	-21.02	-21.01	-21	-20.99	-20.98	-20.97	-20.96	-20.95	-20.94	-20.93	-20.92	-20.91	-20.9	-20.89	-20.88	-20.87	-20.86	-20.85	-20.84	-20.83	-20.82	-20.81	-20.8	-20.79	-20.78	-20.77	-20.76	-20.75	-20.74	-20.73	-20.72	-20.71	-20.7	-20.69	-20.68	-20.67	-20.66	-20.65	-20.64	-20.63	-20.62	-20.61	-20.6	-20.59	-20.58	-20.57	-20.56	-20.55	-20.54	-20.53	-20.52	-20.51	-20.5	-20.49	-20.48	-20.47	-20.46	-20.45	-20.44	-20.43	-20.42	-20.41	-20.4	-20.39	-20.38	-20.37	-20.36	-20.35	-20.34	-20.33	-20.32	-20.31	-20.3	-20.29	-20.28	-20.27	-20.26	-20.25	-20.24	-20.23	-20.22	-20.21	-20.2	-20.19	-20.18	-20.17	-20.16	-20.15	-20.14	-20.13	-20.12	-20.11	-20.1	-20.09	-20.08	-20.07	-20.06	-20.05	-20.04	-20.03	-20.02	-20.01	-20	-19.99	-19.98	-19.97	-19.96	-19.95	-19.94	-19.93	-19.92	-19.91	-19.9	-19.89	-19.88	-19.87	-19.86	-19.85	-19.84	-19.83	-19.82	-19.81	-19.8	-19.79	-19.78	-19.77	-19.76	-19.75	-19.74	-19.73	-19.72	-19.71	-19.7	-19.69	-19.68	-19.67	-19.66	-19.65	-19.64	-19.63	-19.62	-19.61	-19.6	-19.59	-19.58	-19.57	-19.56	-19.55	-19.54	-19.53	-19.52	-19.51	-19.5	-19.49	-19.48	-19.47	-19.46	-19.45	-19.44	-19.43	-19.42	-19.41	-19.4	-19.39	-19.38	-19.37	-19.36	-19.35	-19.34	-19.33	-19.32	-19.31	-19.3	-19.29	-19.28	-19.27	-19.26	-19.25	-19.24	-19.23	-19.22	-19.21	-19.2	-19.19	-19.18	-19.17	-19.16	-19.15	-19.14	-19.13	-19.12	-19.11	-19.1	-19.09	-19.08	-19.07	-19.06	-19.05	-19.04	-19.03	-19.02	-19.01	-19	-18.99	-18.98	-18.97	-18.96	-18.95	-18.94	-18.93	-18.92	-18.91	-18.9	-18.89	-18.88	-18.87	-18.86	-18.85	-18.84	-18.83	-18.82	-18.81	-18.8	-18.79	-18.78	-18.77	-18.76	-18.75	-18.74	-18.73	-18.72	-18.71	-18.7	-18.69	-18.68	-18.67	-18.66	-18.65	-18.64	-18.63	-18.62	-18.61	-18.6	-18.59	-18.58	-18.57	-18.56	-18.55	-18.54	-18.53	-18.52	-18.51	-18.5	-18.49	-18.48	-18.47	-18.46	-18.45	-18.44	-18.43	-18.42	-18.41	-18.4	-18.39	-18.38	-18.37	-18.36	-18.35	-18.34	-18.33	-18.32	-18.31	-18.3	-18.29	-18.28	-18.27	-18.26	-18.25	-18.24	-18.23	-18.22	-18.21	-18.2	-18.19	-18.18	-18.17	-18.16	-18.15	-18.14	-18.13	-18.12	-18.11	-18.1	-18.09	-18.08	-18.07	-18.06	-18.05	-18.04	-18.03	-18.02	-18.01	-18	-17.99	-17.98	-17.97	-17.96	-17.95	-17.94	-17.93	-17.92	-17.91	-17.9	-17.89	-17.88	-17.87	-17.86	-17.85	-17.84	-17.83	-17.82	-17.81	-17.8	-17.79	-17.78	-17.77	-17.76	-17.75	-17.74	-17.73	-17.72	-17.71	-17.7	-17.69	-17.68	-17.67	-17.66	-17.65	-17.64	-17.63	-17.62	-17.61	-17.6	-17.59	-17.58	-17.57	-17.56	-17.55	-17.54	-17.53	-17.52	-17.51	-17.5	-17.49	-17.48	-17.47	-17.46	-17.45	-17.44	-17.43	-17.42	-17.41	-17.4	-17.39	-17.38	-17.37	-17.36	-17.35	-17.34	-17.33	-17.32	-17.31	-17.3	-17.29	-17.28	-17.27	-17.26	-17.25	-17.24	-17.23	-17.22	-17.21	-17.2	-17.19	-17.18	-17.17	-17.16	-17.15	-17.14	-17.13	-17.12	-17.11	-17.1	-17.09	-17.08	-17.07	-17.06	-17.05	-17.04	-17.03	-17.02	-17.01	-17	-16.99	-16.98	-16.97	-16.96	-16.95	-16.94	-16.93	-16.92	-16.91	-16.9	-16.89	-16.88	-16.87	-16.86	-16.85	-16.84	-16.83	-16.82	-16.81	-16.8	-16.79	-16.78	-16.77	-16.76	-16.75	-16.74	-16.73	-16.72	-16.71	-16.7	-16.69	-16.68	-16.67	-16.66	-16.65	-16.64	-16.63	-16.62	-16.61	-16.6	-16.59	-16.58	-16.57	-16.56	-16.55	-16.54	-16.53	-16.52	-16.51	-16.5	-16.49	-16.48	-16.47	-16.46	-16.45	-16.44	-16.43	-16.42	-16.41	-16.4	-16.39	-16.38	-16.37	-16.36	-16.35	-16.34	-16.33	-16.32	-16.31	-16.3	-16.29	-16.28	-16.27	-16.26	-16.25	-16.24	-16.23	-16.22	-16.21	-16.2	-16.19	-16.18	-16.17	-16.16	-16.15	-16.14	-16.13	-16.12	-16.11	-16.1	-16.09	-16.08	-16.07	-16.06	-16.05	-16.04	-16.03	-16.02	-16.01	-16	-15.99	-15.98	-15.97	-15.96	-15.95	-15.94	-15.93	-15.92	-15.91	-15.9	-15.89	-15.88	-15.87	-15.86	-15.85	-15.84	-15.83	-15.82	-15.81	-15.8	-15.79	-15.78	-15.77	-15.76	-15.75	-15.74	-15.73	-15.72	-15.71	-15.7	-15.69	-15.68	-15.67	-15.66	-15.65	-15.64	-15.63	-15.62	-15.61	-15.6	-15.59	-15.58	-15.57	-15.56	-15.55	-15.54	-15.53	-15.52	-15.51	-15.5	-15.49	-15.48	-15.47	-15.46	-15.45	-15.44	-15.43	-15.42	-15.41	-15.4	-15.39	-15.38	-15.37	-15.36	-15.35	-15.34	-15.33	-15.32	-15.31	-15.3	-15.29	-15.28	-15.27	-15.26	-15.25	-15.24	-15.23	-15.22	-15.21	-15.2	-15.19	-15.18	-15.17	-15.16	-15.15	-15.14	-15.13	-15.12	-15.11	-15.1	-15.09	-15.08	-15.07	-15.06	-15.05	-15.04	-15.03	-15.02	-15.01	-15	-14.99	-14.98	-14.97	-14.96	-14.95	-14.94	-14.93	-14.92	-14.91	-14.9	-14.89	-14.88	-14.87	-14.86	-14.85	-14.84	-14.83	-14.82	-14.81	-14.8	-14.79	-14.78	-14.77	-14.76	-14.75	-14.74	-14.73	-14.72	-14.71	-14.7	-14.69	-14.68	-14.67	-14.66	-14.65	-14.64	-14.63	-14.62	-14.61	-14.6	-14.59	-14.58	-14.57	-14.56	-14.55	-14.54	-14.53	-14.52	-14.51	-14.5	-14.49	-14.48	-14.47	-14.46	-14.45	-14.44	-14.43	-14.42	-14.41	-14.4	-14.39	-14.38	-14.37	-14.36	-14.35	-14.34	-14.33	-14.32	-14.31	-14.3	-14.29	-14.28	-14.27	-14.26	-14.25	-14.24	-14.23	-14.22	-14.21	-14.2	-14.19	-14.18	-14.17	-14.16	-14.15	-14.14	-14.13	-14.12	-14.11	-14.1	-14.09	-14.08	-14.07	-14.06	-14.05	-14.04	-14.03	-14.02	-14.01	-14	-13.99	-13.98	-13.97	-13.96	-13.95	-13.94	-13.93	-13.92	-13.91	-13.9	-13.89	-13.88	-13.87	-13.86	-13.85	-13.84	-13.83	-13.82	-13.81	-13.8	-13.79	-13.78	-13.77	-13.76	-13.75	-13.74	-13.73	-13.72	-13.71	-13.7	-13.69	-13.68	-13.67	-13.66	-13.65	-13.64	-13.63	-13.62	-13.61	-13.6	-13.59	-13.58	-13.57	-13.56	-13.55	-13.54	-13.53	-13.52	-13.51	-13.5	-13.49	-13.48	-13.47	-13.46	-13.45	-13.44	-13.43	-13.42	-13.41	-13.4	-13.39	-13.38	-13.37	-13.36	-13.35	-13.34	-13.33	-13.32	-13.31	-13.3	-13.29	-13.28	-13.27	-13.26	-13.25	-13.24	-13.23	-13.22	-13.21	-13.2	-13.19	-13.18	-13.17	-13.16	-13.15	-13.14	-13.13	-13.12	-13.11	-13.1	-13.09	-13.08	-13.07	-13.06	-13.05	-13.04	-13.03	-13.02	-13.01	-13	-12.99	-12.98	-12.97	-12.96	-12.95	-12.94	-12.93	-12.92	-12.91	-12.9	-12.89	-12.88	-12.87	-12.86	-12.85	-12.84	-12.83	-12.82	-12.81	-12.8	-12.79	-12.78	-12.77	-12.76	-12.75	-12.74	-12.73	-12.72	-12.71	-12.7	-12.69	-12.68	-12.67	-12.66	-12.65	-12.64	-12.63	-12.62	-12.61	-12.6	-12.59	-12.58	-12.57	-12.56	-12.55	-12.54	-12.53	-12.52	-12.51	-12.5	-12.49	-12.48	-12.47	-12.46	-12.45	-12.44	-12.43	-12.42	-12.41	-12.4	-12.39	-12.38	-12.37	-12.36	-12.35	-12.34	-12.33	-12.32	-12.31	-12.3	-12.29	-12.28	-12.27	-12.26	-12.25	-12.24	-12.23	-12.22	-12.21	-12.2	-12.19	-12.18	-12.17	-12.16	-12.15	-12.14	-12.13	-12.12	-12.11	-12.1	-12.09	-12.08	-12.07	-12.06	-12.05	-12.04	-12.03	-12.02	-12.01	-12	-11.99	-11.98	-11.97	-11.96	-11.95	-11.94	-11.93	-11.92	-11.91	-11.9	-11.89	-11.88	-11.87	-11.86	-11.85	-11.84	-11.83	-11.82	-11.81	-11.8	-11.79	-11.78	-11.77	-11.76	-11.75	-11.74	-11.73	-11.72	-11.71	-11.7	-11.69	-11.68	-11.67	-11.66	-11.65	-11.64	-11.63	-11.62	-11.61	-11.6	-11.59	-11.58	-11.57	-11.56	-11.55	-11.54	-11.53	-11.52	-11.51	-11.5	-11.49	-11.48	-11.47	-11.46	-11.45	-11.44	-11.43	-11.42	-11.41	-11.4	-11.39	-11.38	-11.37	-11.36	-11.35	-11.34	-11.33	-11.32	-11.31	-11.3	-11.29	-11.28	-11.27	-11.26	-11.25	-11.24	-11.23	-11.22	-11.21	-11.2	-11.19	-11.18	-11.17	-11.16	-11.15	-11.14	-11.13	-11.12	-11.11	-11.1	-11.09	-11.08	-11.07	-11.06	-11.05	-11.04	-11.03	-11.02	-11.01	-11	-10.99	-10.98	-10.97	-10.96	-10.95	-10.94	-10.93	-10.92	-10.91	-10.9	-10.89	-10.88	-10.87	-10.86	-10.85	-10.84	-10.83	-10.82	-10.81	-10.8	-10.79	-10.78	-10.77	-10.76	-10.75	-10.74	-10.73	-10.72	-10.71	-10.7	-10.69	-10.68	-10.67	-10.66	-10.65	-10.64	-10.63	-10.62	-10.61	-10.6	-10.59	-10.58	-10.57	-10.56	-10.55	-10.54	-10.53	-10.52	-10.51	-10.5	-10.49	-10.48	-10.47	-10.46	-10.45	-10.44	-10.43	-10.42	-10.41	-10.4	-10.39	-10.38	-10.37	-10.36	-10.35	-10.34	-10.33	-10.32	-10.31	-10.3	-10.29	-10.28	-10.27	-10.26	-10.25	-10.24	-10.23	-10.22	-10.21	-10.2	-10.19	-10.18	-10.17	-10.16	-10.15	-10.14	-10.13	-10.12	-10.11	-10.1	-10.09	-10.08	-10.07	-10.06	-10.05	-10.04	-10.03	-10.02	-10.01	-10	-9.99	-9.98	-9.97	-9.96	-9.95	-9.94	-9.93	-9.92	-9.91	-9.9	-9.89	-9.88	-9.87	-9.86	-9.85	-9.84	-9.83	-9.82	-9.81	-9.8	-9.79	-9.78	-9.77	-9.76	-9.75	-9.74	-9.73	-9.72	-9.71	-9.7	-9.69	-9.68	-9.67	-9.66	-9.65	-9.64	-9.63	-9.62	-9.61	-9.6	-9.59	-9.58	-9.57	-9.56	-9.55	-9.54	-9.53	-9.52	-9.51	-9.5	-9.49	-9.48	-9.47	-9.46	-9.45	-9.44	-9.43	-9.42	-9.41	-9.4	-9.39	-9.38	-9.37	-9.36	-9.35	-9.34	-9.33	-9.32	-9.31	-9.3	-9.29	-9.28	-9.27	-9.26	-9.25	-9.24	-9.23	-9.22	-9.21	-9.2	-9.19	-9.18	-9.17	-9.16	-9.15	-9.14	-9.13	-9.12	-9.11	-9.1	-9.09	-9.08	-9.07	-9.06	-9.05	-9.04	-9.03	-9.02	-9.01	-9	-8.99	-8.98	-8.97	-8.96	-8.95	-8.94	-8.93	-8.92	-8.91	-8.9	-8.89	-8.88	-8.87	-8.86	-8.85	-8.84	-8.83	-8.82	-8.81	-8.8	-8.79	-8.78	-8.77	-8.76	-8.75	-8.74	-8.73	-8.72	-8.71	-8.7	-8.69	-8.68	-8.67	-8.66	-8.65	-8.64	-8.63	-8.62	-8.61	-8.6	-8.59	-8.58	-8.57	-8.56	-8.55	-8.54	-8.53	-8.52	-8.51	-8.5	-8.49	-8.48	-8.47	-8.46	-8.45	-8.44	-8.43	-8.42	-8.41	-8.4	-8.39	-8.38	-8.37	-8.36	-8.35	-8.34	-8.33	-8.32	-8.31	-8.3	-8.29	-8.28	-8.27	-8.26	-8.25	-8.24	-8.23	-8.22	-8.21	-8.2	-8.19	-8.18	-8.17	-8.16	-8.15	-8.14	-8.13	-8.12	-8.11	-8.1	-8.09	-8.08	-8.07	-8.06	-8.05	-8.04	-8.03	-8.02	-8.01	-8	-7.99	-7.98	-7.97	-7.96	-7.95	-7.94	-7.93	-7.92	-7.91	-7.9	-7.89	-7.88	-7.87	-7.86	-7.85	-7.84	-7.83	-7.82	-7.81	-7.8	-7.79	-7.78	-7.77	-7.76	-7.75	-7.74	-7.73	-7.72	-7.71	-7.7	-7.69	-7.68	-7.67	-7.66	-7.65	-7.64	-7.63	-7.62	-7.61	-7.6	-7.59	-7.58	-7.57	-7.56	-7.55	-7.54	-7.53	-7.52	-7.51	-7.5	-7.49	-7.48	-7.47	-7.46	-7.45	-7.44	-7.43	-7.42	-7.41	-7.4	-7.39	-7.38	-7.37	-7.36	-7.35	-7.34	-7.33	-7.32	-7.31	-7.3	-7.29	-7.28	-7.27	-7.26	-7.25	-7.24	-7.23	-7.22	-7.21	-7.2	-7.19	-7.18	-7.17	-7.16	-7.15	-7.14	-7.13	-7.12	-7.11	-7.1	-7.09	-7.08	-7.07	-7.06	-7.05	-7.04	-7.03	-7.02	-7.01	-7	-6.99	-6.98	-6.97	-6.96	-6.95	-6.94	-6.93	-6.92	-6.91	-6.9	-6.89	-6.88	-6.87	-6.86	-6.85	-6.84	-6.83	-6.82	-6.81	-6.8	-6.79	-6.78	-6.77	-6.76	-6.75	-6.74	-6.73	-6.72	-6.71	-6.7	-6.69	-6.68	-6.67	-6.66	-6.65	-6.64	-6.63	-6.62	-6.61	-6.6	-6.59	-6.58	-6.57	-6.56	-6.55	-6.54	-6.53	-6.52	-6.51	-6.5	-6.49	-6.48	-6.47	-6.46	-6.45	-6.44	-6.43	-6.42	-6.41	-6.4	-6.39	-6.38	-6.37	-6.36	-6.35	-6.34	-6.33	-6.32	-6.31	-6.3	-6.29	-6.28	-6.27	-6.26	-6.25	-6.24	-6.23	-6.22	-6.21	-6.2	-6.19	-6.18	-6.17	-6.16	-6.15	-6.14	-6.13	-6.12	-6.11	-6.1	-6.09	-6.08	-6.07	-6.06	-6.05	-6.04	-6.03	-6.02	-6.01	-6	-5.99	-5.98	-5.97	-5.96	-5.95	-5.94	-5.93	-5.92	-5.91	-5.9	-5.89	-5.88	-5.87	-5.86	-5.85	-5.84	-5.83	-5.82	-5.81	-5.8	-5.79	-5.78	-5.77	-5.76	-5.75	-5.74	-5.73	-5.72	-5.71	-5.7	-5.69	-5.68	-5.67	-5.66	-5.65	-5.64	-5.63	-5.62	-5.61	-5.6	-5.59	-5.58	-5.57	-5.56	-5.55	-5.54	-5.53	-5.52	-5.51	-5.5	-5.49	-5.48	-5.47	-5.46	-5.45	-5.44	-5.43	-5.42	-5.41	-5.4	-5.39	-5.38	-5.37	-5.36	-5.35	-5.34	-5.33	-5.32	-5.31	-5.3	-5.29	-5.28	-5.27	-5.26	-5.25	-5.24	-5.23	-5.22	-5.21	-5.2	-5.19	-5.18	-5.17	-5.16	-5.15	-5.14	-5.13	-5.12	-5.11	-5.1	-5.09	-5.08	-5.07	-5.06	-5.05	-5.04	-5.03	-5.02	-5.01	-5	-4.99	-4.98	-4.97	-4.96	-4.95	-4.94	-4.93	-4.92	-4.91	-4.9	-4.89	-4.88	-4.87	-4.86	-4.85	-4.84	-4.83	-4.82	-4.81	-4.8	-4.79	-4.78	-4.77	-4.76	-4.75	-4.74	-4.73	-4.72	-4.71	-4.7	-4.69	-4.68	-4.67	-4.66	-4.65	-4.64	-4.63	-4.62	-4.61	-4.6	-4.59	-4.58	-4.57	-4.56	-4.55	-4.54	-4.53	-4.52	-4.51	-4.5	-4.49	-4.48	-4.47	-4.46	-4.45	-4.44	-4.43	-4.42	-4.41	-4.4	-4.39	-4.38	-4.37	-4.36	-4.35	-4.34	-4.33	-4.32	-4.31	-4.3	-4.29	-4.28	-4.27	-4.26	-4.25	-4.24	-4.23	-4.22	-4.21	-4.2	-4.19	-4.18	-4.17	-4.16	-4.15	-4.14	-4.13	-4.12	-4.11	-4.1	-4.09	-4.08	-4.07	-4.06	-4.05	-4.04	-4.03	-4.02	-4.01	-4	-3.99	-3.98	-3.97	-3.96	-3.95	-3.94	-3.93	-3.92	-3.91	-3.9	-3.89	-3.88	-3.87	-3.86	-3.85	-3.84	-3.83	-3.82	-3.81	-3.8	-3.79	-3.78	-3.77	-3.76	-3.75	-3.74	-3.73	-3.72	-3.71	-3.7	-3.69	-3.68	-3.67	-3.66	-3.65	-3.64	-3.63	-3.62	-3.61	-3.6	-3.59	-3.58	-3.57	-3.56	-3.55	-3.54	-3.53	-3.52	-3.51	-3.5	-3.49	-3.48	-3.47	-3.46	-3.45	-3.44	-3.43	-3.42	-3.41	-3.4	-3.39	-3.38	-3.37	-3.36	-3.35	-3.34	-3.33	-3.32	-3.31	-3.3	-3.29	-3.28	-3.27	-3.26	-3.25	-3.24	-3.23	-3.22	-3.21	-3.2	-3.19	-3.18	-3.17	-3.16	-3.15	-3.14	-3.13	-3.12	-3.11	-3.1	-3.09	-3.08	-3.07	-3.06	-3.05	-3.04	-3.03	-3.02	-3.01	-3	-2.99	-2.98	-2.97	-2.96	-2.95	-2.94	-2.93	-2.92	-2.91	-2.9	-2.89	-2.88	-2.87	-2.86	-2.85	-2.84	-2.83	-2.82	-2.81	-2.8	-2.79	-2.78	-2.77	-2.76	-2.75	-2.74	-2.73	-2.72	-2.71	-2.7	-2.69	-2.68	-2.67	-2.66	-2.65	-2.64	-2.63	-2.62	-2.61	-2.6	-2.59	-2.58	-2.57	-2.56	-2.55	-2.54	-2.53	-2.52	-2.51	-2.5	-2.49	-2.48	-2.47	-2.46	-2.45	-2.44	-2.43	-2.42	-2.41	-2.4	-2.39	-2.38	-2.37	-2.36	-2.35	-2.34	-2.33	-2.32	-2.31	-2.3	-2.29	-2.28	-2.27	-2.26	-2.25	-2.24	-2.23	-2.22	-2.21	-2.2	-2.19	-2.18	-2.17	-2.16	-2.15	-2.14	-2.13	-2.12	-2.11	-2.1	-2.09	-2.08	-2.07	-2.06	-2.05	-2.04	-2.03	-2.02	-2.01	-2	-1.99	-1.98	-1.97	-1.96	-1.95	-1.94	-1.93	-1.92	-1.91	-1.9	-1.89	-1.88	-1.87	-1.86	-1.85	-1.84	-1.83	-1.82	-1.81	-1.8	-1.79	-1.78	-1.77	-1.76	-1.75	-1.74	-1.73	-1.72	-1.71	-1.7	-1.69	-1.68	-1.67	-1.66	-1.65	-1.64	-1.63	-1.62	-1.61	-1.6	-1.59	-1.58	-1.57	-1.56	-1.55	-1.54	-1.53	-1.52	-1.51	-1.5	-1.49	-1.48	-1.47	-1.46	-1.45	-1.44	-1.43	-1.42	-1.41	-1.4	-1.39	-1.38	-1.37	-1.36	-1.35	-1.34	-1.33	-1.32	-1.31	-1.3	-1.29	-1.28	-1.27	-1.26	-1.25	-1.24	-1.23	-1.22	-1.21	-1.2	-1.19	-1.18	-1.17	-1.16	-1.15	-1.14	-1.13	-1.12	-1.11	-1.1	-1.09	-1.08	-1.07	-1.06	-1.05	-1.04	-1.03	-1.02	-1.01	-1	-0.99	-0.98	-0.97	-0.96	-0.95	-0.94	-0.93	-0.92	-0.91	-0.9	-0.89	-0.88	-0.87	-0.86	-0.85	-0.84	-0.83	-0.82	-0.81	-0.8	-0.79	-0.78	-0.77	-0.76	-0.75	-0.74	-0.73	-0.72	-0.71	-0.7	-0.69	-0.68	-0.67	-0.66	-0.65	-0.64	-0.63	-0.62	-0.61	-0.6	-0.59	-0.58	-0.57	-0.56	-0.55	-0.54	-0.53	-0.52	-0.51	-0.5	-0.49	-0.48	-0.47	-0.46	-0.45	-0.44	-0.43	-0.42	-0.41	-0.4	-0.39	-0.38	-0.37	-0.36	-0.35	-0.34	-0.33	-0.32	-0.31	-0.3	-0.29	-0.28	-0.27	-0.26	-0.25	-0.24	-0.23	-0.22	-0.21	-0.2	-0.19	-0.18	-0.17	-0.16	-0.15	-0.14	-0.13	-0.12	-0.11	-0.1	-0.09	-0.08	-0.07	-0.06	-0.05	-0.04	-0.03	-0.02	-0.01	0	0.01	0.02	0.03	0.04	0.05	0.06	0.07	0.08	0.09	0.1	0.11	0.12	0.13	0.14	0.15	0.16	0.17	0.18	0.19	0.2	0.21	0.22	0.23	0.24	0.25	0.26	0.27	0.28	0.29	0.3	0.31	0.32	0.33	0.34	0.35	0.36	0.37	0.38	0.39	0.4	0.41	0.42	0.43	0.44	0.45	0.46	0.47	0.48	0.49	0.5	0.51	0.52	0.53	0.54	0.55	0.56	0.57	0.58	0.59	0.6	0.61	0.62	0.63	0.64	0.65	0.66	0.67	0.68	0.69	0.7	0.71	0.72	0.73	0.74	0.75	0.76	0.77	0.78	0.79	0.8	0.81	0.82	0.83	0.84	0.85	0.86	0.87	0.88	0.89	0.9	0.91	0.92	0.93	0.94	0.95	0.96	0.97	0.98	0.99	1	1.01	1.02	1.03	1.04	1.05	1.06	1.07	1.08	1.09	1.1	1.11	1.12	1.13	1.14	1.15	1.16	1.17	1.18	1.19	1.2	1.21	1.22	1.23	1.24	1.25	1.26	1.27	1.28	1.29	1.3	1.31	1.32	1.33	1.34	1.35	1.36	1.37	1.38	1.39	1.4	1.41	1.42	1.43	1.44	1.45	1.46	1.47	1.48	1.49	1.5	1.51	1.52	1.53	1.54	1.55	1.56	1.57	1.58	1.59	1.6	1.61	1.62	1.63	1.64	1.65	1.66	1.67	1.68	1.69	1.7	1.71	1.72	1.73	1.74	1.75	1.76	1.77	1.78	1.79	1.8	1.81	1.82	1.83	1.84	1.85	1.86	1.87	1.88	1.89	1.9	1.91	1.92	1.93	1.94	1.95	1.96	1.97	1.98	1.99	2	2.01	2.02	2.03	2.04	2.05	2.06	2.07	2.08	2.09	2.1	2.11	2.12	2.13	2.14	2.15	2.16	2.17	2.18	2.19	2.2	2.21	2.22	2.23	2.24	2.25	2.26	2.27	2.28	2.29	2.3	2.31	2.32	2.33	2.34	2.35	2.36	2.37	2.38	2.39	2.4	2.41	2.42	2.43	2.44	2.45	2.46	2.47	2.48	2.49	2.5	2.51	2.52	2.53	2.54	2.55	2.56	2.57	2.58	2.59	2.6	2.61	2.62	2.63	2.64	2.65	2.66	2.67	2.68	2.69	2.7	2.71	2.72	2.73	2.74	2.75	2.76	2.77	2.78	2.79	2.8	2.81	2.82	2.83	2.84	2.85	2.86	2.87	2.88	2.89	2.9	2.91	2.92	2.93	2.94	2.95	2.96	2.97	2.98	2.99	3	3.01	3.02	3.03	3.04	3.05	3.06	3.07	3.08	3.09	3.1	3.11	3.12	3.13	3.14	3.15	3.16	3.17	3.18	3.19	3.2	3.21	3.22	3.23	3.24	3.25	3.26	3.27	3.28	3.29	3.3	3.31	3.32	3.33	3.34	3.35	3.36	3.37	3.38	3.39	3.4	3.41	3.42	3.43	3.44	3.45	3.46	3.47	3.48	3.49	3.5	3.51	3.52	3.53	3.54	3.55	3.56	3.57	3.58	3.59	3.6	3.61	3.62	3.63	3.64	3.65	3.66	3.67	3.68	3.69	3.7	3.71	3.72	3.73	3.74	3.75	3.76	3.77	3.78	3.79	3.8	3.81	3.82	3.83	3.84	3.85	3.86	3.87	3.88	3.89	3.9	3.91	3.92	3.93	3.94	3.95	3.96	3.97	3.98	3.99	4	4.01	4.02	4.03	4.04	4.05	4.06	4.07	4.08	4.09	4.1	4.11	4.12	4.13	4.14	4.15	4.16	4.17	4.18	4.19	4.2	4.21	4.22	4.23	4.24	4.25	4.26	4.27	4.28	4.29	4.3	4.31	4.32	4.33	4.34	4.35	4.36	4.37	4.38	4.39	4.4	4.41	4.42	4.43	4.44	4.45	4.46	4.47	4.48	4.49	4.5	4.51	4.52	4.53	4.54	4.55	4.56	4.57	4.58	4.59	4.6	4.61	4.62	4.63	4.64	4.65	4.66	4.67	4.68	4.69	4.7	4.71	4.72	4.73	4.74	4.75	4.76	4.77	4.78	4.79	4.8	4.81	4.82	4.83	4.84	4.85	4.86	4.87	4.88	4.89	4.9	4.91	4.92	4.93	4.94	4.95	4.96	4.97	4.98	4.99	5	5.01	5.02	5.03	5.04	5.05	5.06	5.07	5.08	5.09	5.1	5.11	5.12	5.13	5.14	5.15	5.16	5.17	5.18	5.19	5.2	5.21	5.22	5.23	5.24	5.25	5.26	5.27	5.28	5.29	5.3	5.31	5.32	5.33	5.34	5.35	5.36	5.37	5.38	5.39	5.4	5.41	5.42	5.43	5.44	5.45	5.46	5.47	5.48	5.49	5.5	5.51	5.52	5.53	5.54	5.55	5.56	5.57	5.58	5.59	5.6	5.61	5.62	5.63	5.64	5.65	5.66	5.67	5.68	5.69	5.7	5.71	5.72	5.73	5.74	5.75	5.76	5.77	5.78	5.79	5.8	5.81	5.82	5.83	5.84	5.85	5.86	5.87	5.88	5.89	5.9	5.91	5.92	5.93	5.94	5.95	5.96	5.97	5.98	5.99	6	6.01	6.02	6.03	6.04	6.05	6.06	6.07	6.08	6.09	6.1	6.11	6.12	6.13	6.14	6.15	6.16	6.17	6.18	6.19	6.2	6.21	6.22	6.23	6.24	6.25	6.26	6.27	6.28	6.29	6.3	6.31	6.32	6.33	6.34	6.35	6.36	6.37	6.38	6.39	6.4	6.41	6.42	6.43	6.44	6.45	6.46	6.47	6.48	6.49	6.5	6.51	6.52	6.53	6.54	6.55	6.56	6.57	6.58	6.59	6.6	6.61	6.62	6.63	6.64	6.65	6.66	6.67	6.68	6.69	6.7	6.71	6.72	6.73	6.74	6.75	6.76	6.77	6.78	6.79	6.8	6.81	6.82	6.83	6.84	6.85	6.86	6.87	6.88	6.89	6.9	6.91	6.92	6.93	6.94	6.95	6.96	6.97	6.98	6.99	7	7.01	7.02	7.03	7.04	7.05	7.06	7.07	7.08	7.09	7.1	7.11	7.12	7.13	7.14	7.15	7.16	7.17	7.18	7.19	7.2	7.21	7.22	7.23	7.24	7.25	7.26	7.27	7.28	7.29	7.3	7.31	7.32	7.33	7.34	7.35	7.36	7.37	7.38	7.39	7.4	7.41	7.42	7.43	7.44	7.45	7.46	7.47	7.48	7.49	7.5	7.51	7.52	7.53	7.54	7.55	7.56	7.57	7.58	7.59	7.6	7.61	7.62	7.63	7.64	7.65	7.66	7.67	7.68	7.69	7.7	7.71	7.72	7.73	7.74	7.75	7.76	7.77	7.78	7.79	7.8	7.81	7.82	7.83	7.84	7.85	7.86	7.87	7.88	7.89	7.9	7.91	7.92	7.93	7.94	7.95	7.96	7.97	7.98	7.99	8	8.01	8.02	8.03	8.04	8.05	8.06	8.07	8.08	8.09	8.1	8.11	8.12	8.13	8.14	8.15	8.16	8.17	8.18	8.19	8.2	8.21	8.22	8.23	8.24	8.25	8.26	8.27	8.28	8.29	8.3	8.31	8.32	8.33	8.34	8.35	8.36	8.37	8.38	8.39	8.4	8.41	8.42	8.43	8.44	8.45	8.46	8.47	8.48	8.49	8.5	8.51	8.52	8.53	8.54	8.55	8.56	8.57	8.58	8.59	8.6	8.61	8.62	8.63	8.64	8.65	8.66	8.67	8.68	8.69	8.7	8.71	8.72	8.73	8.74	8.75	8.76	8.77	8.78	8.79	8.8	8.81	8.82	8.83	8.84	8.85	8.86	8.87	8.88	8.89	8.9	8.91	8.92	8.93	8.94	8.95	8.96	8.97	8.98	8.99	9	9.01	9.02	9.03	9.04	9.05	9.06	9.07	9.08	9.09	9.1	9.11	9.12	9.13	9.14	9.15	9.16	9.17	9.18	9.19	9.2	9.21	9.22	9.23	9.24	9.25	9.26	9.27	9.28	9.29	9.3	9.31	9.32	9.33	9.34	9.35	9.36	9.37	9.38	9.39	9.4	9.41	9.42	9.43	9.44	9.45	9.46	9.47	9.48	9.49	9.5	9.51	9.52	9.53	9.54	9.55	9.56	9.57	9.58	9.59	9.6	9.61	9.62	9.63	9.64	9.65	9.66	9.67	9.68	9.69	9.7	9.71	9.72	9.73	9.74	9.75	9.76	9.77	9.78	9.79	9.8	9.81	9.82	9.83	9.84	9.85	9.86	9.87	9.88	9.89	9.9	9.91	9.92	9.93	9.94	9.95	9.96	9.97	9.98	9.99	10	10.01	10.02	10.03	10.04	10.05	10.06	10.07	10.08	10.09	10.1	10.11	10.12	10.13	10.14	10.15	10.16	10.17	10.18	10.19	10.2	10.21	10.22	10.23	10.24	10.25	10.26	10.27	10.28	10.29	10.3	10.31	10.32	10.33	10.34	10.35	10.36	10.37	10.38	10.39	10.4	10.41	10.42	10.43	10.44	10.45	10.46	10.47	10.48	10.49	10.5	10.51	10.52	10.53	10.54	10.55	10.56	10.57	10.58	10.59	10.6	10.61	10.62	10.63	10.64	10.65	10.66	10.67	10.68	10.69	10.7	10.71	10.72	10.73	10.74	10.75	10.76	10.77	10.78	10.79	10.8	10.81	10.82	10.83	10.84	10.85	10.86	10.87	10.88	10.89	10.9	10.91	10.92	10.93	10.94	10.95	10.96	10.97	10.98	10.99	11	11.01	11.02	11.03	11.04	11.05	11.06	11.07	11.08	11.09	11.1	11.11	11.12	11.13	11.14	11.15	11.16	11.17	11.18	11.19	11.2	11.21	11.22	11.23	11.24	11.25	11.26	11.27	11.28	11.29	11.3	11.31	11.32	11.33	11.34	11.35	11.36	11.37	11.38	11.39	11.4	11.41	11.42	11.43	11.44	11.45	11.46	11.47	11.48	11.49	11.5	11.51	11.52	11.53	11.54	11.55	11.56	11.57	11.58	11.59	11.6	11.61	11.62	11.63	11.64	11.65	11.66	11.67	11.68	11.69	11.7	11.71	11.72	11.73	11.74	11.75	11.76	11.77	11.78	11.79	11.8	11.81	11.82	11.83	11.84	11.85	11.86	11.87	11.88	11.89	11.9	11.91	11.92	11.93	11.94	11.95	11.96	11.97	11.98	11.99	12	12.01	12.02	12.03	12.04	12.05	12.06	12.07	12.08	12.09	12.1	12.11	12.12	12.13	12.14	12.15	12.16	12.17	12.18	12.19	12.2	12.21	12.22	12.23	12.24	12.25	12.26	12.27	12.28	12.29	12.3	12.31	12.32	12.33	12.34	12.35	12.36	12.37	12.38	12.39	12.4	12.41	12.42	12.43	12.44	12.45	12.46	12.47	12.48	12.49	12.5	12.51	12.52	12.53	12.54	12.55	12.56	12.57	12.58	12.59	12.6	12.61	12.62	12.63	12.64	12.65	12.66	12.67	12.68	12.69	12.7	12.71	12.72	12.73	12.74	12.75	12.76	12.77	12.78	12.79	12.8	12.81	12.82	12.83	12.84	12.85	12.86	12.87	12.88	12.89	12.9	12.91	12.92	12.93	12.94	12.95	12.96	12.97	12.98	12.99	13	13.01	13.02	13.03	13.04	13.05	13.06	13.07	13.08	13.09	13.1	13.11	13.12	13.13	13.14	13.15	13.16	13.17	13.18	13.19	13.2	13.21	13.22	13.23	13.24	13.25	13.26	13.27	13.28	13.29	13.3	13.31	13.32	13.33	13.34	13.35	13.36	13.37	13.38	13.39	13.4	13.41	13.42	13.43	13.44	13.45	13.46	13.47	13.48	13.49	13.5	13.51	13.52	13.53	13.54	13.55	13.56	13.57	13.58	13.59	13.6	13.61	13.62	13.63	13.64	13.65	13.66	13.67	13.68	13.69	13.7	13.71	13.72	13.73	13.74	13.75	13.76	13.77	13.78	13.79	13.8	13.81	13.82	13.83	13.84	13.85	13.86	13.87	13.88	13.89	13.9	13.91	13.92	13.93	13.94	13.95	13.96	13.97	13.98	13.99	14	14.01	14.02	14.03	14.04	14.05	14.06	14.07	14.08	14.09	14.1	14.11	14.12	14.13	14.14	14.15	14.16	14.17	14.18	14.19	14.2	14.21	14.22	14.23	14.24	14.25	14.26	14.27	14.28	14.29	14.3	14.31	14.32	14.33	14.34	14.35	14.36	14.37	14.38	14.39	14.4	14.41	14.42	14.43	14.44	14.45	14.46	14.47	14.48	14.49	14.5	14.51	14.52	14.53	14.54	14.55	14.56	14.57	14.58	14.59	14.6	14.61	14.62	14.63	14.64	14.65	14.66	14.67	14.68	14.69	14.7	14.71	14.72	14.73	14.74	14.75	14.76	14.77	14.78	14.79	14.8	14.81	14.82	14.83	14.84	14.85	14.86	14.87	14.88	14.89	14.9	14.91	14.92	14.93	14.94	14.95	14.96	14.97	14.98	14.99	15	15.01	15.02	15.03	15.04	15.05	15.06	15.07	15.08	15.09	15.1	15.11	15.12	15.13	15.14	15.15	15.16	15.17	15.18	15.19	15.2	15.21	15.22	15.23	15.24	15.25	15.26	15.27	15.28	15.29	15.3	15.31	15.32	15.33	15.34	15.35	15.36	15.37	15.38	15.39	15.4	15.41	15.42	15.43	15.44	15.45	15.46	15.47	15.48	15.49	15.5	15.51	15.52	15.53	15.54	15.55	15.56	15.57	15.58	15.59	15.6	15.61	15.62	15.63	15.64	15.65	15.66	15.67	15.68	15.69	15.7	15.71	15.72	15.73	15.74	15.75	15.76	15.77	15.78	15.79	15.8	15.81	15.82	15.83	15.84	15.85	15.86	15.87	15.88	15.89	15.9	15.91	15.92	15.93	15.94	15.95	15.96	15.97	15.98	15.99	16	16.01	16.02	16.03	16.04	16.05	16.06	16.07	16.08	16.09	16.1	16.11	16.12	16.13	16.14	16.15	16.16	16.17	16.18	16.19	16.2	16.21	16.22	16.23	16.24	16.25	16.26	16.27	16.28	16.29	16.3	16.31	16.32	16.33	16.34	16.35	16.36	16.37	16.38	16.39	16.4	16.41	16.42	16.43	16.44	16.45	16.46	16.47	16.48	16.49	16.5	16.51	16.52	16.53	16.54	16.55	16.56	16.57	16.58	16.59	16.6	16.61	16.62	16.63	16.64	16.65	16.66	16.67	16.68	16.69	16.7	16.71	16.72	16.73	16.74	16.75	16.76	16.77	16.78	16.79	16.8	16.81	16.82	16.83	16.84	16.85	16.86	16.87	16.88	16.89	16.9	16.91	16.92	16.93	16.94	16.95	16.96	16.97	16.98	16.99	17	17.01	17.02	17.03	17.04	17.05	17.06	17.07	17.08	17.09	17.1	17.11	17.12	17.13	17.14	17.15	17.16	17.17	17.18	17.19	17.2	17.21	17.22	17.23	17.24	17.25	17.26	17.27	17.28	17.29	17.3	17.31	17.32	17.33	17.34	17.35	17.36	17.37	17.38	17.39	17.4	17.41	17.42	17.43	17.44	17.45	17.46	17.47	17.48	17.49	17.5	17.51	17.52	17.53	17.54	17.55	17.56	17.57	17.58	17.59	17.6	17.61	17.62	17.63	17.64	17.65	17.66	17.67	17.68	17.69	17.7	17.71	17.72	17.73	17.74	17.75	17.76	17.77	17.78	17.79	17.8	17.81	17.82	17.83	17.84	17.85	17.86	17.87	17.88	17.89	17.9	17.91	17.92	17.93	17.94	17.95	17.96	17.97	17.98	17.99	18	18.01	18.02	18.03	18.04	18.05	18.06	18.07	18.08	18.09	18.1	18.11	18.12	18.13	18.14	18.15	18.16	18.17	18.18	18.19	18.2	18.21	18.22	18.23	18.24	18.25	18.26	18.27	18.28	18.29	18.3	18.31	18.32	18.33	18.34	18.35	18.36	18.37	18.38	18.39	18.4	18.41	18.42	18.43	18.44	18.45	18.46	18.47	18.48	18.49	18.5	18.51	18.52	18.53	18.54	18.55	18.56	18.57	18.58	18.59	18.6	18.61	18.62	18.63	18.64	18.65	18.66	18.67	18.68	18.69	18.7	18.71	18.72	18.73	18.74	18.75	18.76	18.77	18.78	18.79	18.8	18.81	18.82	18.83	18.84	18.85	18.86	18.87	18.88	18.89	18.9	18.91	18.92	18.93	18.94	18.95	18.96	18.97	18.98	18.99	19	19.01	19.02	19.03	19.04	19.05	19.06	19.07	19.08	19.09	19.1	19.11	19.12	19.13	19.14	19.15	19.16	19.17	19.18	19.19	19.2	19.21	19.22	19.23	19.24	19.25	19.26	19.27	19.28	19.29	19.3	19.31	19.32	19.33	19.34	19.35	19.36	19.37	19.38	19.39	19.4	19.41	19.42	19.43	19.44	19.45	19.46	19.47	19.48	19.49	19.5	19.51	19.52	19.53	19.54	19.55	19.56	19.57	19.58	19.59	19.6	19.61	19.62	19.63	19.64	19.65	19.66	19.67	19.68	19.69	19.7	19.71	19.72	19.73	19.74	19.75	19.76	19.77	19.78	19.79	19.8	19.81	19.82	19.83	19.84	19.85	19.86	19.87	19.88	19.89	19.9	19.91	19.92	19.93	19.94	19.95	19.96	19.97	19.98	19.99	20	20.01	20.02	20.03	20.04	20.05	20.06	20.07	20.08	20.09	20.1	20.11	20.12	20.13	20.14	20.15	20.16	20.17	20.18	20.19	20.2	20.21	20.22	20.23	20.24	20.25	20.26	20.27	20.28	20.29	20.3	20.31	20.32	20.33	20.34	20.35	20.36	20.37	20.38	20.39	20.4	20.41	20.42	20.43	20.44	20.45	20.46	20.47	20.48	20.49	20.5	20.51	20.52	20.53	20.54	20.55	20.56	20.57	20.58	20.59	20.6	20.61	20.62	20.63	20.64	20.65	20.66	20.67	20.68	20.69	20.7	20.71	20.72	20.73	20.74	20.75	20.76	20.77	20.78	20.79	20.8	20.81	20.82	20.83	20.84	20.85	20.86	20.87	20.88	20.89	20.9	20.91	20.92	20.93	20.94	20.95	20.96	20.97	20.98	20.99	21	21.01	21.02	21.03	21.04	21.05	21.06	21.07	21.08	21.09	21.1	21.11	21.12	21.13	21.14	21.15	21.16	21.17	21.18	21.19	21.2	21.21	21.22	21.23	21.24	21.25	21.26	21.27	21.28	21.29	21.3	21.31	21.32	21.33	21.34	21.35	21.36	21.37	21.38	21.39	21.4	21.41	21.42	21.43	21.44	21.45	21.46	21.47	21.48	21.49	21.5	21.51	21.52	21.53	21.54	21.55	21.56	21.57	21.58	21.59	21.6	21.61	21.62	21.63	21.64	21.65	21.66	21.67	21.68	21.69	21.7	21.71	21.72	21.73	21.74	21.75	21.76	21.77	21.78	21.79	21.8	21.81	21.82	21.83	21.84	21.85	21.86	21.87	21.88	21.89	21.9	21.91	21.92	21.93	21.94	21.95	21.96	21.97	21.98	21.99	22	22.01	22.02	22.03	22.04	22.05	22.06	22.07	22.08	22.09	22.1	22.11	22.12	22.13	22.14	22.15	22.16	22.17	22.18	22.19	22.2	22.21	22.22	22.23	22.24	22.25	22.26	22.27	22.28	22.29	22.3	22.31	22.32	22.33	22.34	22.35	22.36	22.37	22.38	22.39	22.4	22.41	22.42	22.43	22.44	22.45	22.46	22.47	22.48	22.49	22.5	22.51	22.52	22.53	22.54	22.55	22.56	22.57	22.58	22.59	22.6	22.61	22.62	22.63	22.64	22.65	22.66	22.67	22.68	22.69	22.7	22.71	22.72	22.73	22.74	22.75	22.76	22.77	22.78	22.79	22.8	22.81	22.82	22.83	22.84	22.85	22.86	22.87	22.88	22.89	22.9	22.91	22.92	22.93	22.94	22.95	22.96	22.97	22.98	22.99	23	23.01	23.02	23.03	23.04	23.05	23.06	23.07	23.08	23.09	23.1	23.11	23.12	23.13	23.14	23.15	23.16	23.17	23.18	23.19	23.2	23.21	23.22	23.23	23.24	23.25	23.26	23.27	23.28	23.29	23.3	23.31	23.32	23.33	23.34	23.35	23.36	23.37	23.38	23.39	23.4	23.41	23.42	23.43	23.44	23.45	23.46	23.47	23.48	23.49	23.5	23.51	23.52	23.53	23.54	23.55	23.56	23.57	23.58	23.59	23.6	23.61	23.62	23.63	23.64	23.65	23.66	23.67	23.68	23.69	23.7	23.71	23.72	23.73	23.74	23.75	23.76	23.77	23.78	23.79	23.8	23.81	23.82	23.83	23.84	23.85	23.86	23.87	23.88	23.89	23.9	23.91	23.92	23.93	23.94	23.95	23.96	23.97	23.98	23.99	24	24.01	24.02	24.03	24.04	24.05	24.06	24.07	24.08	24.09	24.1	24.11	24.12	24.13	24.14	24.15	24.16	24.17	24.18	24.19	24.2	24.21	24.22	24.23	24.24	24.25	24.26	24.27	24.28	24.29	24.3	24.31	24.32	24.33	24.34	24.35	24.36	24.37	24.38	24.39	24.4	24.41	24.42	24.43	24.44	24.45	24.46	24.47	24.48	24.49	24.5	24.51	24.52	24.53	24.54	24.55	24.56	24.57	24.58	24.59	24.6	24.61	24.62	24.63	24.64	24.65	24.66	24.67	24.68	24.69	24.7	24.71	24.72	24.73	24.74	24.75	24.76	24.77	24.78	24.79	24.8	24.81	24.82	24.83	24.84	24.85	24.86	24.87	24.88	24.89	24.9	24.91	24.92	24.93	24.94	24.95	24.96	24.97	24.98	24.99	25	25.01	25.02	25.03	25.04	25.05	25.06	25.07	25.08	25.09	25.1	25.11	25.12	25.13	25.14	25.15	25.16	25.17	25.18	25.19	25.2	25.21	25.22	25.23	25.24	25.25	25.26	25.27	25.28	25.29	25.3	25.31	25.32	25.33	25.34	25.35	25.36	25.37	25.38	25.39	25.4	25.41	25.42	25.43	25.44	25.45	25.46	25.47	25.48	25.49	25.5	25.51	25.52	25.53	25.54	25.55	25.56	25.57	25.58	25.59	25.6	25.61	25.62	25.63	25.64	25.65	25.66	25.67	25.68	25.69	25.7	25.71	25.72	25.73	25.74	25.75	25.76	25.77	25.78	25.79	25.8	25.81	25.82	25.83	25.84	25.85	25.86	25.87	25.88	25.89	25.9	25.91	25.92	25.93	25.94	25.95	25.96	25.97	25.98	25.99	26	26.01	26.02	26.03	26.04	26.05	26.06	26.07	26.08	26.09	26.1	26.11	26.12	26.13	26.14	26.15	26.16	26.17	26.18	26.19	26.2	26.21	26.22	26.23	26.24	26.25	26.26	26.27	26.28	26.29	26.3	26.31	26.32	26.33	26.34	26.35	26.36	26.37	26.38	26.39	26.4	26.41	26.42	26.43	26.44	26.45	26.46	26.47	26.48	26.49	26.5	26.51	26.52	26.53	26.54	26.55	26.56	26.57	26.58	26.59	26.6	26.61	26.62	26.63	26.64	26.65	26.66	26.67	26.68	26.69	26.7	26.71	26.72	26.73	26.74	26.75	26.76	26.77	26.78	26.79	26.8	26.81	26.82	26.83	26.84	26.85	26.86	26.87	26.88	26.89	26.9	26.91	26.92	26.93	26.94	26.95	26.96	26.97	26.98	26.99	27	27.01	27.02	27.03	27.04	27.05	27.06	27.07	27.08	27.09	27.1	27.11	27.12	27.13	27.14	27.15	27.16	27.17	27.18	27.19	27.2	27.21	27.22	27.23	27.24	27.25	27.26	27.27	27.28	27.29	27.3	27.31	27.32	27.33	27.34	27.35	27.36	27.37	27.38	27.39	27.4	27.41	27.42	27.43	27.44	27.45	27.46	27.47	27.48	27.49	27.5	27.51	27.52	27.53	27.54	27.55	27.56	27.57	27.58	27.59	27.6	27.61	27.62	27.63	27.64	27.65	27.66	27.67	27.68	27.69	27.7	27.71	27.72	27.73	27.74	27.75	27.76	27.77	27.78	27.79	27.8	27.81	27.82	27.83	27.84	27.85	27.86	27.87	27.88	27.89	27.9	27.91	27.92	27.93	27.94	27.95	27.96	27.97	27.98	27.99	28	28.01	28.02	28.03	28.04	28.05	28.06	28.07	28.08	28.09	28.1	28.11	28.12	28.13	28.14	28.15	28.16	28.17	28.18	28.19	28.2	28.21	28.22	28.23	28.24	28.25	28.26	28.27	28.28	28.29	28.3	28.31	28.32	28.33	28.34	28.35	28.36	28.37	28.38	28.39	28.4	28.41	28.42	28.43	28.44	28.45	28.46	28.47	28.48	28.49	28.5	28.51	28.52	28.53	28.54	28.55	28.56	28.57	28.58	28.59	28.6	28.61	28.62	28.63	28.64	28.65	28.66	28.67	28.68	28.69	28.7	28.71	28.72	28.73	28.74	28.75	28.76	28.77	28.78	28.79	28.8	28.81	28.82	28.83	28.84	28.85	28.86	28.87	28.88	28.89	28.9	28.91	28.92	28.93	28.94	28.95	28.96	28.97	28.98	28.99	29	29.01	29.02	29.03	29.04	29.05	29.06	29.07	29.08	29.09	29.1	29.11	29.12	29.13	29.14	29.15	29.16	29.17	29.18	29.19	29.2	29.21	29.22	29.23	29.24	29.25	29.26	29.27	29.28	29.29	29.3	29.31	29.32	29.33	29.34	29.35	29.36	29.37	29.38	29.39	29.4	29.41	29.42	29.43	29.44	29.45	29.46	29.47	29.48	29.49	29.5	29.51	29.52	29.53	29.54	29.55	29.56	29.57	29.58	29.59	29.6	29.61	29.62	29.63	29.64	29.65	29.66	29.67	29.68	29.69	29.7	29.71	29.72	29.73	29.74	29.75	29.76	29.77	29.78	29.79	29.8	29.81	29.82	29.83	29.84	29.85	29.86	29.87	29.88	29.89	29.9	29.91	29.92	29.93	29.94	29.95	29.96	29.97	29.98	29.99	30	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	------------------
Start Encrypt one batch
Encrypt one batch time = 275.982 ms
------------------
------------------
Start The Total Time Consumed
------------------
Start Input > Layer1 
chunkSize32
remainder0
startIndex0
Thread 0: j = 0
Input > Layer1
Thread 1: j = 32
Input > Layer1
Thread 2: j = 64
Input > Layer1
Thread 3: j = 96
Input > Layer1
Thread 0: j = 1
Input > Layer1
Thread 1: j = 33
Input > Layer1
Thread 2: j = 65
Input > Layer1
Thread 3: j = 97
Input > Layer1
Thread 0: j = 2
Input > Layer1
Thread 1: j = 34
Input > Layer1
Thread 2: j = 66
Input > Layer1
Thread 3: j = 98
Input > Layer1
Thread 0: j = 3
Input > Layer1
Thread 1: j = 35
Input > Layer1
Thread 2: j = 67
Input > Layer1
Thread 3: j = 99
Input > Layer1
Thread 0: j = 4
Input > Layer1
Thread 1: j = 36
Input > Layer1
Thread 2: j = 68
Input > Layer1
Thread 3: j = 100
Input > Layer1
Thread 0: j = 5
Input > Layer1
Thread 1: j = 37
Input > Layer1
Thread 2: j = 69
Input > Layer1
Thread 3: j = 101
Input > Layer1
Thread 0: j = 6
Input > Layer1
Thread 1: j = 38
Input > Layer1
Thread 2: j = 70
Input > Layer1
Thread 3: j = 102
Input > Layer1
Thread 0: j = 7
Input > Layer1
Thread 1: j = 39
Input > Layer1
Thread 2: j = 71
Input > Layer1
Thread 3: j = 103
Input > Layer1
Thread 0: j = 8
Input > Layer1
Thread 1: j = 40
Input > Layer1
Thread 2: j = 72
Input > Layer1
Thread 3: j = 104
Input > Layer1
Thread 0: j = 9
Input > Layer1
Thread 1: j = 41
Input > Layer1
Thread 2: j = 73
Input > Layer1
Thread 3: j = 105
Input > Layer1
Thread 0: j = 10
Input > Layer1
Thread 1: j = 42
Input > Layer1
Thread 2: j = 74
Input > Layer1
Thread 3: j = 106
Input > Layer1
Thread 0: j = 11
Input > Layer1
Thread 1: j = 43
Input > Layer1
Thread 2: j = 75
Input > Layer1
Thread 3: j = 107
Input > Layer1
Thread 0: j = 12
Input > Layer1
Thread 1: j = 44
Input > Layer1
Thread 2: j = 76
Input > Layer1
Thread 3: j = 108
Input > Layer1
Thread 0: j = 13
Input > Layer1
Thread 1: j = 45
Input > Layer1
Thread 2: j = 77
Input > Layer1
Thread 3: j = 109
Input > Layer1
Thread 0: j = 14
Input > Layer1
Thread 1: j = 46
Input > Layer1
Thread 2: j = 78
Input > Layer1
Thread 3: j = 110
Input > Layer1
Thread 0: j = 15
Input > Layer1
Thread 1: j = 47
Input > Layer1
Thread 2: j = 79
Input > Layer1
Thread 3: j = 111
Input > Layer1
Thread 0: j = 16
Input > Layer1
Thread 1: j = 48
Input > Layer1
Thread 2: j = 80
Input > Layer1
Thread 3: j = 112
Input > Layer1
Thread 0: j = 17
Input > Layer1
Thread 1: j = 49
Input > Layer1
Thread 2: j = 81
Input > Layer1
Thread 3: j = 113
Input > Layer1
Thread 0: j = 18
Input > Layer1
Thread 1: j = 50
Input > Layer1
Thread 2: j = 82
Input > Layer1
Thread 3: j = 114
Input > Layer1
Thread 0: j = 19
Input > Layer1
Thread 1: j = 51
Input > Layer1
Thread 2: j = 83
Input > Layer1
Thread 3: j = 115
Input > Layer1
Thread 0: j = 20
Input > Layer1
Thread 1: j = 52
Input > Layer1
Thread 2: j = 84
Input > Layer1
Thread 3: j = 116
Input > Layer1
Thread 0: j = 21
Input > Layer1
Thread 1: j = 53
Input > Layer1
Thread 2: j = 85
Input > Layer1
Thread 3: j = 117
Input > Layer1
Thread 0: j = 22
Input > Layer1
Thread 1: j = 54
Input > Layer1
Thread 2: j = 86
Input > Layer1
Thread 3: j = 118
Input > Layer1
Thread 0: j = 23
Input > Layer1
Thread 1: j = 55
Input > Layer1
Thread 2: j = 87
Input > Layer1
Thread 3: j = 119
Input > Layer1
Thread 0: j = 24
Input > Layer1
Thread 1: j = 56
Input > Layer1
Thread 2: j = 88
Input > Layer1
Thread 3: j = 120
Input > Layer1
Thread 0: j = 25
Input > Layer1
Thread 1: j = 57
Input > Layer1
Thread 2: j = 89
Input > Layer1
Thread 3: j = 121
Input > Layer1
Thread 0: j = 26
Input > Layer1
Thread 1: j = 58
Input > Layer1
Thread 2: j = 90
Input > Layer1
Thread 3: j = 122
Input > Layer1
Thread 0: j = 27
Input > Layer1
Thread 1: j = 59
Input > Layer1
Thread 2: j = 91
Input > Layer1
Thread 3: j = 123
Input > Layer1
Thread 0: j = 28
Input > Layer1
Thread 1: j = 60
Input > Layer1
Thread 2: j = 92
Input > Layer1
Thread 3: j = 124
Input > Layer1
Thread 0: j = 29
Input > Layer1
Thread 1: j = 61
Input > Layer1
Thread 2: j = 93
Input > Layer1
Thread 3: j = 125
Input > Layer1
Thread 0: j = 30
Input > Layer1
Thread 1: j = 62
Input > Layer1
Thread 2: j = 94
Input > Layer1
Thread 3: j = 126
Input > Layer1
Thread 0: j = 31
Input > Layer1
Thread 1: j = 63
Input > Layer1
Thread 2: j = 95
Input > Layer1
Thread 3: j = 127
Input > Layer1
All tasks completed.



SDFS:
0.583089,	0.583069,	0.583048,	0.583028,	0.583008,	0.582988,	0.582968,	0.582949,	0.582929,	0.58291,	0.58289,	0.582871,	0.582852,	0.582833,	0.582814,	0.582796,	0.582777,	0.582759,	0.58274,	0.582722,	0.582704,	0.582686,	0.582669,	0.582651,	0.582633,	0.582616,	0.582599,	0.582582,	0.582565,	0.582548,	0.582531,	0.582514,	0.582498,	0.582481,	0.582465,	0.582449,	0.582433,	0.582417,	0.582401,	0.582386,	0.58237,	0.582355,	0.58234,	0.582324,	0.582309,	0.582295,	0.58228,	0.582265,	0.582251,	0.582236,	0.582222,	0.582208,	0.582194,	0.58218,	0.582166,	0.582153,	0.582139,	0.582126,	0.582113,	0.5821,	0.582087,	0.582074,	0.582061,	0.582048,	0.582036,	0.582024,	0.582011,	0.581999,	0.581987,	0.581976,	0.581964,	0.581952,	0.581941,	0.581929,	0.581918,	0.581907,	0.581896,	0.581885,	0.581875,	0.581864,	0.581854,	0.581843,	0.581833,	0.581823,	0.581813,	0.581803,	0.581794,	0.581784,	0.581775,	0.581765,	0.581756,	0.581747,	0.581738,	0.581729,	0.581721,	0.581712,	0.581704,	0.581695,	0.581687,	0.581679,	0.581671,	0.581663,	0.581656,	0.581648,	0.581641,	0.581633,	0.581626,	0.581619,	0.581612,	0.581606,	0.581599,	0.581592,	0.581586,	0.58158,	0.581573,	0.581567,	0.581562,	0.581556,	0.58155,	0.581545,	0.581539,	0.581534,	0.581529,	0.581524,	0.581519,	0.581514,	0.581509,	0.581505,	0.581501,	0.581496,	0.581492,	0.581488,	0.581484,	0.581481,	0.581477,	0.581473,	0.58147,	0.581467,	0.581464,	0.581461,	0.581458,	0.581455,	0.581452,	0.58145,	0.581448,	0.581445,	0.581443,	0.581441,	0.581439,	0.581438,	0.581436,	0.581435,	0.581433,	0.581432,	0.581431,	0.58143,	0.581429,	0.581428,	0.581428,	0.581427,	0.581427,	0.581427,	0.581427,	0.581427,	0.581427,	0.581427,	0.581428,	0.581428,	0.581429,	0.58143,	0.58143,	0.581432,	0.581433,	0.581434,	0.581435,	0.581437,	0.581439,	0.58144,	0.581442,	0.581444,	0.581447,	0.581449,	0.581451,	0.581454,	0.581457,	0.581459,	0.581462,	0.581465,	0.581469,	0.581472,	0.581475,	0.581479,	0.581483,	0.581487,	0.58149,	0.581495,	0.581499,	0.581503,	0.581508,	0.581512,	0.581517,	0.581522,	0.581527,	0.581532,	0.581537,	0.581542,	0.581548,	0.581553,	0.581559,	0.581565,	0.581571,	0.581577,	0.581583,	0.58159,	0.581596,	0.581603,	0.581609,	0.581616,	0.581623,	0.58163,	0.581638,	0.581645,	0.581652,	0.58166,	0.581668,	0.581676,	0.581684,	0.581692,	0.5817,	0.581708,	0.581717,	0.581726,	0.581734,	0.581743,	0.581752,	0.581761,	0.581771,	0.58178,	0.58179,	0.581799,	0.581809,	0.581819,	0.581829,	0.581839,	0.581849,	0.58186,	0.58187,	0.581881,	0.581892,	0.581903,	0.581914,	0.581925,	0.581936,	0.581947,	0.581959,	0.581971,	0.581982,	0.581994,	0.582006,	0.582018,	0.582031,	0.582043,	0.582056,	0.582068,	0.582081,	0.582094,	0.582107,	0.58212,	0.582134,	0.582147,	0.582161,	0.582174,	0.582188,	0.582202,	0.582216,	0.58223,	0.582245,	0.582259,	0.582274,	0.582288,	0.582303,	0.582318,	0.582333,	0.582348,	0.582364,	0.582379,	0.582395,	0.58241,	0.582426,	0.582442,	0.582458,	0.582475,	0.582491,	0.582507,	0.582524,	0.582541,	0.582557,	0.582574,	0.582592,	0.582609,	0.582626,	0.582644,	0.582661,	0.582679,	0.582697,	0.582715,	0.582733,	0.582751,	0.582769,	0.582788,	0.582807,	0.582825,	0.582844,	0.582863,	0.582882,	0.582901,	0.582921,	0.58294,	0.58296,	0.58298,	0.583,	0.58302,	0.58304,	0.58306,	0.58308,	0.583101,	0.583121,	0.583142,	0.583163,	0.583184,	0.583205,	0.583227,	0.583248,	0.583269,	0.583291,	0.583313,	0.583335,	0.583357,	0.583379,	0.583401,	0.583424,	0.583446,	0.583469,	0.583492,	0.583514,	0.583537,	0.583561,	0.583584,	0.583607,	0.583631,	0.583655,	0.583678,	0.583702,	0.583726,	0.58375,	0.583775,	0.583799,	0.583824,	0.583848,	0.583873,	0.583898,	0.583923,	0.583948,	0.583974,	0.583999,	0.584025,	0.58405,	0.584076,	0.584102,	0.584128,	0.584154,	0.584181,	0.584207,	0.584234,	0.58426,	0.584287,	0.584314,	0.584341,	0.584368,	0.584396,	0.584423,	0.584451,	0.584479,	0.584506,	0.584534,	0.584562,	0.584591,	0.584619,	0.584647,	0.584676,	0.584705,	0.584734,	0.584763,	0.584792,	0.584821,	0.58485,	0.58488,	0.584909,	0.584939,	0.584969,	0.584999,	0.585029,	0.585059,	0.58509,	0.58512,	0.585151,	0.585181,	0.585212,	0.585243,	0.585274,	0.585306,	0.585337,	0.585368,	0.5854,	0.585432,	0.585464,	0.585496,	0.585528,	0.58556,	0.585593,	0.585625,	0.585658,	0.58569,	0.585723,	0.585756,	0.585789,	0.585823,	0.585856,	0.58589,	0.585923,	0.585957,	0.585991,	0.586025,	0.586059,	0.586093,	0.586128,	0.586162,	0.586197,	0.586232,	0.586267,	0.586302,	0.586337,	0.586372,	0.586408,	0.586443,	0.586479,	0.586515,	0.586551,	0.586587,	0.586623,	0.586659,	0.586695,	0.586732,	0.586769,	0.586806,	0.586842,	0.58688,	0.586917,	0.586954,	0.586991,	0.587029,	0.587067,	0.587105,	0.587142,	0.587181,	0.587219,	0.587257,	0.587295,	0.587334,	0.587373,	0.587412,	0.587451,	0.58749,	0.587529,	0.587568,	0.587608,	0.587647,	0.587687,	0.587727,	0.587767,	0.587807,	0.587847,	0.587887,	0.587928,	0.587968,	0.588009,	0.58805,	0.588091,	0.588132,	0.588173,	0.588215,	0.588256,	0.588298,	0.588339,	0.588381,	0.588423,	0.588465,	0.588508,	0.58855,	0.588593,	0.588635,	0.588678,	0.588721,	0.588764,	0.588807,	0.58885,	0.588893,	0.588937,	0.588981,	0.589024,	0.589068,	0.589112,	0.589156,	0.589201,	0.589245,	0.58929,	0.589334,	0.589379,	0.589424,	0.589469,	0.589514,	0.589559,	0.589605,	0.58965,	0.589696,	0.589742,	0.589788,	0.589834,	0.58988,	0.589926,	0.589972,	0.590019,	0.590066,	0.590112,	0.590159,	0.590206,	0.590253,	0.590301,	0.590348,	0.590396,	0.590443,	0.590491,	0.590539,	0.590587,	0.590635,	0.590684,	0.590732,	0.590781,	0.590829,	0.590878,	0.590927,	0.590976,	0.591025,	0.591075,	0.591124,	0.591174,	0.591223,	0.591273,	0.591323,	0.591373,	0.591423,	0.591474,	0.591524,	0.591575,	0.591625,	0.591676,	0.591727,	0.591778,	0.59183,	0.591881,	0.591932,	0.591984,	0.592036,	0.592087,	0.592139,	0.592192,	0.592244,	0.592296,	0.592349,	0.592401,	0.592454,	0.592507,	0.59256,	0.592613,	0.592666,	0.592719,	0.592773,	0.592826,	0.59288,	0.592934,	0.592988,	0.593042,	0.593096,	0.593151,	0.593205,	0.59326,	0.593315,	0.59337,	0.593425,	0.59348,	0.593535,	0.59359,	0.593646,	0.593701,	0.593757,	0.593813,	0.593869,	0.593925,	0.593981,	0.594038,	0.594094,	0.594151,	0.594208,	0.594265,	0.594322,	0.594379,	0.594436,	0.594494,	0.594551,	0.594609,	0.594666,	0.594724,	0.594782,	0.594841,	0.594899,	0.594957,	0.595016,	0.595074,	0.595133,	0.595192,	0.595251,	0.59531,	0.59537,	0.595429,	0.595489,	0.595548,	0.595608,	0.595668,	0.595728,	0.595788,	0.595849,	0.595909,	0.59597,	0.59603,	0.596091,	0.596152,	0.596213,	0.596274,	0.596336,	0.596397,	0.596459,	0.59652,	0.596582,	0.596644,	0.596706,	0.596768,	0.596831,	0.596893,	0.596956,	0.597018,	0.597081,	0.597144,	0.597207,	0.597271,	0.597334,	0.597397,	0.597461,	0.597525,	0.597588,	0.597652,	0.597717,	0.597781,	0.597845,	0.59791,	0.597974,	0.598039,	0.598104,	0.598169,	0.598234,	0.598299,	0.598364,	0.59843,	0.598496,	0.598561,	0.598627,	0.598693,	0.598759,	0.598826,	0.598892,	0.598958,	0.599025,	0.599092,	0.599159,	0.599226,	0.599293,	0.59936,	0.599427,	0.599495,	0.599563,	0.59963,	0.599698,	0.599766,	0.599834,	0.599903,	0.599971,	0.60004,	0.600108,	0.600177,	0.600246,	0.600315,	0.600384,	0.600453,	0.600523,	0.600592,	0.600662,	0.600732,	0.600802,	0.600872,	0.600942,	0.601012,	0.601082,	0.601153,	0.601224,	0.601294,	0.601365,	0.601436,	0.601508,	0.601579,	0.60165,	0.601722,	0.601794,	0.601865,	0.601937,	0.602009,	0.602082,	0.602154,	0.602226,	0.602299,	0.602372,	0.602444,	0.602517,	0.60259,	0.602664,	0.602737,	0.60281,	0.602884,	0.602958,	0.603031,	0.603105,	0.603179,	0.603254,	0.603328,	0.603402,	0.603477,	0.603552,	0.603627,	0.603702,	0.603777,	0.603852,	0.603927,	0.604003,	0.604078,	0.604154,	0.60423,	0.604306,	0.604382,	0.604458,	0.604534,	0.604611,	0.604688,	0.604764,	0.604841,	0.604918,	0.604995,	0.605073,	0.60515,	0.605227,	0.605305,	0.605383,	0.605461,	0.605539,	0.605617,	0.605695,	0.605773,	0.605852,	0.60593,	0.606009,	0.606088,	0.606167,	0.606246,	0.606325,	0.606405,	0.606484,	0.606564,	0.606644,	0.606724,	0.606804,	0.606884,	0.606964,	0.607045,	0.607125,	0.607206,	0.607286,	0.607367,	0.607448,	0.60753,	0.607611,	0.607692,	0.607774,	0.607855,	0.607937,	0.608019,	0.608101,	0.608183,	0.608266,	0.608348,	0.608431,	0.608513,	0.608596,	0.608679,	0.608762,	0.608845,	0.608928,	0.609012,	0.609095,	0.609179,	0.609263,	0.609347,	0.609431,	0.609515,	0.609599,	0.609684,	0.609768,	0.609853,	0.609938,	0.610023,	0.610108,	0.610193,	0.610279,	0.610364,	0.61045,	0.610535,	0.610621,	0.610707,	0.610793,	0.610879,	0.610966,	0.611052,	0.611139,	0.611225,	0.611312,	0.611399,	0.611486,	0.611574,	0.611661,	0.611748,	0.611836,	0.611924,	0.612012,	0.612099,	0.612188,	0.612276,	0.612364,	0.612453,	0.612541,	0.61263,	0.612719,	0.612808,	0.612897,	0.612986,	0.613076,	0.613165,	0.613255,	0.613344,	0.613434,	0.613524,	0.613614,	0.613705,	0.613795,	0.613886,	0.613976,	0.614067,	0.614158,	0.614249,	0.61434,	0.614431,	0.614523,	0.614614,	0.614706,	0.614798,	0.614889,	0.614981,	0.615074,	0.615166,	0.615258,	0.615351,	0.615443,	0.615536,	0.615629,	0.615722,	0.615815,	0.615909,	0.616002,	0.616096,	0.616189,	0.616283,	0.616377,	0.616471,	0.616565,	0.616659,	0.616754,	0.616848,	0.616943,	0.617038,	0.617133,	0.617228,	0.617323,	0.617418,	0.617514,	0.617609,	0.617705,	0.617801,	0.617897,	0.617993,	0.618089,	0.618185,	0.618282,	0.618378,	0.618475,	0.618572,	0.618669,	0.618766,	0.618863,	0.61896,	0.619058,	0.619155,	0.619253,	0.619351,	0.619449,	0.619547,	0.619645,	0.619744,	0.619842,	0.619941,	0.620039,	0.620138,	0.620237,	0.620336,	0.620436,	0.620535,	0.620634,	0.620734,	0.620834,	0.620934,	0.621034,	0.621134,	0.621234,	0.621334,	0.621435,	0.621535,	0.621636,	0.621737,	0.621838,	0.621939,	0.62204,	0.622142,	0.622243,	0.622345,	0.622447,	0.622548,	0.62265,	0.622753,	0.622855,	0.622957,	0.62306,	0.623162,	0.623265,	0.623368,	0.623471,	0.623574,	0.623677,	0.623781,	0.623884,	0.623988,	0.624092,	0.624196,	0.6243,	0.624404,	0.624508,	0.624612,	0.624717,	0.624822,	0.624926,	0.625031,	0.625136,	0.625242,	0.625347,	0.625452,	0.625558,	0.625663,	0.625769,	0.625875,	0.625981,	0.626087,	0.626194,	0.6263,	0.626407,	0.626513,	0.62662,	0.626727,	0.626834,	0.626941,	0.627049,	0.627156,	0.627264,	0.627371,	0.627479,	0.627587,	0.627695,	0.627803,	0.627912,	0.62802,	0.628129,	0.628237,	0.628346,	0.628455,	0.628564,	0.628673,	0.628783,	0.628892,	0.629002,	0.629111,	0.629221,	0.629331,	0.629441,	0.629552,	0.629662,	0.629772,	0.629883,	0.629994,	0.630105,	0.630216,	0.630327,	0.630438,	0.630549,	0.630661,	0.630772,	0.630884,	0.630996,	0.631108,	0.63122,	0.631332,	0.631445,	0.631557,	0.63167,	0.631782,	0.631895,	0.632008,	0.632121,	0.632235,	0.632348,	0.632462,	0.632575,	0.632689,	0.632803,	0.632917,	0.633031,	0.633145,	0.63326,	0.633374,	0.633489,	0.633603,	0.633718,	0.633833,	0.633949,	0.634064,	0.634179,	0.634295,	0.63441,	0.634526,	0.634642,	0.634758,	0.634874,	0.63499,	0.635107,	0.635223,	0.63534,	0.635457,	0.635574,	0.635691,	0.635808,	0.635925,	0.636043,	0.63616,	0.636278,	0.636396,	0.636514,	0.636632,	0.63675,	0.636868,	0.636987,	0.637105,	0.637224,	0.637343,	0.637462,	0.637581,	0.6377,	0.637819,	0.637939,	0.638058,	0.638178,	0.638298,	0.638418,	0.638538,	0.638658,	0.638778,	0.638899,	0.639019,	0.63914,	0.639261,	0.639382,	0.639503,	0.639624,	0.639745,	0.639867,	0.639988,	0.64011,	0.640232,	0.640354,	0.640476,	0.640598,	0.640721,	0.640843,	0.640966,	0.641088,	0.641211,	0.641334,	0.641457,	0.64158,	0.641704,	0.641827,	0.641951,	0.642075,	0.642199,	0.642322,	0.642447,	0.642571,	0.642695,	0.64282,	0.642944,	0.643069,	0.643194,	0.643319,	0.643444,	0.643569,	0.643695,	0.64382,	0.643946,	0.644072,	0.644197,	0.644323,	0.64445,	0.644576,	0.644702,	0.644829,	0.644955,	0.645082,	0.645209,	0.645336,	0.645463,	0.645591,	0.645718,	0.645845,	0.645973,	0.646101,	0.646229,	0.646357,	0.646485,	0.646613,	0.646742,	0.64687,	0.646999,	0.647128,	0.647257,	0.647386,	0.647515,	0.647644,	0.647773,	0.647903,	0.648033,	0.648163,	0.648292,	0.648422,	0.648553,	0.648683,	0.648813,	0.648944,	0.649075,	0.649205,	0.649336,	0.649467,	0.649599,	0.64973,	0.649861,	0.649993,	0.650125,	0.650256,	0.650388,	0.650521,	0.650653,	0.650785,	0.650917,	0.65105,	0.651183,	0.651316,	0.651449,	0.651582,	0.651715,	0.651848,	0.651982,	0.652115,	0.652249,	0.652383,	0.652517,	0.652651,	0.652785,	0.652919,	0.653054,	0.653189,	0.653323,	0.653458,	0.653593,	0.653728,	0.653863,	0.653999,	0.654134,	0.65427,	0.654406,	0.654541,	0.654677,	0.654814,	0.65495,	0.655086,	0.655223,	0.655359,	0.655496,	0.655633,	0.65577,	0.655907,	0.656044,	0.656182,	0.656319,	0.656457,	0.656595,	0.656732,	0.656871,	0.657009,	0.657147,	0.657285,	0.657424,	0.657562,	0.657701,	0.65784,	0.657979,	0.658118,	0.658258,	0.658397,	0.658537,	0.658676,	0.658816,	0.658956,	0.659096,	0.659236,	0.659376,	0.659517,	0.659657,	0.659798,	0.659939,	0.66008,	0.660221,	0.660362,	0.660503,	0.660645,	0.660786,	0.660928,	0.66107,	0.661212,	0.661354,	0.661496,	0.661638,	0.661781,	0.661923,	0.662066,	0.662209,	0.662352,	0.662495,	0.662638,	0.662781,	0.662925,	0.663068,	0.663212,	0.663356,	0.6635,	0.663644,	0.663788,	0.663932,	0.664077,	0.664221,	0.664366,	0.664511,	0.664656,	0.664801,	0.664946,	0.665091,	0.665237,	0.665382,	0.665528,	0.665674,	0.66582,	0.665966,	0.666112,	0.666259,	0.666405,	0.666552,	0.666699,	0.666845,	0.666992,	0.667139,	0.667287,	0.667434,	0.667582,	0.667729,	0.667877,	0.668025,	0.668173,	0.668321,	0.668469,	0.668618,	0.668766,	0.668915,	0.669063,	0.669212,	0.669361,	0.66951,	0.66966,	0.669809,	0.669959,	0.670108,	0.670258,	0.670408,	0.670558,	0.670708,	0.670858,	0.671009,	0.671159,	0.67131,	0.671461,	0.671612,	0.671763,	0.671914,	0.672065,	0.672216,	0.672368,	0.67252,	0.672671,	0.672823,	0.672975,	0.673127,	0.67328,	0.673432,	0.673585,	0.673737,	0.67389,	0.674043,	0.674196,	0.674349,	0.674503,	0.674656,	0.67481,	0.674963,	0.675117,	0.675271,	0.675425,	0.675579,	0.675734,	0.675888,	0.676043,	0.676197,	0.676352,	0.676507,	0.676662,	0.676817,	0.676973,	0.677128,	0.677284,	0.677439,	0.677595,	0.677751,	0.677907,	0.678063,	0.67822,	0.678376,	0.678533,	0.67869,	0.678846,	0.679003,	0.67916,	0.679318,	0.679475,	0.679632,	0.67979,	0.679948,	0.680106,	0.680264,	0.680422,	0.68058,	0.680738,	0.680897,	0.681055,	0.681214,	0.681373,	0.681532,	0.681691,	0.68185,	0.68201,	0.682169,	0.682329,	0.682489,	0.682648,	0.682808,	0.682969,	0.683129,	0.683289,	0.68345,	0.68361,	0.683771,	0.683932,	0.684093,	0.684254,	0.684415,	0.684577,	0.684738,	0.6849,	0.685062,	0.685224,	0.685386,	0.685548,	0.68571,	0.685872,	0.686035,	0.686198,	0.68636,	0.686523,	0.686686,	0.686849,	0.687013,	0.687176,	0.68734,	0.687503,	0.687667,	0.687831,	0.687995,	0.688159,	0.688323,	0.688488,	0.688652,	0.688817,	0.688982,	0.689147,	0.689312,	0.689477,	0.689642,	0.689808,	0.689973,	0.690139,	0.690305,	0.690471,	0.690637,	0.690803,	0.690969,	0.691136,	0.691302,	0.691469,	0.691636,	0.691803,	0.69197,	0.692137,	0.692304,	0.692472,	0.692639,	0.692807,	0.692975,	0.693143,	0.693311,	0.693479,	0.693648,	0.693816,	0.693985,	0.694153,	0.694322,	0.694491,	0.69466,	0.694829,	0.694999,	0.695168,	0.695338,	0.695508,	0.695677,	0.695847,	0.696018,	0.696188,	0.696358,	0.696529,	0.696699,	0.69687,	0.697041,	0.697212,	0.697383,	0.697554,	0.697726,	0.697897,	0.698069,	0.69824,	0.698412,	0.698584,	0.698756,	0.698929,	0.699101,	0.699274,	0.699446,	0.699619,	0.699792,	0.699965,	0.700138,	0.700311,	0.700485,	0.700658,	0.700832,	0.701006,	0.70118,	0.701354,	0.701528,	0.701702,	0.701876,	0.702051,	0.702226,	0.7024,	0.702575,	0.70275,	0.702925,	0.703101,	0.703276,	0.703452,	0.703627,	0.703803,	0.703979,	0.704155,	0.704331,	0.704508,	0.704684,	0.704861,	0.705037,	0.705214,	0.705391,	0.705568,	0.705745,	0.705922,	0.7061,	0.706277,	0.706455,	0.706633,	0.706811,	0.706989,	0.707167,	0.707345,	0.707524,	0.707703,	0.707881,	0.70806,	0.708239,	0.708418,	0.708597,	0.708777,	0.708956,	0.709136,	0.709315,	0.709495,	0.709675,	0.709855,	0.710035,	0.710216,	0.710396,	0.710577,	0.710758,	0.710938,	0.711119,	0.7113,	0.711482,	0.711663,	0.711845,	0.712026,	0.712208,	0.71239,	0.712572,	0.712754,	0.712936,	0.713118,	0.713301,	0.713483,	0.713666,	0.713849,	0.714032,	0.714215,	0.714398,	0.714582,	0.714765,	0.714949,	0.715133,	0.715317,	0.715501,	0.715685,	0.715869,	0.716053,	0.716238,	0.716423,	0.716607,	0.716792,	0.716977,	0.717162,	0.717348,	0.717533,	0.717719,	0.717904,	0.71809,	0.718276,	0.718462,	0.718648,	0.718834,	0.719021,	0.719207,	0.719394,	0.719581,	0.719768,	0.719955,	0.720142,	0.720329,	0.720516,	0.720704,	0.720892,	0.721079,	0.721267,	0.721455,	0.721644,	0.721832,	0.72202,	0.722209,	0.722398,	0.722586,	0.722775,	0.722964,	0.723154,	0.723343,	0.723532,	0.723722,	0.723912,	0.724101,	0.724291,	0.724481,	0.724672,	0.724862,	0.725052,	0.725243,	0.725434,	0.725624,	0.725815,	0.726007,	0.726198,	0.726389,	0.726581,	0.726772,	0.726964,	0.727156,	0.727348,	0.72754,	0.727732,	0.727924,	0.728117,	0.728309,	0.728502,	0.728695,	0.728888,	0.729081,	0.729274,	0.729468,	0.729661,	0.729855,	0.730048,	0.730242,	0.730436,	0.73063,	0.730825,	0.731019,	0.731213,	0.731408,	0.731603,	0.731798,	0.731993,	0.732188,	0.732383,	0.732578,	0.732774,	0.73297,	0.733165,	0.733361,	0.733557,	0.733753,	0.73395,	0.734146,	0.734342,	0.734539,	0.734736,	0.734933,	0.73513,	0.735327,	0.735524,	0.735722,	0.735919,	0.736117,	0.736315,	0.736512,	0.73671,	0.736909,	0.737107,	0.737305,	0.737504,	0.737703,	0.737901,	0.7381,	0.738299,	0.738498,	0.738698,	0.738897,	0.739097,	0.739296,	0.739496,	0.739696,	0.739896,	0.740096,	0.740297,	0.740497,	0.740698,	0.740898,	0.741099,	0.7413,	0.741501,	0.741702,	0.741904,	0.742105,	0.742307,	0.742508,	0.74271,	0.742912,	0.743114,	0.743316,	0.743519,	0.743721,	0.743924,	0.744126,	0.744329,	0.744532,	0.744735,	0.744938,	0.745142,	0.745345,	0.745549,	0.745753,	0.745956,	0.74616,	0.746365,	0.746569,	0.746773,	0.746978,	0.747182,	0.747387,	0.747592,	0.747797,	0.748002,	0.748207,	0.748412,	0.748618,	0.748823,	0.749029,	0.749235,	0.749441,	0.749647,	0.749853,	0.75006,	0.750266,	0.750473,	0.75068,	0.750887,	0.751094,	0.751301,	0.751508,	0.751715,	0.751923,	0.75213,	0.752338,	0.752546,	0.752754,	0.752962,	0.753171,	0.753379,	0.753587,	0.753796,	0.754005,	0.754214,	0.754423,	0.754632,	0.754841,	0.755051,	0.75526,	0.75547,	0.75568,	0.755889,	0.756099,	0.75631,	0.75652,	0.75673,	0.756941,	0.757152,	0.757362,	0.757573,	0.757784,	0.757995,	0.758207,	0.758418,	0.75863,	0.758841,	0.759053,	0.759265,	0.759477,	0.759689,	0.759902,	0.760114,	0.760327,	0.760539,	0.760752,	0.760965,	0.761178,	0.761391,	0.761605,	0.761818,	0.762032,	0.762245,	0.762459,	0.762673,	0.762887,	0.763101,	0.763316,	0.76353,	0.763745,	0.76396,	0.764174,	0.764389,	0.764604,	0.76482,	0.765035,	0.76525,	0.765466,	0.765682,	0.765898,	0.766114,	0.76633,	0.766546,	0.766762,	0.766979,	0.767195,	0.767412,	0.767629,	0.767846,	0.768063,	0.76828,	0.768498,	0.768715,	0.768933,	0.76915,	0.769368,	0.769586,	0.769804,	0.770023,	0.770241,	0.77046,	0.770678,	0.770897,	0.771116,	0.771335,	0.771554,	0.771773,	0.771993,	0.772212,	0.772432,	0.772651,	0.772871,	0.773091,	0.773311,	0.773532,	0.773752,	0.773973,	0.774193,	0.774414,	0.774635,	0.774856,	0.775077,	0.775298,	0.77552,	0.775741,	0.775963,	0.776185,	0.776407,	0.776629,	0.776851,	0.777073,	0.777296,	0.777518,	0.777741,	0.777964,	0.778187,	0.77841,	0.778633,	0.778856,	0.779079,	0.779303,	0.779527,	0.779751,	0.779974,	0.780199,	0.780423,	0.780647,	0.780871,	0.781096,	0.781321,	0.781546,	0.78177,	0.781996,	0.782221,	0.782446,	0.782672,	0.782897,	0.783123,	0.783349,	0.783575,	0.783801,	0.784027,	0.784253,	0.78448,	0.784706,	0.784933,	0.78516,	0.785387,	0.785614,	0.785841,	0.786068,	0.786296,	0.786523,	0.786751,	0.786979,	0.787207,	0.787435,	0.787663,	0.787892,	0.78812,	0.788349,	0.788577,	0.788806,	0.789035,	0.789264,	0.789494,	0.789723,	0.789953,	0.790182,	0.790412,	0.790642,	0.790872,	0.791102,	0.791332,	0.791563,	0.791793,	0.792024,	0.792254,	0.792485,	0.792716,	0.792947,	0.793179,	0.79341,	0.793642,	0.793873,	0.794105,	0.794337,	0.794569,	0.794801,	0.795033,	0.795266,	0.795498,	0.795731,	0.795964,	0.796197,	0.79643,	0.796663,	0.796896,	0.797129,	0.797363,	0.797597,	0.79783,	0.798064,	0.798298,	0.798533,	0.798767,	0.799001,	0.799236,	0.79947,	0.799705,	0.79994,	0.800175,	0.80041,	0.800646,	0.800881,	0.801117,	0.801352,	0.801588,	0.801824,	0.80206,	0.802296,	0.802533,	0.802769,	0.803006,	0.803242,	0.803479,	0.803716,	0.803953,	0.80419,	0.804428,	0.804665,	0.804903,	0.80514,	0.805378,	0.805616,	0.805854,	0.806093,	0.806331,	0.806569,	0.806808,	0.807047,	0.807286,	0.807524,	0.807764,	0.808003,	0.808242,	0.808482,	0.808721,	0.808961,	0.809201,	0.809441,	0.809681,	0.809921,	0.810161,	0.810402,	0.810643,	0.810883,	0.811124,	0.811365,	0.811606,	0.811847,	0.812089,	0.81233,	0.812572,	0.812814,	0.813056,	0.813298,	0.81354,	0.813782,	0.814024,	0.814267,	0.814509,	0.814752,	0.814995,	0.815238,	0.815481,	0.815725,	0.815968,	0.816211,	0.816455,	0.816699,	0.816943,	0.817187,	0.817431,	0.817675,	0.81792,	0.818164,	0.818409,	0.818654,	0.818898,	0.819144,	0.819389,	0.819634,	0.819879,	0.820125,	0.820371,	0.820616,	0.820862,	0.821108,	0.821354,	0.821601,	0.821847,	0.822094,	0.82234,	0.822587,	0.822834,	0.823081,	0.823328,	0.823576,	0.823823,	0.824071,	0.824318,	0.824566,	0.824814,	0.825062,	0.82531,	0.825559,	0.825807,	0.826056,	0.826304,	0.826553,	0.826802,	0.827051,	0.8273,	0.82755,	0.827799,	0.828049,	0.828299,	0.828548,	0.828798,	0.829048,	0.829299,	0.829549,	0.829799,	0.83005,	0.830301,	0.830552,	0.830803,	0.831054,	0.831305,	0.831556,	0.831808,	0.832059,	0.832311,	0.832563,	0.832815,	0.833067,	0.833319,	0.833572,	0.833824,	0.834077,	0.834329,	0.834582,	0.834835,	0.835088,	0.835342,	0.835595,	0.835848,	0.836102,	0.836356,	0.83661,	0.836864,	0.837118,	0.837372,	0.837627,	0.837881,	0.838136,	0.83839,	0.838645,	0.8389,	0.839155,	0.839411,	0.839666,	0.839922,	0.840177,	0.840433,	0.840689,	0.840945,	0.841201,	0.841457,	0.841714,	0.84197,	0.842227,	0.842484,	0.842741,	0.842998,	0.843255,	0.843512,	0.84377,	0.844027,	0.844285,	0.844543,	0.844801,	0.845059,	0.845317,	0.845575,	0.845833,	0.846092,	0.846351,	0.84661,	0.846868,	0.847127,	0.847387,	0.847646,	0.847905,	0.848165,	0.848425,	0.848684,	0.848944,	0.849204,	0.849465,	0.849725,	0.849985,	0.850246,	0.850507,	0.850768,	0.851029,	0.85129,	0.851551,	0.851812,	0.852074,	0.852335,	0.852597,	0.852859,	0.853121,	0.853383,	0.853645,	0.853907,	0.85417,	0.854432,	0.854695,	0.854958,	0.855221,	0.855484,	0.855747,	0.856011,	0.856274,	0.856538,	0.856801,	0.857065,	0.857329,	0.857593,	0.857858,	0.858122,	0.858386,	0.858651,	0.858916,	0.859181,	0.859446,	0.859711,	0.859976,	0.860241,	0.860507,	0.860773,	0.861038,	0.861304,	0.86157,	0.861836,	0.862103,	0.862369,	0.862636,	0.862902,	0.863169,	0.863436,	0.863703,	0.86397,	0.864237,	0.864505,	0.864772,	0.86504,	0.865308,	0.865575,	0.865844,	0.866112,	0.86638,	0.866648,	0.866917,	0.867186,	0.867454,	0.867723,	0.867992,	0.868261,	0.868531,	0.8688,	0.86907,	0.869339,	0.869609,	0.869879,	0.870149,	0.870419,	0.87069,	0.87096,	0.871231,	0.871501,	0.871772,	0.872043,	0.872314,	0.872585,	0.872857,	0.873128,	0.8734,	0.873671,	0.873943,	0.874215,	0.874487,	0.874759,	0.875032,	0.875304,	0.875577,	0.875849,	0.876122,	0.876395,	0.876668,	0.876941,	0.877215,	0.877488,	0.877762,	0.878036,	0.878309,	0.878583,	0.878857,	0.879132,	0.879406,	0.879681,	0.879955,	0.88023,	0.880505,	0.88078,	0.881055,	0.88133,	0.881605,	0.881881,	0.882156,	0.882432,	0.882708,	0.882984,	0.88326,	0.883536,	0.883813,	0.884089,	0.884366,	0.884643,	0.884919,	0.885196,	0.885474,	0.885751,	0.886028,	0.886306,	0.886583,	0.886861,	0.887139,	0.887417,	0.887695,	0.887973,	0.888252,	0.88853,	0.888809,	0.889088,	0.889367,	0.889646,	0.889925,	0.890204,	0.890483,	0.890763,	0.891043,	0.891322,	0.891602,	0.891882,	0.892163,	0.892443,	0.892723,	0.893004,	0.893284,	0.893565,	0.893846,	0.894127,	0.894408,	0.89469,	0.894971,	0.895253,	0.895534,	0.895816,	0.896098,	0.89638,	0.896662,	0.896945,	0.897227,	0.89751,	0.897792,	0.898075,	0.898358,	0.898641,	0.898924,	0.899208,	0.899491,	0.899775,	0.900058,	0.900342,	0.900626,	0.90091,	0.901194,	0.901479,	0.901763,	0.902048,	0.902332,	0.902617,	0.902902,	0.903187,	0.903472,	0.903758,	0.904043,	0.904329,	0.904615,	0.9049,	0.905186,	0.905472,	0.905759,	0.906045,	0.906332,	0.906618,	0.906905,	0.907192,	0.907479,	0.907766,	0.908053,	0.90834,	0.908628,	0.908915,	0.909203,	0.909491,	0.909779,	0.910067,	0.910355,	0.910644,	0.910932,	0.911221,	0.91151,	0.911799,	0.912088,	0.912377,	0.912666,	0.912955,	0.913245,	0.913534,	0.913824,	0.914114,	0.914404,	0.914694,	0.914985,	0.915275,	0.915565,	0.915856,	0.916147,	0.916438,	0.916729,	0.91702,	0.917311,	0.917603,	0.917894,	0.918186,	0.918478,	0.91877,	0.919062,	0.919354,	0.919646,	0.919938,	0.920231,	0.920524,	0.920816,	0.921109,	0.921402,	0.921696,	0.921989,	0.922282,	0.922576,	0.922869,	0.923163,	0.923457,	0.923751,	0.924045,	0.92434,	0.924634,	0.924929,	0.925223,	0.925518,	0.925813,	0.926108,	0.926403,	0.926699,	0.926994,	0.92729,	0.927586,	0.927881,	0.928177,	0.928473,	0.92877,	0.929066,	0.929362,	0.929659,	0.929956,	0.930253,	0.930549,	0.930847,	0.931144,	0.931441,	0.931739,	0.932036,	0.932334,	0.932632,	0.93293,	0.933228,	0.933526,	0.933824,	0.934123,	0.934421,	0.93472,	0.935019,	0.935318,	0.935617,	0.935916,	0.936216,	0.936515,	0.936815,	0.937115,	0.937414,	0.937714,	0.938015,	0.938315,	0.938615,	0.938916,	0.939216,	0.939517,	0.939818,	0.940119,	0.94042,	0.940721,	0.941023,	0.941324,	0.941626,	0.941928,	0.94223,	0.942532,	0.942834,	0.943136,	0.943438,	0.943741,	0.944044,	0.944346,	0.944649,	0.944952,	0.945255,	0.945559,	0.945862,	0.946166,	0.946469,	0.946773,	0.947077,	0.947381,	0.947685,	0.947989,	0.948294,	0.948598,	0.948903,	0.949208,	0.949513,	0.949818,	0.950123,	0.950428,	0.950734,	0.951039,	0.951345,	0.951651,	0.951957,	0.952263,	0.952569,	0.952875,	0.953182,	0.953488,	0.953795,	0.954102,	0.954409,	0.954716,	0.955023,	0.95533,	0.955638,	0.955945,	0.956253,	0.956561,	0.956869,	0.957177,	0.957485,	0.957794,	0.958102,	0.958411,	0.958719,	0.959028,	0.959337,	0.959646,	0.959955,	0.960265,	0.960574,	0.960884,	0.961194,	0.961503,	0.961813,	0.962123,	0.962434,	0.962744,	0.963055,	0.963365,	0.963676,	0.963987,	0.964298,	0.964609,	0.96492,	0.965231,	0.965543,	0.965855,	0.966166,	0.966478,	0.96679,	0.967102,	0.967415,	0.967727,	0.968039,	0.968352,	0.968665,	0.968978,	0.969291,	0.969604,	0.969917,	0.970231,	0.970544,	0.970858,	0.971171,	0.971485,	0.971799,	0.972113,	0.972428,	0.972742,	0.973057,	0.973371,	0.973686,	0.974001,	0.974316,	0.974631,	0.974947,	0.975262,	0.975577,	0.975893,	0.976209,	0.976525,	0.976841,	0.977157,	0.977473,	0.97779,	0.978106,	0.978423,	0.97874,	0.979057,	0.979374,	0.979691,	0.980008,	0.980326,	0.980643,	0.980961,	0.981279,	0.981597,	0.981915,	0.982233,	0.982551,	0.98287,	0.983188,	0.983507,	0.983826,	0.984145,	0.984464,	0.984783,	0.985102,	0.985422,	0.985741,	0.986061,	0.986381,	0.986701,	0.987021,	0.987341,	0.987661,	0.987982,	0.988303,	0.988623,	0.988944,	0.989265,	0.989586,	0.989907,	0.990229,	0.99055,	0.990872,	0.991194,	0.991515,	0.991837,	0.992159,	0.992482,	0.992804,	0.993127,	0.993449,	0.993772,	0.994095,	0.994418,	0.994741,	0.995064,	0.995387,	0.995711,	0.996035,	0.996358,	0.996682,	0.997006,	0.99733,	0.997655,	0.997979,	0.998303,	0.998628,	0.998953,	0.999278,	0.999603,	0.999928,	1.00025,	1.00058,	1.0009,	1.00123,	1.00156,	1.00188,	1.00221,	1.00253,	1.00286,	1.00319,	1.00351,	1.00384,	1.00417,	1.00449,	1.00482,	1.00515,	1.00547,	1.0058,	1.00613,	1.00646,	1.00679,	1.00711,	1.00744,	1.00777,	1.0081,	1.00843,	1.00875,	1.00908,	1.00941,	1.00974,	1.01007,	1.0104,	1.01073,	1.01106,	1.01139,	1.01172,	1.01205,	1.01238,	1.01271,	1.01304,	1.01337,	1.0137,	1.01403,	1.01436,	1.01469,	1.01502,	1.01535,	1.01568,	1.01601,	1.01635,	1.01668,	1.01701,	1.01734,	1.01767,	1.01801,	1.01834,	1.01867,	1.019,	1.01933,	1.01967,	1.02,	1.02033,	1.02067,	1.021,	1.02133,	1.02167,	1.022,	1.02233,	1.02267,	1.023,	1.02334,	1.02367,	1.024,	1.02434,	1.02467,	1.02501,	1.02534,	1.02568,	1.02601,	1.02635,	1.02668,	1.02702,	1.02735,	1.02769,	1.02803,	1.02836,	1.0287,	1.02903,	1.02937,	1.02971,	1.03004,	1.03038,	1.03072,	1.03106,	1.03139,	1.03173,	1.03207,	1.0324,	1.03274,	1.03308,	1.03342,	1.03376,	1.03409,	1.03443,	1.03477,	1.03511,	1.03545,	1.03579,	1.03613,	1.03646,	1.0368,	1.03714,	1.03748,	1.03782,	1.03816,	1.0385,	1.03884,	1.03918,	1.03952,	1.03986,	1.0402,	1.04054,	1.04088,	1.04122,	1.04157,	1.04191,	1.04225,	1.04259,	1.04293,	1.04327,	1.04361,	1.04396,	1.0443,	1.04464,	1.04498,	1.04532,	1.04567,	1.04601,	1.04635,	1.04669,	1.04704,	1.04738,	1.04772,	1.04807,	1.04841,	1.04875,	1.0491,	1.04944,	1.04979,	1.05013,	1.05047,	1.05082,	1.05116,	1.05151,	1.05185,	1.0522,	1.05254,	1.05289,	1.05323,	1.05358,	1.05392,	1.05427,	1.05461,	1.05496,	1.05531,	1.05565,	1.056,	1.05635,	1.05669,	1.05704,	1.05738,	1.05773,	1.05808,	1.05843,	1.05877,	1.05912,	1.05947,	1.05982,	1.06016,	1.06051,	1.06086,	1.06121,	1.06156,	1.0619,	1.06225,	1.0626,	1.06295,	1.0633,	1.06365,	1.064,	1.06435,	1.0647,	1.06505,	1.06539,	1.06574,	1.06609,	1.06644,	1.06679,	1.06715,	1.0675,	1.06785,	1.0682,	1.06855,	1.0689,	1.06925,	1.0696,	1.06995,	1.0703,	1.07065,	1.07101,	1.07136,	1.07171,	1.07206,	1.07241,	1.07277,	1.07312,	1.07347,	1.07382,	1.07418,	1.07453,	1.07488,	1.07524,	1.07559,	1.07594,	1.0763,	1.07665,	1.077,	1.07736,	1.07771,	1.07807,	1.07842,	1.07878,	1.07913,	1.07948,	1.07984,	1.08019,	1.08055,	1.0809,	1.08126,	1.08162,	1.08197,	1.08233,	1.08268,	1.08304,	1.08339,	1.08375,	1.08411,	1.08446,	1.08482,	1.08518,	1.08553,	1.08589,	1.08625,	1.08661,	1.08696,	1.08732,	1.08768,	1.08804,	1.08839,	1.08875,	1.08911,	1.08947,	1.08983,	1.09018,	1.09054,	1.0909,	1.09126,	1.09162,	1.09198,	1.09234,	1.0927,	1.09306,	1.09342,	1.09378,	1.09414,	1.0945,	1.09486,	1.09522,	1.09558,	1.09594,	1.0963,	1.09666,	1.09702,	1.09738,	1.09774,	1.0981,	1.09846,	1.09883,	1.09919,	1.09955,	1.09991,	1.10027,	1.10064,	1.101,	1.10136,	1.10172,	1.10209,	1.10245,	1.10281,	1.10317,	1.10354,	1.1039,	1.10426,	1.10463,	1.10499,	1.10536,	1.10572,	1.10608,	1.10645,	1.10681,	1.10718,	1.10754,	1.10791,	1.10827,	1.10864,	1.109,	1.10937,	1.10973,	1.1101,	1.11046,	1.11083,	1.11119,	1.11156,	1.11193,	1.11229,	1.11266,	1.11302,	1.11339,	1.11376,	1.11412,	1.11449,	1.11486,	1.11523,	1.11559,	1.11596,	1.11633,	1.1167,	1.11706,	1.11743,	1.1178,	1.11817,	1.11854,	1.1189,	1.11927,	1.11964,	1.12001,	1.12038,	1.12075,	1.12112,	1.12149,	1.12186,	1.12223,	1.1226,	1.12297,	1.12334,	1.12371,	1.12408,	1.12445,	1.12482,	1.12519,	1.12556,	1.12593,	1.1263,	1.12667,	1.12704,	1.12741,	1.12779,	1.12816,	1.12853,	1.1289,	1.12927,	1.12965,	1.13002,	1.13039,	1.13076,	1.13114,	1.13151,	1.13188,	1.13225,	1.13263,	1.133,	1.13337,	1.13375,	1.13412,	1.1345,	1.13487,	1.13524,	1.13562,	1.13599,	1.13637,	1.13674,	1.13712,	1.13749,	1.13786,	1.13824,	1.13862,	1.13899,	1.13937,	1.13974,	1.14012,	1.14049,	1.14087,	1.14124,	1.14162,	1.142,	1.14237,	1.14275,	1.14313,	1.1435,	1.14388,	1.14426,	1.14464,	1.14501,	1.14539,	1.14577,	1.14615,	1.14652,	1.1469,	1.14728,	1.14766,	1.14804,	1.14841,	1.14879,	1.14917,	1.14955,	1.14993,	1.15031,	1.15069,	1.15107,	1.15145,	1.15183,	1.15221,	1.15259,	1.15297,	1.15335,	1.15373,	1.15411,	1.15449,	1.15487,	1.15525,	1.15563,	1.15601,	1.15639,	1.15677,	1.15715,	1.15753,	1.15792,	1.1583,	1.15868,	1.15906,	1.15944,	1.15983,	1.16021,	1.16059,	1.16097,	1.16136,	1.16174,	1.16212,	1.16251,	1.16289,	1.16327,	1.16366,	1.16404,	1.16442,	1.16481,	1.16519,	1.16558,	1.16596,	1.16634,	1.16673,	1.16711,	1.1675,	1.16788,	1.16827,	1.16865,	1.16904,	1.16942,	1.16981,	1.17019,	1.17058,	1.17097,	1.17135,	1.17174,	1.17213,	1.17251,	1.1729,	1.17328,	1.17367,	1.17406,	1.17445,	1.17483,	1.17522,	1.17561,	1.176,	1.17638,	1.17677,	1.17716,	1.17755,	1.17793,	1.17832,	1.17871,	1.1791,	1.17949,	1.17988,	1.18027,	1.18066,	1.18104,	1.18143,	1.18182,	1.18221,	1.1826,	1.18299,	1.18338,	1.18377,	1.18416,	1.18455,	1.18494,	1.18533,	1.18573,	1.18612,	1.18651,	1.1869,	1.18729,	1.18768,	1.18807,	1.18846,	1.18886,	1.18925,	1.18964,	1.19003,	1.19042,	1.19082,	1.19121,	1.1916,	1.19199,	1.19239,	1.19278,	1.19317,	1.19357,	1.19396,	1.19435,	1.19475,	1.19514,	1.19553,	1.19593,	1.19632,	1.19672,	1.19711,	1.19751,	1.1979,	1.19829,	1.19869,	1.19908,	1.19948,	1.19987,	1.20027,	1.20067,	1.20106,	1.20146,	1.20185,	1.20225,	1.20265,	1.20304,	1.20344,	1.20383,	1.20423,	1.20463,	1.20502,	1.20542,	1.20582,	1.20622,	1.20661,	1.20701,	1.20741,	1.20781,	1.2082,	1.2086,	1.209,	1.2094,	1.2098,	1.2102,	1.21059,	1.21099,	1.21139,	1.21179,	1.21219,	1.21259,	1.21299,	1.21339,	1.21379,	1.21419,	1.21459,	1.21499,	1.21539,	1.21579,	1.21619,	1.21659,	1.21699,	1.21739,	1.21779,	1.21819,	1.21859,	1.219,	1.2194,	1.2198,	1.2202,	1.2206,	1.221,	1.22141,	1.22181,	1.22221,	1.22261,	1.22302,	1.22342,	1.22382,	1.22423,	1.22463,	1.22503,	1.22543,	1.22584,	1.22624,	1.22665,	1.22705,	1.22745,	1.22786,	1.22826,	1.22867,	1.22907,	1.22948,	1.22988,	1.23028,	1.23069,	1.23109,	1.2315,	1.23191,	1.23231,	1.23272,	1.23312,	1.23353,	1.23393,	1.23434,	1.23475,	1.23515,	1.23556,	1.23597,	1.23637,	1.23678,	1.23719,	1.23759,	1.238,	1.23841,	1.23882,	1.23922,	1.23963,	1.24004,	1.24045,	1.24086,	1.24126,	1.24167,	1.24208,	1.24249,	1.2429,	1.24331,	1.24372,	1.24413,	1.24453,	1.24494,	1.24535,	1.24576,	1.24617,	1.24658,	1.24699,	1.2474,	1.24781,	1.24822,	1.24863,	1.24905,	1.24946,	1.24987,	1.25028,	1.25069,	1.2511,	1.25151,	1.25192,	1.25234,	1.25275,	1.25316,	1.25357,	1.25398,	1.2544,	1.25481,	1.25522,	1.25563,	1.25605,	1.25646,	1.25687,	1.25729,	1.2577,	1.25811,	1.25853,	1.25894,	1.25935,	1.25977,	1.26018,	1.2606,	1.26101,	1.26142,	1.26184,	1.26225,	1.26267,	1.26308,	1.2635,	1.26391,	1.26433,	1.26474,	1.26516,	1.26558,	1.26599,	1.26641,	1.26682,	1.26724,	1.26766,	1.26807,	1.26849,	1.26891,	1.26932,	1.26974,	1.27016,	1.27057,	1.27099,	1.27141,	1.27183,	1.27224,	1.27266,	1.27308,	1.2735,	1.27392,	1.27434,	1.27475,	1.27517,	1.27559,	1.27601,	1.27643,	1.27685,	1.27727,	1.27769,	1.27811,	1.27853,	1.27895,	1.27937,	1.27979,	1.28021,	1.28063,	1.28105,	1.28147,	1.28189,	1.28231,	1.28273,	1.28315,	1.28357,	1.28399,	1.28441,	1.28484,	1.28526,	1.28568,	1.2861,	1.28652,	1.28695,	1.28737,	1.28779,	1.28821,	1.28864,	1.28906,	1.28948,	1.2899,	1.29033,	1.29075,	1.29117,	1.2916,	1.29202,	1.29245,	1.29287,	1.29329,	1.29372,	1.29414,	1.29457,	1.29499,	1.29542,	1.29584,	1.29627,	1.29669,	1.29712,	1.29754,	1.29797,	1.29839,	1.29882,	1.29924,	1.29967,	1.3001,	1.30052,	1.30095,	1.30138,	1.3018,	1.30223,	1.30266,	1.30308,	1.30351,	1.30394,	1.30436,	1.30479,	1.30522,	1.30565,	1.30607,	1.3065,	1.30693,	1.30736,	1.30779,	1.30822,	1.30864,	1.30907,	1.3095,	1.30993,	1.31036,	1.31079,	1.31122,	1.31165,	1.31208,	1.31251,	1.31294,	1.31337,	1.3138,	1.31423,	1.31466,	1.31509,	1.31552,	1.31595,	1.31638,	1.31681,	1.31724,	1.31767,	1.31811,	1.31854,	1.31897,	1.3194,	1.31983,	1.32027,	1.3207,	1.32113,	1.32156,	1.32199,	1.32243,	1.32286,	1.32329,	1.32373,	1.32416,	1.32459,	1.32503,	1.32546,	1.32589,	1.32633,	1.32676,	1.32719,	1.32763,	1.32806,	1.3285,	1.32893,	1.32937,	1.3298,	1.33024,	1.33067,	1.33111,	1.33154,	1.33198,	1.33241,	1.33285,	1.33328,	1.33372,	1.33416,	1.33459,	1.33503,	1.33547,	1.3359,	1.33634,	1.33678,	1.33721,	1.33765,	1.33809,	1.33852,	1.33896,	1.3394,	1.33984,	1.34028,	1.34071,	1.34115,	1.34159,	1.34203,	1.34247,	1.3429,	1.34334,	1.34378,	1.34422,	1.34466,	1.3451,	1.34554,	1.34598,	1.34642,	1.34686,	1.3473,	1.34774,	1.34818,	1.34862,	1.34906,	1.3495,	1.34994,	1.35038,	1.35082,	1.35126,	1.3517,	1.35214,	1.35259,	1.35303,	1.35347,	1.35391,	1.35435,	1.35479,	1.35524,	1.35568,	1.35612,	1.35656,	1.35701,	1.35745,	1.35789,	1.35834,	1.35878,	1.35922,	1.35967,	1.36011,	1.36055,	1.361,	1.36144,	1.36188,	1.36233,	1.36277,	1.36322,	1.36366,	1.36411,	1.36455,	1.365,	1.36544,	1.36589,	1.36633,	1.36678,	1.36722,	1.36767,	1.36811,	1.36856,	1.36901,	1.36945,	1.3699,	1.37035,	1.37079,	1.37124,	1.37169,	1.37213,	1.37258,	1.37303,	1.37347,	1.37392,	1.37437,	1.37482,	1.37526,	1.37571,	1.37616,	1.37661,	1.37706,	1.37751,	1.37795,	1.3784,	1.37885,	1.3793,	1.37975,	1.3802,	1.38065,	1.3811,	1.38155,	1.382,	1.38245,	1.3829,	1.38335,	1.3838,	1.38425,	1.3847,	1.38515,	1.3856,	1.38605,	1.3865,	1.38695,	1.3874,	1.38785,	1.38831,	1.38876,	1.38921,	1.38966,	1.39011,	1.39057,	1.39102,	1.39147,	1.39192,	1.39238,	1.39283,	1.39328,	1.39373,	1.39419,	1.39464,	1.39509,	1.39555,	1.396,	1.39645,	1.39691,	1.39736,	1.39782,	1.39827,	1.39873,	1.39918,	1.39963,	1.40009,	1.40054,	1.401,	1.40145,	1.40191,	1.40236,	1.40282,	1.40328,	1.40373,	1.40419,	1.40464,	1.4051,	1.40556,	1.40601,	1.40647,	1.40693,	1.40738,	1.40784,	1.4083,	1.40875,	1.40921,	1.40967,	1.41013,	1.41058,	1.41104,	1.4115,	1.41196,	1.41242,	1.41287,	1.41333,	1.41379,	1.41425,	1.41471,	1.41517,	1.41563,	1.41609,	1.41655,	1.417,	1.41746,	1.41792,	1.41838,	1.41884,	1.4193,	1.41976,	1.42022,	1.42068,	1.42115,	1.42161,	1.42207,	1.42253,	1.42299,	1.42345,	1.42391,	1.42437,	1.42483,	1.4253,	1.42576,	1.42622,	1.42668,	1.42714,	1.42761,	1.42807,	1.42853,	1.42899,	1.42946,	1.42992,	1.43038,	1.43085,	1.43131,	1.43177,	1.43224,	1.4327,	1.43317,	1.43363,	1.43409,	1.43456,	1.43502,	1.43549,	1.43595,	1.43642,	1.43688,	1.43735,	1.43781,	1.43828,	1.43874,	1.43921,	1.43967,	1.44014,	1.4406,	1.44107,	1.44154,	1.442,	1.44247,	1.44294,	1.4434,	1.44387,	1.44434,	1.4448,	1.44527,	1.44574,	1.4462,	1.44667,	1.44714,	1.44761,	1.44808,	1.44854,	1.44901,	1.44948,	1.44995,	1.45042,	1.45089,	1.45135,	1.45182,	1.45229,	1.45276,	1.45323,	1.4537,	1.45417,	1.45464,	1.45511,	1.45558,	1.45605,	1.45652,	1.45699,	1.45746,	1.45793,	1.4584,	1.45887,	1.45934,	1.45981,	1.46029,	1.46076,	1.46123,	1.4617,	1.46217,	1.46264,	1.46312,	1.46359,	1.46406,	1.46453,	1.465,	1.46548,	1.46595,	1.46642,	1.4669,	1.46737,	1.46784,	1.46832,	1.46879,	1.46926,	1.46974,	1.47021,	1.47068,	1.47116,	1.47163,	1.47211,	1.47258,	1.47306,	1.47353,	1.47401,	1.47448,	1.47496,	1.47543,	1.47591,	1.47638,	1.47686,	1.47733,	1.47781,	1.47829,	1.47876,	1.47924,	1.47971,	1.48019,	1.48067,	1.48114,	1.48162,	1.4821,	1.48257,	1.48305,	1.48353,	1.48401,	1.48448,	1.48496,	1.48544,	1.48592,	1.4864,	1.48687,	1.48735,	1.48783,	1.48831,	1.48879,	1.48927,	1.48975,	1.49023,	1.49071,	1.49119,	1.49166,	1.49214,	1.49262,	1.4931,	1.49358,	1.49406,	1.49454,	1.49502,	1.49551,	1.49599,	1.49647,	1.49695,	1.49743,	1.49791,	1.49839,	1.49887,	1.49935,	1.49984,	1.50032,	1.5008,	1.50128,	1.50176,	1.50225,	1.50273,	1.50321,	1.50369,	1.50418,	1.50466,	1.50514,	1.50563,	1.50611,	1.50659,	1.50708,	1.50756,	1.50804,	1.50853,	1.50901,	1.5095,	1.50998,	1.51047,	1.51095,	1.51143,	1.51192,	1.5124,	1.51289,	1.51337,	1.51386,	1.51435,	1.51483,	1.51532,	1.5158,	1.51629,	1.51677,	1.51726,	1.51775,	1.51823,	1.51872,	1.51921,	1.51969,	1.52018,	1.52067,	1.52116,	1.52164,	1.52213,	1.52262,	1.52311,	1.52359,	1.52408,	1.52457,	1.52506,	1.52555,	1.52603,	1.52652,	1.52701,	1.5275,	1.52799,	1.52848,	1.52897,	1.52946,	1.52995,	1.53044,	1.53093,	1.53142,	1.53191,	1.5324,	1.53289,	1.53338,	1.53387,	1.53436,	1.53485,	1.53534,	1.53583,	1.53632,	1.53681,	1.53731,	1.5378,	1.53829,	1.53878,	1.53927,	1.53976,	1.54026,	1.54075,	1.54124,	1.54173,	1.54223,	1.54272,	1.54321,	1.54371,	1.5442,	1.54469,	1.54519,	1.54568,	1.54617,	1.54667,	1.54716,	1.54765,	1.54815,	1.54864,	1.54914,	1.54963,	1.55013,	1.55062,	1.55112,	1.55161,	1.55211,	1.5526,	1.5531,	1.55359,	1.55409,	1.55458,	1.55508,	1.55558,	1.55607,	1.55657,	1.55707,	1.55756,	1.55806,	1.55856,	1.55905,	1.55955,	1.56005,	1.56054,	1.56104,	1.56154,	1.56204,	1.56254,	1.56303,	1.56353,	1.56403,	1.56453,	1.56503,	1.56553,	1.56602,	1.56652,	1.56702,	1.56752,	1.56802,	1.56852,	1.56902,	1.56952,	1.57002,	1.57052,	1.57102,	1.57152,	1.57202,	1.57252,	1.57302,	1.57352,	1.57402,	1.57452,	1.57502,	1.57552,	1.57603,	1.57653,	1.57703,	1.57753,	1.57803,	1.57853,	1.57904,	1.57954,	1.58004,	1.58054,	1.58105,	1.58155,	1.58205,	1.58255,	1.58306,	1.58356,	1.58406,	1.58457,	1.58507,	1.58557,	1.58608,	1.58658,	1.58709,	1.58759,	1.58809,	1.5886,	1.5891,	1.58961,	1.59011,	1.59062,	1.59112,	1.59163,	1.59213,	1.59264,	1.59314,	1.59365,	1.59416,	1.59466,	1.59517,	1.59567,	1.59618,	1.59669,	1.59719,	1.5977,	1.59821,	1.59871,	1.59922,	1.59973,	1.60024,	1.60074,	1.60125,	1.60176,	1.60227,	1.60277,	1.60328,	1.60379,	1.6043,	1.60481,	1.60532,	1.60582,	1.60633,	1.60684,	1.60735,	1.60786,	1.60837,	1.60888,	1.60939,	1.6099,	1.61041,	1.61092,	1.61143,	1.61194,	1.61245,	1.61296,	1.61347,	1.61398,	1.61449,	1.615,	1.61551,	1.61603,	1.61654,	1.61705,	1.61756,	1.61807,	1.61858,	1.6191,	1.61961,	1.62012,	1.62063,	1.62114,	1.62166,	1.62217,	1.62268,	1.6232,	1.62371,	1.62422,	1.62474,	1.62525,	1.62576,	1.62628,	1.62679,	1.6273,	1.62782,	1.62833,	1.62885,	1.62936,	1.62988,	1.63039,	1.63091,	1.63142,	1.63194,	1.63245,	1.63297,	1.63348,	1.634,	1.63451,	1.63503,	1.63555,	1.63606,	1.63658,	1.6371,	1.63761,	1.63813,	1.63865,	1.63916,	1.63968,	1.6402,	1.64071,	1.64123,	1.64175,	1.64227,	1.64278,	1.6433,	1.64382,	1.64434,	1.64486,	1.64538,	1.64589,	1.64641,	1.64693,	1.64745,	1.64797,	1.64849,	1.64901,	1.64953,	1.65005,	1.65057,	1.65109,	1.65161,	1.65213,	1.65265,	1.65317,	1.65369,	1.65421,	1.65473,	1.65525,	1.65577,	1.65629,	1.65681,	1.65734,	1.65786,	1.65838,	1.6589,	1.65942,	1.65994,	1.66047,	1.66099,	1.66151,	1.66203,	1.66256,	1.66308,	1.6636,	1.66412,	1.66465,	1.66517,	1.66569,	1.66622,	1.66674,	1.66727,	1.66779,	1.66831,	1.66884,	1.66936,	1.66989,	1.67041,	1.67093,	1.67146,	1.67198,	1.67251,	1.67303,	1.67356,	1.67409,	1.67461,	1.67514,	1.67566,	1.67619,	1.67671,	1.67724,	1.67777,	1.67829,	1.67882,	1.67935,	1.67987,	1.6804,	1.68093,	1.68145,	1.68198,	1.68251,	1.68304,	1.68356,	1.68409,	1.68462,	1.68515,	1.68568,	1.6862,	1.68673,	1.68726,	1.68779,	1.68832,	1.68885,	1.68938,	1.68991,	1.69044,	1.69097,	1.69149,	1.69202,	1.69255,	1.69308,	1.69361,	1.69414,	1.69467,	1.69521,	1.69574,	1.69627,	1.6968,	1.69733,	1.69786,	1.69839,	1.69892,	1.69945,	1.69999,	1.70052,	1.70105,	1.70158,	1.70211,	1.70265,	1.70318,	1.70371,	1.70424,	1.70478,	1.70531,	1.70584,	1.70637,	1.70691,	1.70744,	1.70797,	1.70851,	1.70904,	1.70958,	1.71011,	1.71064,	1.71118,	1.71171,	1.71225,	1.71278,	1.71332,	1.71385,	1.71439,	1.71492,	1.71546,	1.71599,	1.71653,	1.71706,	1.7176,	1.71813,	1.71867,	1.71921,	1.71974,	1.72028,	1.72082,	1.72135,	1.72189,	1.72243,	1.72296,	1.7235,	1.72404,	1.72458,	1.72511,	1.72565,	1.72619,	1.72673,	1.72726,	1.7278,	1.72834,	1.72888,	1.72942,	1.72996,	1.7305,	1.73103,	1.73157,	1.73211,	1.73265,	1.73319,	1.73373,	1.73427,	1.73481,	1.73535,	1.73589,	1.73643,	1.73697,	1.73751,	1.73805,	1.73859,	1.73913,	1.73967,	1.74022,	1.74076,	1.7413,	1.74184,	1.74238,	1.74292,	1.74346,	1.74401,	1.74455,	1.74509,	1.74563,	1.74618,	1.74672,	1.74726,	1.7478,	1.74835,	1.74889,	1.74943,	1.74998,	1.75052,	1.75106,	1.75161,	1.75215,	1.75269,	1.75324,	1.75378,	1.75433,	1.75487,	1.75542,	1.75596,	1.75651,	1.75705,	1.7576,	1.75814,	1.75869,	1.75923,	1.75978,	1.76032,	1.76087,	1.76142,	1.76196,	1.76251,	1.76305,	1.7636,	1.76415,	1.76469,	1.76524,	1.76579,	1.76634,	1.76688,	1.76743,	1.76798,	1.76853,	1.76907,	1.76962,	1.77017,	1.77072,	1.77127,	1.77181,	1.77236,	1.77291,	1.77346,	1.77401,	1.77456,	1.77511,	1.77566,	1.77621,	1.77675,	1.7773,	1.77785,	1.7784,	1.77895,	1.7795,	1.78005,	1.78061,	1.78116,	1.78171,	1.78226,	1.78281,	1.78336,	1.78391,	1.78446,	1.78501,	1.78556,	1.78612,	1.78667,	1.78722,	1.78777,	1.78832,	1.78888,	1.78943,	1.78998,	1.79053,	1.79109,	1.79164,	1.79219,	1.79275,	1.7933,	1.79385,	1.79441,	1.79496,	1.79551,	1.79607,	1.79662,	1.79718,	1.79773,	1.79829,	1.79884,	1.79939,	1.79995,	1.8005,	1.80106,	1.80161,	1.80217,	1.80273,	1.80328,	1.80384,	1.80439,	1.80495,	1.80551,	1.80606,	1.80662,	1.80717,	1.80773,	1.80829,	1.80884,	1.8094,	1.80996,	1.81052,	1.81107,	1.81163,	1.81219,	1.81275,	1.8133,	1.81386,	1.81442,	1.81498,	1.81554,	1.8161,	1.81665,	1.81721,	1.81777,	1.81833,	1.81889,	1.81945,	1.82001,	1.82057,	1.82113,	1.82169,	1.82225,	1.82281,	1.82337,	1.82393,	1.82449,	1.82505,	1.82561,	1.82617,	1.82673,	1.82729,	1.82785,	1.82841,	1.82898,	1.82954,	1.8301,	1.83066,	1.83122,	1.83178,	1.83235,	1.83291,	1.83347,	1.83403,	1.8346,	1.83516,	1.83572,	1.83629,	1.83685,	1.83741,	1.83798,	1.83854,	1.8391,	1.83967,	1.84023,	1.84079,	1.84136,	1.84192,	1.84249,	1.84305,	1.84362,	1.84418,	1.84475,	1.84531,	1.84588,	1.84644,	1.84701,	1.84757,	1.84814,	1.8487,	1.84927,	1.84984,	1.8504,	1.85097,	1.85154,	1.8521,	1.85267,	1.85324,	1.8538,	1.85437,	1.85494,	1.8555,	1.85607,	1.85664,	1.85721,	1.85778,	1.85834,	1.85891,	1.85948,	1.86005,	1.86062,	1.86119,	1.86175,	1.86232,	1.86289,	1.86346,	1.86403,	1.8646,	1.86517,	1.86574,	1.86631,	1.86688,	1.86745,	1.86802,	1.86859,	1.86916,	1.86973,	1.8703,	1.87087,	1.87144,	1.87201,	1.87258,	1.87316,	1.87373,	1.8743,	1.87487,	1.87544,	1.87601,	1.87659,	1.87716,	1.87773,	1.8783,	1.87888,	1.87945,	1.88002,	1.88059,	1.88117,	1.88174,	1.88231,	1.88289,	1.88346,	1.88403,	1.88461,	1.88518,	1.88576,	1.88633,	1.8869,	1.88748,	1.88805,	1.88863,	1.8892,	1.88978,	1.89035,	1.89093,	1.8915,	1.89208,	1.89265,	1.89323,	1.89381,	1.89438,	1.89496,	1.89553,	1.89611,	1.89669,	1.89726,	1.89784,	1.89842,	1.89899,	1.89957,	1.90015,	1.90073,	1.9013,	1.90188,	1.90246,	1.90304,	1.90361,	1.90419,	1.90477,	1.90535,	1.90593,	1.90651,	1.90708,	1.90766,	1.90824,	1.90882,	1.9094,	1.90998,	1.91056,	1.91114,	1.91172,	1.9123,	1.91288,	1.91346,	1.91404,	1.91462,	1.9152,	1.91578,	1.91636,	1.91694,	1.91752,	1.9181,	1.91869,	1.91927,	1.91985,	1.92043,	1.92101,	1.92159,	1.92218,	1.92276,	1.92334,	1.92392,	1.9245,	1.92509,	1.92567,	1.92625,	1.92684,	1.92742,	1.928,	1.92859,	1.92917,	1.92975,	1.93034,	1.93092,	1.9315,	1.93209,	1.93267,	1.93326,	1.93384,	1.93443,	1.93501,	1.9356,	1.93618,	1.93677,	1.93735,	1.93794,	1.93852,	1.93911,	1.93969,	1.94028,	1.94087,	1.94145,	1.94204,	1.94263,	1.94321,	1.9438,	1.94439,	1.94497,	1.94556,	1.94615,	1.94673,	1.94732,	1.94791,	1.9485,	1.94908,	1.94967,	1.95026,	1.95085,	1.95144,	1.95203,	1.95261,	1.9532,	1.95379,	1.95438,	1.95497,	1.95556,	1.95615,	1.95674,	1.95733,	1.95792,	1.95851,	1.9591,	1.95969,	1.96028,	1.96087,	1.96146,	1.96205,	1.96264,	1.96323,	1.96382,	1.96441,	1.965,	1.9656,	1.96619,	1.96678,	1.96737,	1.96796,	1.96855,	1.96915,	1.96974,	1.97033,	1.97092,	1.97152,	1.97211,	1.9727,	1.97329,	1.97389,	1.97448,	1.97507,	1.97567,	1.97626,	1.97685,	1.97745,	1.97804,	1.97864,	1.97923,	1.97983,	1.98042,	1.98101,	1.98161,	1.9822,	1.9828,	1.98339,	1.98399,	1.98459,	1.98518,	1.98578,	1.98637,	1.98697,	1.98756,	1.98816,	1.98876,	1.98935,	1.98995,	1.99055,	1.99114,	1.99174,	1.99234,	1.99293,	1.99353,	1.99413,	1.99473,	1.99532,	1.99592,	1.99652,	1.99712,	1.99772,	1.99831,	1.99891,	1.99951,	2.00011,	2.00071,	2.00131,	2.00191,	2.00251,	2.00311,	2.00371,	2.0043,	2.0049,	2.0055,	2.0061,	2.0067,	2.0073,	2.0079,	2.00851,	2.00911,	2.00971,	2.01031,	2.01091,	2.01151,	2.01211,	2.01271,	2.01331,	2.01391,	2.01452,	2.01512,	2.01572,	2.01632,	2.01692,	2.01753,	2.01813,	2.01873,	2.01934,	2.01994,	2.02054,	2.02114,	2.02175,	2.02235,	2.02295,	2.02356,	2.02416,	2.02477,	2.02537,	2.02597,	2.02658,	2.02718,	2.02779,	2.02839,	2.029,	2.0296,	2.03021,	2.03081,	2.03142,	2.03202,	2.03263,	2.03323,	2.03384,	2.03444,	2.03505,	2.03566,	2.03626,	2.03687,	2.03748,	2.03808,	2.03869,	2.0393,	2.0399,	2.04051,	2.04112,	2.04173,	2.04233,	2.04294,	2.04355,	2.04416,	2.04476,	2.04537,	2.04598,	2.04659,	2.0472,	2.04781,	2.04841,	2.04902,	2.04963,	2.05024,	2.05085,	2.05146,	2.05207,	2.05268,	2.05329,	2.0539,	2.05451,	2.05512,	2.05573,	2.05634,	2.05695,	2.05756,	2.05817,	2.05878,	2.05939,	2.06001,	2.06062,	2.06123,	2.06184,	2.06245,	2.06306,	2.06368,	2.06429,	2.0649,	2.06551,	2.06612,	2.06674,	2.06735,	2.06796,	2.06858,	2.06919,	2.0698,	2.07042,	2.07103,	2.07164,	2.07226,	2.07287,	2.07348,	2.0741,	2.07471,	2.07533,	2.07594,	2.07656,	2.07717,	2.07779,	2.0784,	2.07902,	2.07963,	2.08025,	2.08086,	2.08148,	2.08209,	2.08271,	2.08333,	2.08394,	2.08456,	2.08517,	2.08579,	2.08641,	2.08702,	2.08764,	2.08826,	2.08887,	2.08949,	2.09011,	2.09073,	2.09134,	2.09196,	2.09258,	2.0932,	2.09382,	2.09443,	2.09505,	2.09567,	2.09629,	2.09691,	2.09753,	2.09815,	2.09877,	2.09939,	2.1,	2.10062,	2.10124,	2.10186,	2.10248,	2.1031,	2.10372,	2.10434,	2.10496,	2.10559,	2.10621,	2.10683,	2.10745,	2.10807,	2.10869,	2.10931,	2.10993,	2.11055,	2.11118,	2.1118,	2.11242,	2.11304,	2.11366,	2.11429,	2.11491,	2.11553,	2.11615,	2.11678,	2.1174,	2.11802,	2.11865,	2.11927,	2.11989,	2.12052,	2.12114,	2.12176,	2.12239,	2.12301,	2.12364,	2.12426,	2.12489,	2.12551,	2.12613,	2.12676,	2.12738,	2.12801,	2.12863,	2.12926,	2.12989,	2.13051,	2.13114,	2.13176,	2.13239,	2.13301,	2.13364,	2.13427,	2.13489,	2.13552,	2.13615,	2.13677,	2.1374,	2.13803,	2.13866,	2.13928,	2.13991,	2.14054,	2.14117,	2.14179,	2.14242,	2.14305,	2.14368,	2.14431,	2.14493,	2.14556,	2.14619,	2.14682,	2.14745,	2.14808,	2.14871,	2.14934,	2.14997,	2.1506,	2.15123,	2.15186,	2.15249,	2.15312,	2.15375,	2.15438,	2.15501,	2.15564,	2.15627,	2.1569,	2.15753,	2.15816,	2.15879,	2.15943,	2.16006,	2.16069,	2.16132,	2.16195,	2.16258,	2.16322,	2.16385,	2.16448,	2.16511,	2.16575,	2.16638,	2.16701,	2.16765,	2.16828,	2.16891,	2.16955,	2.17018,	2.17081,	2.17145,	2.17208,	2.17271,	2.17335,	2.17398,	2.17462,	2.17525,	2.17589,	2.17652,	2.17716,	2.17779,	2.17843,	2.17906,	2.1797,	2.18033,	2.18097,	2.1816,	2.18224,	2.18288,	2.18351,	2.18415,	2.18479,	2.18542,	2.18606,	2.1867,	2.18733,	2.18797,	2.18861,	2.18924,	2.18988,	2.19052,	2.19116,	2.1918,	2.19243,	2.19307,	2.19371,	2.19435,	2.19499,	2.19562,	2.19626,	2.1969,	2.19754,	2.19818,	2.19882,	2.19946,	2.2001,	2.20074,	2.20138,	2.20202,	2.20266,	2.2033,	2.20394,	2.20458,	2.20522,	2.20586,	2.2065,	2.20714,	2.20778,	2.20842,	2.20906,	2.20971,	2.21035,	2.21099,	2.21163,	2.21227,	2.21292,	2.21356,	2.2142,	2.21484,	2.21548,	2.21613,	2.21677,	2.21741,	2.21806,	2.2187,	2.21934,	2.21999,	2.22063,	2.22127,	2.22192,	2.22256,	2.2232,	2.22385,	2.22449,	2.22514,	2.22578,	2.22643,	2.22707,	2.22772,	2.22836,	2.22901,	2.22965,	2.2303,	2.23094,	2.23159,	2.23223,	2.23288,	2.23353,	2.23417,	2.23482,	2.23547,	2.23611,	2.23676,	2.23741,	2.23805,	2.2387,	2.23935,	2.23999,	2.24064,	2.24129,	2.24194,	2.24259,	2.24323,	2.24388,	2.24453,	2.24518,	2.24583,	2.24647,	2.24712,	2.24777,	2.24842,	2.24907,	2.24972,	2.25037,	2.25102,	2.25167,	2.25232,	2.25297,	2.25362,	2.25427,	2.25492,	2.25557,	2.25622,	2.25687,	2.25752,	2.25817,	2.25882,	2.25947,	2.26012,	2.26078,	2.26143,	2.26208,	2.26273,	2.26338,	2.26403,	2.26469,	2.26534,	2.26599,	2.26664,	2.2673,	2.26795,	2.2686,	2.26926,	2.26991,	2.27056,	2.27122,	2.27187,	2.27252,	2.27318,	2.27383,	2.27448,	2.27514,	2.27579,	2.27645,	2.2771,	2.27776,	2.27841,	2.27907,	2.27972,	2.28038,	2.28103,	2.28169,	2.28234,	2.283,	2.28365,	2.28431,	2.28497,	2.28562,	2.28628,	2.28693,	2.28759,	2.28825,	2.2889,	2.28956,	2.29022,	2.29088,	2.29153,	2.29219,	2.29285,	2.29351,	2.29416,	2.29482,	2.29548,	2.29614,	2.2968,	2.29745,	2.29811,	2.29877,	2.29943,	2.30009,	2.30075,	2.30141,	2.30207,	2.30273,	2.30339,	2.30405,	2.30471,	2.30537,	2.30603,	2.30669,	2.30735,	2.30801,	2.30867,	2.30933,	2.30999,	2.31065,	2.31131,	2.31197,	2.31263,	2.3133,	2.31396,	2.31462,	2.31528,	2.31594,	2.31661,	2.31727,	2.31793,	2.31859,	2.31925,	2.31992,	2.32058,	2.32124,	2.32191,	2.32257,	2.32323,	2.3239,	2.32456,	2.32522,	2.32589,	2.32655,	2.32722,	2.32788,	2.32854,	2.32921,	2.32987,	2.33054,	2.3312,	2.33187,	2.33253,	2.3332,	2.33386,	2.33453,	2.3352,	2.33586,	2.33653,	2.33719,	2.33786,	2.33853,	2.33919,	2.33986,	2.34053,	2.34119,	2.34186,	2.34253,	2.34319,	2.34386,	2.34453,	2.3452,	2.34586,	2.34653,	2.3472,	2.34787,	2.34854,	2.3492,	2.34987,	2.35054,	2.35121,	2.35188,	2.35255,	2.35322,	2.35389,	2.35455,	2.35522,	2.35589,	2.35656,	2.35723,	2.3579,	2.35857,	2.35924,	2.35991,	2.36058,	2.36125,	2.36193,	2.3626,	2.36327,	2.36394,	2.36461,	2.36528,	2.36595,	2.36662,	2.3673,	2.36797,	2.36864,	2.36931,	2.36998,	2.37066,	2.37133,	2.372,	2.37267,	2.37335,	2.37402,	2.37469,	2.37537,	2.37604,	2.37671,	2.37739,	2.37806,	2.37873,	2.37941,	2.38008,	2.38076,	2.38143,	2.38211,	2.38278,	2.38346,	2.38413,	2.3848,	2.38548,	2.38616,	2.38683,	2.38751,	2.38818,	2.38886,	2.38953,	2.39021,	2.39089,	2.39156,	2.39224,	2.39291,	2.39359,	2.39427,	2.39495,	2.39562,	2.3963,	2.39698,	2.39765,	2.39833,	2.39901,	2.39969,	2.40036,	2.40104,	2.40172,	2.4024,	2.40308,	2.40376,	2.40444,	2.40511,	2.40579,	2.40647,	2.40715,	2.40783,	2.40851,	2.40919,	2.40987,	2.41055,	2.41123,	2.41191,	2.41259,	2.41327,	2.41395,	2.41463,	2.41531,	2.41599,	2.41667,	2.41735,	2.41804,	2.41872,	2.4194,	2.42008,	2.42076,	2.42144,	2.42212,	2.42281,	2.42349,	2.42417,	2.42485,	2.42554,	2.42622,	2.4269,	2.42759,	2.42827,	2.42895,	2.42963,	2.43032,	2.431,	2.43169,	2.43237,	2.43305,	2.43374,	2.43442,	2.43511,	2.43579,	2.43648,	2.43716,	2.43784,	2.43853,	2.43921,	2.4399,	2.44059,	2.44127,	2.44196,	2.44264,	2.44333,	2.44401,	2.4447,	2.44539,	2.44607,	2.44676,	2.44745,	2.44813,	2.44882,	2.44951,	2.45019,	2.45088,	2.45157,	2.45226,	2.45294,	2.45363,	2.45432,	2.45501,	2.4557,	2.45638,	2.45707,	2.45776,	2.45845,	2.45914,	2.45983,	2.46052,	2.46121,	2.46189,	2.46258,	2.46327,	2.46396,	2.46465,	2.46534,	2.46603,	2.46672,	2.46741,	2.4681,	2.46879,	2.46948,	2.47018,	2.47087,	2.47156,	2.47225,	2.47294,	2.47363,	2.47432,	2.47501,	2.47571,	2.4764,	2.47709,	2.47778,	2.47848,	2.47917,	2.47986,	2.48055,	2.48125,	2.48194,	2.48263,	2.48332,	2.48402,	2.48471,	2.48541,	2.4861,	2.48679,	2.48749,	2.48818,	2.48888,	2.48957,	2.49026,	2.49096,	2.49165,	2.49235,	2.49304,	2.49374,	2.49443,	2.49513,	2.49582,	2.49652,	2.49722,	2.49791,	2.49861,	2.4993,	2.5,	2.5007,	2.50139,	2.50209,	2.50279,	2.50348,	2.50418,	2.50488,	2.50557,	2.50627,	2.50697,	2.50767,	2.50836,	2.50906,	2.50976,	2.51046,	2.51116,	2.51186,	2.51255,	2.51325,	2.51395,	2.51465,	2.51535,	2.51605,	2.51675,	2.51745,	2.51815,	2.51885,	2.51955,	2.52025,	2.52095,	2.52165,	2.52235,	2.52305,	2.52375,	2.52445,	2.52515,	2.52585,	2.52655,	2.52725,	2.52795,	2.52865,	2.52936,	2.53006,	2.53076,	2.53146,	2.53216,	2.53287,	2.53357,	2.53427,	2.53497,	2.53568,	2.53638,	2.53708,	2.53778,	2.53849,	2.53919,	2.53989,	2.5406,	2.5413,	2.542,	2.54271,	2.54341,	2.54412,	2.54482,	2.54553,	2.54623,	2.54694,	2.54764,	2.54834,	2.54905,	2.54976,	2.55046,	2.55117,	2.55187,	2.55258,	2.55328,	2.55399,	2.5547,	2.5554,	2.55611,	2.55681,	2.55752,	2.55823,	2.55893,	2.55964,	2.56035,	2.56106,	2.56176,	2.56247,	2.56318,	2.56389,	2.56459,	2.5653,	2.56601,	2.56672,	2.56743,	2.56813,	2.56884,	2.56955,	2.57026,	2.57097,	2.57168,	2.57239,	2.5731,	2.57381,	2.57452,	2.57523,	2.57594,	2.57665,	2.57736,	2.57807,	2.57878,	2.57949,	2.5802,	2.58091,	2.58162,	2.58233,	2.58304,	2.58375,	2.58447,	2.58518,	2.58589,	2.5866,	2.58731,	2.58802,	2.58874,	2.58945,	2.59016,	2.59087,	2.59159,	2.5923,	2.59301,	2.59372,	2.59444,	2.59515,	2.59586,	2.59658,	2.59729,	2.59801,	2.59872,	2.59943,	2.60015,	2.60086,	2.60158,	2.60229,	2.60301,	2.60372,	2.60444,	2.60515,	2.60587,	2.60658,	2.6073,	2.60801,	2.60873,	2.60944,	2.61016,	2.61088,	2.61159,	2.61231,	2.61302,	2.61374,	2.61446,	2.61517,	2.61589,	2.61661,	2.61733,	2.61804,	2.61876,	2.61948,	2.6202,	2.62091,	2.62163,	2.62235,	2.62307,	2.62379,	2.6245,	2.62522,	2.62594,	2.62666,	2.62738,	2.6281,	2.62882,	2.62954,	2.63026,	2.63098,	2.6317,	2.63242,	2.63314,	2.63386,	2.63458,	2.6353,	2.63602,	2.63674,	2.63746,	2.63818,	2.6389,	2.63962,	2.64034,	2.64106,	2.64179,	2.64251,	2.64323,	2.64395,	2.64467,	2.6454,	2.64612,	2.64684,	2.64756,	2.64829,	2.64901,	2.64973,	2.65045,	2.65118,	2.6519,	2.65262,	2.65335,	2.65407,	2.65479,	2.65552,	2.65624,	2.65697,	2.65769,	2.65842,	2.65914,	2.65986,	2.66059,	2.66131,	2.66204,	2.66276,	2.66349,	2.66422,	2.66494,	2.66567,	2.66639,	2.66712,	2.66784,	2.66857,	2.6693,	2.67002,	2.67075,	2.67148,	2.6722,	2.67293,	2.67366,	2.67438,	2.67511,	2.67584,	2.67657,	2.67729,	2.67802,	2.67875,	2.67948,	2.68021,	2.68094,	2.68166,	2.68239,	2.68312,	2.68385,	2.68458,	2.68531,	2.68604,	2.68677,	2.6875,	2.68823,	2.68895,	2.68968,	2.69041,	2.69114,	2.69188,	2.69261,	2.69334,	2.69407,	2.6948,	2.69553,	2.69626,	2.69699,	2.69772,	2.69845,	2.69918,	2.69992,	2.70065,	2.70138,	2.70211,	2.70284,	2.70358,	2.70431,	2.70504,	2.70577,	2.70651,	2.70724,	2.70797,	2.70871,	2.70944,	2.71017,	2.71091,	2.71164,	2.71237,	2.71311,	2.71384,	2.71457,	2.71531,	2.71604,	2.71678,	2.71751,	2.71825,	2.71898,	2.71972,	2.72045,	2.72119,	2.72192,	2.72266,	2.72339,	2.72413,	2.72487,	2.7256,	2.72634,	2.72707,	2.72781,	2.72855,	2.72928,	2.73002,	2.73076,	2.73149,	2.73223,	2.73297,	2.73371,	2.73444,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	1.09018,	


Input > Layer1  time = 279625 ms
------------------
------------------
Start Input > Layer1 > Layer2 
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 1: j = 32
Thread 0: j = 0
Thread 2: j = 64
Thread 3: j = 96
Thread 1: j = 33
Thread 0: j = 1
Thread 2: j = 65
Thread 3: j = 97
Thread 1: j = 34
Thread 0: j = 2
Thread 2: j = 66
Thread 3: j = 98
Thread 1: j = 35
Thread 0: j = 3
Thread 2: j = 67
Thread 3: j = 99
Thread 1: j = 36
Thread 0: j = 4
Thread 2: j = 68
Thread 3: j = 100
Thread 1: j = 37
Thread 0: j = 5
Thread 2: j = 69
Thread 3: j = 101
Thread 1: j = 38
Thread 0: j = 6
Thread 2: j = 70
Thread 3: j = 102
Thread 1: j = 39
Thread 0: j = 7
Thread 2: j = 71
Thread 3: j = 103
Thread 1: j = 40
Thread 0: j = 8
Thread 2: j = 72
Thread 3: j = 104
Thread 1: j = 41
Thread 0: j = 9
Thread 2: j = 73
Thread 3: j = 105
Thread 1: j = 42
Thread 0: j = 10
Thread 2: j = 74
Thread 3: j = 106
Thread 1: j = 43
Thread 0: j = 11
Thread 2: j = 75
Thread 3: j = 107
Thread 1: j = 44
Thread 0: j = 12
Thread 2: j = 76
Thread 3: j = 108
Thread 1: j = 45
Thread 0: j = 13
Thread 2: j = 77
Thread 3: j = 109
Thread 1: j = 46
Thread 0: j = 14
Thread 2: j = 78
Thread 3: j = 110
Thread 1: j = 47
Thread 0: j = 15
Thread 2: j = 79
Thread 3: j = 111
Thread 1: j = 48
Thread 0: j = 16
Thread 2: j = 80
Thread 3: j = 112
Thread 1: j = 49
Thread 0: j = 17
Thread 2: j = 81
Thread 3: j = 113
Thread 1: j = 50
Thread 0: j = 18
Thread 2: j = 82
Thread 3: j = 114
Thread 1: j = 51
Thread 0: j = 19
Thread 2: j = 83
Thread 3: j = 115
Thread 1: j = 52
Thread 0: j = 20
Thread 2: j = 84
Thread 3: j = 116
Thread 1: j = 53
Thread 0: j = 21
Thread 2: j = 85
Thread 3: j = 117
Thread 1: j = 54
Thread 0: j = 22
Thread 2: j = 86
Thread 3: j = 118
Thread 1: j = 55
Thread 0: j = 23
Thread 2: j = 87
Thread 3: j = 119
Thread 1: j = 56
Thread 0: j = 24
Thread 2: j = 88
Thread 3: j = 120
Thread 1: j = 57
Thread 0: j = 25
Thread 2: j = 89
Thread 3: j = 121
Thread 1: j = 58
Thread 0: j = 26
Thread 2: j = 90
Thread 3: j = 122
Thread 1: j = 59
Thread 0: j = 27
Thread 2: j = 91
Thread 3: j = 123
Thread 1: j = 60
Thread 0: j = 28
Thread 2: j = 92
Thread 3: j = 124
Thread 1: j = 61
Thread 0: j = 29
Thread 2: j = 93
Thread 3: j = 125
Thread 1: j = 62
Thread 0: j = 30
Thread 2: j = 94
Thread 3: j = 126
Thread 1: j = 63
Thread 0: j = 31
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 1: j = 32
Thread 0: j = 0
Thread 2: j = 64
Thread 3: j = 96
Thread 1: j = 33
Thread 0: j = 1
Thread 2: j = 65
Thread 3: j = 97
Thread 1: j = 34
Thread 0: j = 2
Thread 2: j = 66
Thread 3: j = 98
Thread 1: j = 35
Thread 0: j = 3
Thread 2: j = 67
Thread 3: j = 99
Thread 1: j = 36
Thread 0: j = 4
Thread 2: j = 68
Thread 3: j = 100
Thread 1: j = 37
Thread 0: j = 5
Thread 2: j = 69
Thread 3: j = 101
Thread 1: j = 38
Thread 0: j = 6
Thread 2: j = 70
Thread 3: j = 102
Thread 1: j = 39
Thread 0: j = 7
Thread 2: j = 71
Thread 3: j = 103
Thread 1: j = 40
Thread 0: j = 8
Thread 2: j = 72
Thread 3: j = 104
Thread 1: j = 41
Thread 0: j = 9
Thread 2: j = 73
Thread 3: j = 105
Thread 1: j = 42
Thread 0: j = 10
Thread 2: j = 74
Thread 3: j = 106
Thread 1: j = 43
Thread 0: j = 11
Thread 2: j = 75
Thread 3: j = 107
Thread 1: j = 44
Thread 0: j = 12
Thread 2: j = 76
Thread 3: j = 108
Thread 1: j = 45
Thread 0: j = 13
Thread 2: j = 77
Thread 3: j = 109
Thread 1: j = 46
Thread 0: j = 14
Thread 2: j = 78
Thread 3: j = 110
Thread 1: j = 47
Thread 0: j = 15
Thread 2: j = 79
Thread 3: j = 111
Thread 1: j = 48
Thread 0: j = 16
Thread 2: j = 80
Thread 3: j = 112
Thread 1: j = 49
Thread 0: j = 17
Thread 2: j = 81
Thread 3: j = 113
Thread 1: j = 50
Thread 0: j = 18
Thread 2: j = 82
Thread 3: j = 114
Thread 1: j = 51
Thread 0: j = 19
Thread 2: j = 83
Thread 3: j = 115
Thread 1: j = 52
Thread 0: j = 20
Thread 2: j = 84
Thread 3: j = 116
Thread 1: j = 53
Thread 0: j = 21
Thread 2: j = 85
Thread 3: j = 117
Thread 1: j = 54
Thread 0: j = 22
Thread 2: j = 86
Thread 3: j = 118
Thread 1: j = 55
Thread 0: j = 23
Thread 2: j = 87
Thread 3: j = 119
Thread 1: j = 56
Thread 0: j = 24
Thread 2: j = 88
Thread 3: j = 120
Thread 1: j = 57
Thread 0: j = 25
Thread 2: j = 89
Thread 3: j = 121
Thread 1: j = 58
Thread 0: j = 26
Thread 2: j = 90
Thread 3: j = 122
Thread 1: j = 59
Thread 0: j = 27
Thread 2: j = 91
Thread 3: j = 123
Thread 1: j = 60
Thread 0: j = 28
Thread 2: j = 92
Thread 3: j = 124
Thread 1: j = 61
Thread 0: j = 29
Thread 2: j = 93
Thread 3: j = 125
Thread 1: j = 62
Thread 0: j = 30
Thread 2: j = 94
Thread 3: j = 126
Thread 1: j = 63
Thread 0: j = 31
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 3: j = 119
Thread 1: j = 55
Thread 2: j = 87
Thread 0: j = 23
Thread 3: j = 120
Thread 1: j = 56
Thread 2: j = 88
Thread 0: j = 24
Thread 3: j = 121
Thread 1: j = 57
Thread 2: j = 89
Thread 0: j = 25
Thread 3: j = 122
Thread 1: j = 58
Thread 2: j = 90
Thread 0: j = 26
Thread 3: j = 123
Thread 1: j = 59
Thread 2: j = 91
Thread 0: j = 27
Thread 3: j = 124
Thread 1: j = 60
Thread 2: j = 92
Thread 0: j = 28
Thread 3: j = 125
Thread 1: j = 61
Thread 2: j = 93
Thread 0: j = 29
Thread 3: j = 126
Thread 1: j = 62
Thread 2: j = 94
Thread 0: j = 30
Thread 3: j = 127
Thread 1: j = 63
Thread 2: j = 95
Thread 0: j = 31
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 0: j = 7
Thread 2: j = 70
Thread 1: j = 39
Thread 3: j = 103
Thread 0: j = 8
Thread 2: j = 71
Thread 1: j = 40
Thread 3: j = 104
Thread 0: j = 9
Thread 2: j = 72
Thread 1: j = 41
Thread 3: j = 105
Thread 0: j = 10
Thread 2: j = 73
Thread 1: j = 42
Thread 3: j = 106
Thread 0: j = 11
Thread 2: j = 74
Thread 1: j = 43
Thread 3: j = 107
Thread 0: j = 12
Thread 2: j = 75
Thread 1: j = 44
Thread 3: j = 108
Thread 0: j = 13
Thread 2: j = 76
Thread 1: j = 45
Thread 3: j = 109
Thread 0: j = 14
Thread 2: j = 77
Thread 1: j = 46
Thread 3: j = 110
Thread 0: j = 15
Thread 2: j = 78
Thread 1: j = 47
Thread 3: j = 111
Thread 0: j = 16
Thread 2: j = 79
Thread 1: j = 48
Thread 3: j = 112
Thread 0: j = 17
Thread 2: j = 80
Thread 1: j = 49
Thread 3: j = 113
Thread 0: j = 18
Thread 2: j = 81
Thread 1: j = 50
Thread 3: j = 114
Thread 0: j = 19
Thread 2: j = 82
Thread 1: j = 51
Thread 3: j = 115
Thread 0: j = 20
Thread 2: j = 83
Thread 1: j = 52
Thread 3: j = 116
Thread 0: j = 21
Thread 2: j = 84
Thread 1: j = 53
Thread 3: j = 117
Thread 0: j = 22
Thread 2: j = 85
Thread 1: j = 54
Thread 3: j = 118
Thread 0: j = 23
Thread 2: j = 86
Thread 1: j = 55
Thread 3: j = 119
Thread 0: j = 24
Thread 2: j = 87
Thread 1: j = 56
Thread 3: j = 120
Thread 0: j = 25
Thread 2: j = 88
Thread 1: j = 57
Thread 3: j = 121
Thread 0: j = 26
Thread 2: j = 89
Thread 1: j = 58
Thread 3: j = 122
Thread 0: j = 27
Thread 2: j = 90
Thread 1: j = 59
Thread 3: j = 123
Thread 0: j = 28
Thread 2: j = 91
Thread 1: j = 60
Thread 3: j = 124
Thread 0: j = 29
Thread 2: j = 92
Thread 1: j = 61
Thread 3: j = 125
Thread 0: j = 30
Thread 2: j = 93
Thread 1: j = 62
Thread 3: j = 126
Thread 0: j = 31
Thread 2: j = 94
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2

// Input > Layer1 > Layer2



SDFS:
18.2595,	18.2469,	18.2342,	18.2216,	18.2089,	18.1963,	18.1837,	18.171,	18.1584,	18.1458,	18.1332,	18.1206,	18.108,	18.0954,	18.0829,	18.0703,	18.0577,	18.0452,	18.0326,	18.0201,	18.0075,	17.995,	17.9825,	17.9699,	17.9574,	17.9449,	17.9324,	17.9199,	17.9074,	17.895,	17.8825,	17.87,	17.8576,	17.8451,	17.8327,	17.8202,	17.8078,	17.7953,	17.7829,	17.7705,	17.7581,	17.7457,	17.7333,	17.7209,	17.7085,	17.6961,	17.6838,	17.6714,	17.659,	17.6467,	17.6343,	17.622,	17.6097,	17.5973,	17.585,	17.5727,	17.5604,	17.5481,	17.5358,	17.5235,	17.5112,	17.4989,	17.4867,	17.4744,	17.4622,	17.4499,	17.4377,	17.4254,	17.4132,	17.401,	17.3887,	17.3765,	17.3643,	17.3521,	17.3399,	17.3277,	17.3156,	17.3034,	17.2912,	17.279,	17.2669,	17.2547,	17.2426,	17.2305,	17.2183,	17.2062,	17.1941,	17.182,	17.1699,	17.1578,	17.1457,	17.1336,	17.1215,	17.1094,	17.0974,	17.0853,	17.0733,	17.0612,	17.0492,	17.0371,	17.0251,	17.0131,	17.0011,	16.989,	16.977,	16.965,	16.953,	16.9411,	16.9291,	16.9171,	16.9051,	16.8932,	16.8812,	16.8693,	16.8573,	16.8454,	16.8335,	16.8215,	16.8096,	16.7977,	16.7858,	16.7739,	16.762,	16.7501,	16.7383,	16.7264,	16.7145,	16.7027,	16.6908,	16.6789,	16.6671,	16.6553,	16.6434,	16.6316,	16.6198,	16.608,	16.5962,	16.5844,	16.5726,	16.5608,	16.549,	16.5373,	16.5255,	16.5137,	16.502,	16.4902,	16.4785,	16.4667,	16.455,	16.4433,	16.4316,	16.4198,	16.4081,	16.3964,	16.3847,	16.3731,	16.3614,	16.3497,	16.338,	16.3264,	16.3147,	16.3031,	16.2914,	16.2798,	16.2682,	16.2565,	16.2449,	16.2333,	16.2217,	16.2101,	16.1985,	16.1869,	16.1753,	16.1637,	16.1522,	16.1406,	16.129,	16.1175,	16.1059,	16.0944,	16.0829,	16.0713,	16.0598,	16.0483,	16.0368,	16.0253,	16.0138,	16.0023,	15.9908,	15.9793,	15.9679,	15.9564,	15.9449,	15.9335,	15.922,	15.9106,	15.8992,	15.8877,	15.8763,	15.8649,	15.8535,	15.8421,	15.8307,	15.8193,	15.8079,	15.7965,	15.7851,	15.7738,	15.7624,	15.751,	15.7397,	15.7283,	15.717,	15.7057,	15.6943,	15.683,	15.6717,	15.6604,	15.6491,	15.6378,	15.6265,	15.6152,	15.6039,	15.5927,	15.5814,	15.5701,	15.5589,	15.5476,	15.5364,	15.5252,	15.5139,	15.5027,	15.4915,	15.4803,	15.4691,	15.4579,	15.4467,	15.4355,	15.4243,	15.4131,	15.402,	15.3908,	15.3796,	15.3685,	15.3573,	15.3462,	15.3351,	15.3239,	15.3128,	15.3017,	15.2906,	15.2795,	15.2684,	15.2573,	15.2462,	15.2351,	15.224,	15.213,	15.2019,	15.1909,	15.1798,	15.1688,	15.1577,	15.1467,	15.1357,	15.1246,	15.1136,	15.1026,	15.0916,	15.0806,	15.0696,	15.0586,	15.0477,	15.0367,	15.0257,	15.0148,	15.0038,	14.9928,	14.9819,	14.971,	14.96,	14.9491,	14.9382,	14.9273,	14.9164,	14.9055,	14.8946,	14.8837,	14.8728,	14.8619,	14.851,	14.8402,	14.8293,	14.8185,	14.8076,	14.7968,	14.7859,	14.7751,	14.7643,	14.7534,	14.7426,	14.7318,	14.721,	14.7102,	14.6994,	14.6886,	14.6779,	14.6671,	14.6563,	14.6456,	14.6348,	14.6241,	14.6133,	14.6026,	14.5918,	14.5811,	14.5704,	14.5597,	14.549,	14.5383,	14.5276,	14.5169,	14.5062,	14.4955,	14.4848,	14.4742,	14.4635,	14.4529,	14.4422,	14.4316,	14.4209,	14.4103,	14.3997,	14.389,	14.3784,	14.3678,	14.3572,	14.3466,	14.336,	14.3254,	14.3149,	14.3043,	14.2937,	14.2831,	14.2726,	14.262,	14.2515,	14.2409,	14.2304,	14.2199,	14.2094,	14.1988,	14.1883,	14.1778,	14.1673,	14.1568,	14.1463,	14.1359,	14.1254,	14.1149,	14.1044,	14.094,	14.0835,	14.0731,	14.0626,	14.0522,	14.0418,	14.0314,	14.0209,	14.0105,	14.0001,	13.9897,	13.9793,	13.9689,	13.9585,	13.9482,	13.9378,	13.9274,	13.9171,	13.9067,	13.8963,	13.886,	13.8757,	13.8653,	13.855,	13.8447,	13.8344,	13.8241,	13.8137,	13.8035,	13.7932,	13.7829,	13.7726,	13.7623,	13.752,	13.7418,	13.7315,	13.7213,	13.711,	13.7008,	13.6905,	13.6803,	13.6701,	13.6599,	13.6496,	13.6394,	13.6292,	13.619,	13.6088,	13.5987,	13.5885,	13.5783,	13.5681,	13.558,	13.5478,	13.5377,	13.5275,	13.5174,	13.5072,	13.4971,	13.487,	13.4769,	13.4668,	13.4567,	13.4466,	13.4365,	13.4264,	13.4163,	13.4062,	13.3961,	13.3861,	13.376,	13.3659,	13.3559,	13.3459,	13.3358,	13.3258,	13.3158,	13.3057,	13.2957,	13.2857,	13.2757,	13.2657,	13.2557,	13.2457,	13.2357,	13.2258,	13.2158,	13.2058,	13.1959,	13.1859,	13.1759,	13.166,	13.1561,	13.1461,	13.1362,	13.1263,	13.1164,	13.1065,	13.0965,	13.0866,	13.0768,	13.0669,	13.057,	13.0471,	13.0372,	13.0274,	13.0175,	13.0077,	12.9978,	12.988,	12.9781,	12.9683,	12.9585,	12.9486,	12.9388,	12.929,	12.9192,	12.9094,	12.8996,	12.8898,	12.88,	12.8703,	12.8605,	12.8507,	12.841,	12.8312,	12.8215,	12.8117,	12.802,	12.7922,	12.7825,	12.7728,	12.7631,	12.7534,	12.7437,	12.734,	12.7243,	12.7146,	12.7049,	12.6952,	12.6855,	12.6759,	12.6662,	12.6565,	12.6469,	12.6372,	12.6276,	12.618,	12.6083,	12.5987,	12.5891,	12.5795,	12.5699,	12.5603,	12.5507,	12.5411,	12.5315,	12.5219,	12.5123,	12.5028,	12.4932,	12.4837,	12.4741,	12.4646,	12.455,	12.4455,	12.4359,	12.4264,	12.4169,	12.4074,	12.3979,	12.3884,	12.3789,	12.3694,	12.3599,	12.3504,	12.3409,	12.3315,	12.322,	12.3125,	12.3031,	12.2936,	12.2842,	12.2747,	12.2653,	12.2559,	12.2464,	12.237,	12.2276,	12.2182,	12.2088,	12.1994,	12.19,	12.1806,	12.1713,	12.1619,	12.1525,	12.1431,	12.1338,	12.1244,	12.1151,	12.1057,	12.0964,	12.0871,	12.0778,	12.0684,	12.0591,	12.0498,	12.0405,	12.0312,	12.0219,	12.0126,	12.0033,	11.9941,	11.9848,	11.9755,	11.9662,	11.957,	11.9477,	11.9385,	11.9293,	11.92,	11.9108,	11.9016,	11.8923,	11.8831,	11.8739,	11.8647,	11.8555,	11.8463,	11.8371,	11.828,	11.8188,	11.8096,	11.8004,	11.7913,	11.7821,	11.773,	11.7638,	11.7547,	11.7455,	11.7364,	11.7273,	11.7182,	11.7091,	11.7,	11.6908,	11.6817,	11.6727,	11.6636,	11.6545,	11.6454,	11.6363,	11.6273,	11.6182,	11.6092,	11.6001,	11.5911,	11.582,	11.573,	11.564,	11.5549,	11.5459,	11.5369,	11.5279,	11.5189,	11.5099,	11.5009,	11.4919,	11.4829,	11.4739,	11.465,	11.456,	11.447,	11.4381,	11.4291,	11.4202,	11.4113,	11.4023,	11.3934,	11.3845,	11.3755,	11.3666,	11.3577,	11.3488,	11.3399,	11.331,	11.3221,	11.3132,	11.3044,	11.2955,	11.2866,	11.2778,	11.2689,	11.2601,	11.2512,	11.2424,	11.2335,	11.2247,	11.2159,	11.2071,	11.1982,	11.1894,	11.1806,	11.1718,	11.163,	11.1542,	11.1455,	11.1367,	11.1279,	11.1191,	11.1104,	11.1016,	11.0928,	11.0841,	11.0754,	11.0666,	11.0579,	11.0492,	11.0404,	11.0317,	11.023,	11.0143,	11.0056,	10.9969,	10.9882,	10.9795,	10.9708,	10.9622,	10.9535,	10.9448,	10.9362,	10.9275,	10.9188,	10.9102,	10.9016,	10.8929,	10.8843,	10.8757,	10.867,	10.8584,	10.8498,	10.8412,	10.8326,	10.824,	10.8154,	10.8068,	10.7983,	10.7897,	10.7811,	10.7726,	10.764,	10.7554,	10.7469,	10.7383,	10.7298,	10.7213,	10.7127,	10.7042,	10.6957,	10.6872,	10.6787,	10.6702,	10.6617,	10.6532,	10.6447,	10.6362,	10.6277,	10.6193,	10.6108,	10.6023,	10.5939,	10.5854,	10.577,	10.5685,	10.5601,	10.5516,	10.5432,	10.5348,	10.5264,	10.518,	10.5096,	10.5012,	10.4928,	10.4844,	10.476,	10.4676,	10.4592,	10.4508,	10.4425,	10.4341,	10.4257,	10.4174,	10.409,	10.4007,	10.3924,	10.384,	10.3757,	10.3674,	10.3591,	10.3507,	10.3424,	10.3341,	10.3258,	10.3175,	10.3093,	10.301,	10.2927,	10.2844,	10.2762,	10.2679,	10.2596,	10.2514,	10.2431,	10.2349,	10.2266,	10.2184,	10.2102,	10.202,	10.1937,	10.1855,	10.1773,	10.1691,	10.1609,	10.1527,	10.1445,	10.1364,	10.1282,	10.12,	10.1118,	10.1037,	10.0955,	10.0874,	10.0792,	10.0711,	10.0629,	10.0548,	10.0467,	10.0385,	10.0304,	10.0223,	10.0142,	10.0061,	9.99798,	9.98988,	9.98179,	9.9737,	9.96562,	9.95755,	9.94948,	9.94141,	9.93335,	9.92529,	9.91724,	9.90919,	9.90115,	9.89311,	9.88508,	9.87706,	9.86903,	9.86102,	9.853,	9.845,	9.83699,	9.829,	9.821,	9.81302,	9.80503,	9.79705,	9.78908,	9.78111,	9.77315,	9.76519,	9.75723,	9.74929,	9.74134,	9.7334,	9.72547,	9.71754,	9.70961,	9.70169,	9.69378,	9.68587,	9.67796,	9.67006,	9.66216,	9.65427,	9.64639,	9.6385,	9.63063,	9.62276,	9.61489,	9.60703,	9.59917,	9.59132,	9.58347,	9.57563,	9.56779,	9.55995,	9.55213,	9.5443,	9.53648,	9.52867,	9.52086,	9.51306,	9.50526,	9.49746,	9.48967,	9.48189,	9.4741,	9.46633,	9.45856,	9.45079,	9.44303,	9.43527,	9.42752,	9.41977,	9.41203,	9.40429,	9.39656,	9.38883,	9.38111,	9.37339,	9.36568,	9.35797,	9.35027,	9.34257,	9.33487,	9.32718,	9.3195,	9.31182,	9.30414,	9.29647,	9.2888,	9.28114,	9.27348,	9.26583,	9.25819,	9.25054,	9.2429,	9.23527,	9.22764,	9.22002,	9.2124,	9.20479,	9.19718,	9.18957,	9.18197,	9.17438,	9.16679,	9.1592,	9.15162,	9.14404,	9.13647,	9.1289,	9.12134,	9.11378,	9.10623,	9.09868,	9.09114,	9.0836,	9.07607,	9.06854,	9.06101,	9.05349,	9.04598,	9.03847,	9.03096,	9.02346,	9.01596,	9.00847,	9.00098,	8.9935,	8.98602,	8.97855,	8.97108,	8.96362,	8.95616,	8.9487,	8.94125,	8.93381,	8.92637,	8.91893,	8.9115,	8.90407,	8.89665,	8.88923,	8.88182,	8.87441,	8.86701,	8.85961,	8.85222,	8.84483,	8.83744,	8.83006,	8.82269,	8.81531,	8.80795,	8.80059,	8.79323,	8.78588,	8.77853,	8.77119,	8.76385,	8.75651,	8.74918,	8.74186,	8.73454,	8.72722,	8.71991,	8.71261,	8.7053,	8.69801,	8.69071,	8.68343,	8.67614,	8.66886,	8.66159,	8.65432,	8.64705,	8.63979,	8.63254,	8.62529,	8.61804,	8.6108,	8.60356,	8.59633,	8.5891,	8.58188,	8.57466,	8.56744,	8.56023,	8.55303,	8.54583,	8.53863,	8.53144,	8.52425,	8.51707,	8.50989,	8.50272,	8.49555,	8.48838,	8.48122,	8.47407,	8.46692,	8.45977,	8.45263,	8.44549,	8.43836,	8.43123,	8.42411,	8.41699,	8.40987,	8.40276,	8.39566,	8.38856,	8.38146,	8.37437,	8.36728,	8.3602,	8.35312,	8.34604,	8.33898,	8.33191,	8.32485,	8.31779,	8.31074,	8.3037,	8.29665,	8.28962,	8.28258,	8.27555,	8.26853,	8.26151,	8.25449,	8.24748,	8.24048,	8.23348,	8.22648,	8.21948,	8.2125,	8.20551,	8.19853,	8.19156,	8.18459,	8.17762,	8.17066,	8.1637,	8.15675,	8.1498,	8.14286,	8.13592,	8.12898,	8.12205,	8.11513,	8.10821,	8.10129,	8.09438,	8.08747,	8.08056,	8.07367,	8.06677,	8.05988,	8.05299,	8.04611,	8.03924,	8.03236,	8.0255,	8.01863,	8.01177,	8.00492,	7.99807,	7.99122,	7.98438,	7.97754,	7.97071,	7.96388,	7.95706,	7.95024,	7.94342,	7.93661,	7.92981,	7.923,	7.91621,	7.90941,	7.90263,	7.89584,	7.88906,	7.88229,	7.87552,	7.86875,	7.86199,	7.85523,	7.84847,	7.84173,	7.83498,	7.82824,	7.8215,	7.81477,	7.80805,	7.80132,	7.7946,	7.78789,	7.78118,	7.77448,	7.76777,	7.76108,	7.75439,	7.7477,	7.74101,	7.73434,	7.72766,	7.72099,	7.71432,	7.70766,	7.70101,	7.69435,	7.6877,	7.68106,	7.67442,	7.66778,	7.66115,	7.65453,	7.6479,	7.64128,	7.63467,	7.62806,	7.62146,	7.61485,	7.60826,	7.60167,	7.59508,	7.58849,	7.58191,	7.57534,	7.56877,	7.5622,	7.55564,	7.54908,	7.54253,	7.53598,	7.52943,	7.52289,	7.51636,	7.50983,	7.5033,	7.49677,	7.49026,	7.48374,	7.47723,	7.47072,	7.46422,	7.45772,	7.45123,	7.44474,	7.43826,	7.43178,	7.4253,	7.41883,	7.41236,	7.4059,	7.39944,	7.39298,	7.38653,	7.38009,	7.37364,	7.36721,	7.36077,	7.35434,	7.34792,	7.3415,	7.33508,	7.32867,	7.32226,	7.31586,	7.30946,	7.30306,	7.29667,	7.29028,	7.2839,	7.27752,	7.27115,	7.26478,	7.25841,	7.25205,	7.24569,	7.23934,	7.23299,	7.22665,	7.22031,	7.21397,	7.20764,	7.20131,	7.19499,	7.18867,	7.18235,	7.17604,	7.16974,	7.16343,	7.15714,	7.15084,	7.14455,	7.13827,	7.13198,	7.12571,	7.11943,	7.11317,	7.1069,	7.10064,	7.09438,	7.08813,	7.08188,	7.07564,	7.0694,	7.06317,	7.05693,	7.05071,	7.04449,	7.03827,	7.03205,	7.02584,	7.01964,	7.01343,	7.00724,	7.00104,	6.99485,	6.98867,	6.98249,	6.97631,	6.97014,	6.96397,	6.9578,	6.95164,	6.94549,	6.93933,	6.93319,	6.92704,	6.9209,	6.91477,	6.90864,	6.90251,	6.89639,	6.89027,	6.88415,	6.87804,	6.87193,	6.86583,	6.85973,	6.85364,	6.84755,	6.84146,	6.83538,	6.8293,	6.82323,	6.81716,	6.81109,	6.80503,	6.79898,	6.79292,	6.78687,	6.78083,	6.77479,	6.76875,	6.76272,	6.75669,	6.75067,	6.74464,	6.73863,	6.73262,	6.72661,	6.7206,	6.7146,	6.70861,	6.70262,	6.69663,	6.69065,	6.68467,	6.67869,	6.67272,	6.66675,	6.66079,	6.65483,	6.64887,	6.64292,	6.63698,	6.63103,	6.62509,	6.61916,	6.61323,	6.6073,	6.60138,	6.59546,	6.58955,	6.58363,	6.57773,	6.57183,	6.56593,	6.56003,	6.55414,	6.54826,	6.54237,	6.5365,	6.53062,	6.52475,	6.51888,	6.51302,	6.50716,	6.50131,	6.49546,	6.48961,	6.48377,	6.47793,	6.4721,	6.46627,	6.46044,	6.45462,	6.4488,	6.44299,	6.43718,	6.43137,	6.42557,	6.41977,	6.41398,	6.40819,	6.4024,	6.39662,	6.39084,	6.38507,	6.3793,	6.37353,	6.36777,	6.36201,	6.35626,	6.35051,	6.34476,	6.33902,	6.33328,	6.32755,	6.32182,	6.31609,	6.31037,	6.30465,	6.29894,	6.29323,	6.28752,	6.28182,	6.27612,	6.27042,	6.26473,	6.25905,	6.25336,	6.24769,	6.24201,	6.23634,	6.23067,	6.22501,	6.21935,	6.2137,	6.20804,	6.2024,	6.19675,	6.19111,	6.18548,	6.17985,	6.17422,	6.1686,	6.16298,	6.15736,	6.15175,	6.14614,	6.14054,	6.13494,	6.12934,	6.12375,	6.11816,	6.11257,	6.10699,	6.10142,	6.09584,	6.09027,	6.08471,	6.07915,	6.07359,	6.06804,	6.06249,	6.05694,	6.0514,	6.04586,	6.04033,	6.0348,	6.02927,	6.02375,	6.01823,	6.01272,	6.00721,	6.0017,	5.9962,	5.9907,	5.9852,	5.97971,	5.97422,	5.96874,	5.96326,	5.95779,	5.95231,	5.94685,	5.94138,	5.93592,	5.93046,	5.92501,	5.91956,	5.91412,	5.90868,	5.90324,	5.89781,	5.89238,	5.88695,	5.88153,	5.87611,	5.8707,	5.86529,	5.85988,	5.85448,	5.84908,	5.84368,	5.83829,	5.8329,	5.82752,	5.82214,	5.81676,	5.81139,	5.80602,	5.80066,	5.7953,	5.78994,	5.78459,	5.77924,	5.77389,	5.76855,	5.76321,	5.75788,	5.75255,	5.74722,	5.7419,	5.73658,	5.73127,	5.72596,	5.72065,	5.71534,	5.71004,	5.70475,	5.69946,	5.69417,	5.68888,	5.6836,	5.67832,	5.67305,	5.66778,	5.66252,	5.65725,	5.652,	5.64674,	5.64149,	5.63624,	5.631,	5.62576,	5.62052,	5.61529,	5.61006,	5.60484,	5.59962,	5.5944,	5.58919,	5.58398,	5.57877,	5.57357,	5.56837,	5.56318,	5.55799,	5.5528,	5.54762,	5.54244,	5.53726,	5.53209,	5.52692,	5.52176,	5.51659,	5.51144,	5.50628,	5.50113,	5.49599,	5.49085,	5.48571,	5.48057,	5.47544,	5.47031,	5.46519,	5.46007,	5.45495,	5.44984,	5.44473,	5.43963,	5.43452,	5.42943,	5.42433,	5.41924,	5.41416,	5.40907,	5.40399,	5.39892,	5.39385,	5.38878,	5.38371,	5.37865,	5.37359,	5.36854,	5.36349,	5.35844,	5.3534,	5.34836,	5.34333,	5.3383,	5.33327,	5.32824,	5.32322,	5.31821,	5.31319,	5.30818,	5.30318,	5.29818,	5.29318,	5.28818,	5.28319,	5.2782,	5.27322,	5.26824,	5.26326,	5.25829,	5.25332,	5.24835,	5.24339,	5.23843,	5.23348,	5.22853,	5.22358,	5.21864,	5.21369,	5.20876,	5.20383,	5.1989,	5.19397,	5.18905,	5.18413,	5.17921,	5.1743,	5.1694,	5.16449,	5.15959,	5.15469,	5.1498,	5.14491,	5.14002,	5.13514,	5.13026,	5.12539,	5.12052,	5.11565,	5.11078,	5.10592,	5.10107,	5.09621,	5.09136,	5.08652,	5.08167,	5.07683,	5.072,	5.06717,	5.06234,	5.05751,	5.05269,	5.04787,	5.04306,	5.03825,	5.03344,	5.02864,	5.02384,	5.01904,	5.01425,	5.00946,	5.00467,	4.99989,	4.99511,	4.99034,	4.98556,	4.9808,	4.97603,	4.97127,	4.96651,	4.96176,	4.95701,	4.95226,	4.94752,	4.94278,	4.93804,	4.93331,	4.92858,	4.92386,	4.91914,	4.91442,	4.9097,	4.90499,	4.90028,	4.89558,	4.89088,	4.88618,	4.88149,	4.8768,	4.87211,	4.86743,	4.86275,	4.85807,	4.8534,	4.84873,	4.84406,	4.8394,	4.83474,	4.83009,	4.82544,	4.82079,	4.81614,	4.8115,	4.80687,	4.80223,	4.7976,	4.79297,	4.78835,	4.78373,	4.77911,	4.7745,	4.76989,	4.76528,	4.76068,	4.75608,	4.75149,	4.74689,	4.74231,	4.73772,	4.73314,	4.72856,	4.72399,	4.71941,	4.71485,	4.71028,	4.70572,	4.70116,	4.69661,	4.69206,	4.68751,	4.68297,	4.67843,	4.67389,	4.66936,	4.66483,	4.6603,	4.65578,	4.65126,	4.64674,	4.64223,	4.63772,	4.63321,	4.62871,	4.62421,	4.61971,	4.61522,	4.61073,	4.60625,	4.60177,	4.59729,	4.59281,	4.58834,	4.58387,	4.57941,	4.57495,	4.57049,	4.56603,	4.56158,	4.55714,	4.55269,	4.54825,	4.54381,	4.53938,	4.53495,	4.53052,	4.5261,	4.52168,	4.51726,	4.51284,	4.50843,	4.50403,	4.49962,	4.49522,	4.49083,	4.48643,	4.48204,	4.47766,	4.47327,	4.46889,	4.46452,	4.46014,	4.45577,	4.45141,	4.44704,	4.44268,	4.43833,	4.43398,	4.42963,	4.42528,	4.42094,	4.4166,	4.41226,	4.40793,	4.4036,	4.39927,	4.39495,	4.39063,	4.38631,	4.382,	4.37769,	4.37339,	4.36908,	4.36479,	4.36049,	4.3562,	4.35191,	4.34762,	4.34334,	4.33906,	4.33478,	4.33051,	4.32624,	4.32198,	4.31771,	4.31345,	4.3092,	4.30494,	4.3007,	4.29645,	4.29221,	4.28797,	4.28373,	4.2795,	4.27527,	4.27104,	4.26682,	4.2626,	4.25838,	4.25417,	4.24996,	4.24576,	4.24155,	4.23735,	4.23316,	4.22896,	4.22477,	4.22059,	4.2164,	4.21222,	4.20805,	4.20387,	4.1997,	4.19554,	4.19137,	4.18721,	4.18305,	4.1789,	4.17475,	4.1706,	4.16646,	4.16232,	4.15818,	4.15405,	4.14992,	4.14579,	4.14166,	4.13754,	4.13342,	4.12931,	4.1252,	4.12109,	4.11699,	4.11288,	4.10879,	4.10469,	4.1006,	4.09651,	4.09242,	4.08834,	4.08426,	4.08019,	4.07611,	4.07205,	4.06798,	4.06392,	4.05986,	4.0558,	4.05175,	4.0477,	4.04365,	4.03961,	4.03557,	4.03153,	4.0275,	4.02347,	4.01944,	4.01542,	4.01139,	4.00738,	4.00336,	3.99935,	3.99534,	3.99134,	3.98734,	3.98334,	3.97934,	3.97535,	3.97136,	3.96738,	3.96339,	3.95941,	3.95544,	3.95147,	3.9475,	3.94353,	3.93957,	3.93561,	3.93165,	3.92769,	3.92374,	3.9198,	3.91585,	3.91191,	3.90797,	3.90404,	3.90011,	3.89618,	3.89225,	3.88833,	3.88441,	3.8805,	3.87658,	3.87267,	3.86877,	3.86487,	3.86097,	3.85707,	3.85317,	3.84928,	3.8454,	3.84151,	3.83763,	3.83375,	3.82988,	3.82601,	3.82214,	3.81827,	3.81441,	3.81055,	3.8067,	3.80284,	3.79899,	3.79515,	3.7913,	3.78746,	3.78363,	3.77979,	3.77596,	3.77213,	3.76831,	3.76449,	3.76067,	3.75685,	3.75304,	3.74923,	3.74543,	3.74162,	3.73782,	3.73403,	3.73023,	3.72644,	3.72265,	3.71887,	3.71509,	3.71131,	3.70754,	3.70376,	3.7,	3.69623,	3.69247,	3.68871,	3.68495,	3.6812,	3.67745,	3.6737,	3.66996,	3.66621,	3.66248,	3.65874,	3.65501,	3.65128,	3.64756,	3.64383,	3.64011,	3.6364,	3.63268,	3.62897,	3.62527,	3.62156,	3.61786,	3.61416,	3.61047,	3.60677,	3.60309,	3.5994,	3.59572,	3.59204,	3.58836,	3.58469,	3.58102,	3.57735,	3.57368,	3.57002,	3.56636,	3.56271,	3.55906,	3.55541,	3.55176,	3.54812,	3.54448,	3.54084,	3.5372,	3.53357,	3.52994,	3.52632,	3.5227,	3.51908,	3.51546,	3.51185,	3.50824,	3.50463,	3.50103,	3.49743,	3.49383,	3.49023,	3.48664,	3.48305,	3.47947,	3.47588,	3.4723,	3.46873,	3.46515,	3.46158,	3.45801,	3.45445,	3.45089,	3.44733,	3.44377,	3.44022,	3.43667,	3.43312,	3.42958,	3.42603,	3.4225,	3.41896,	3.41543,	3.4119,	3.40837,	3.40485,	3.40133,	3.39781,	3.3943,	3.39079,	3.38728,	3.38377,	3.38027,	3.37677,	3.37327,	3.36978,	3.36629,	3.3628,	3.35932,	3.35583,	3.35236,	3.34888,	3.34541,	3.34194,	3.33847,	3.335,	3.33154,	3.32809,	3.32463,	3.32118,	3.31773,	3.31428,	3.31084,	3.3074,	3.30396,	3.30052,	3.29709,	3.29366,	3.29024,	3.28681,	3.28339,	3.27998,	3.27656,	3.27315,	3.26974,	3.26634,	3.26293,	3.25953,	3.25614,	3.25274,	3.24935,	3.24596,	3.24258,	3.2392,	3.23582,	3.23244,	3.22907,	3.2257,	3.22233,	3.21896,	3.2156,	3.21224,	3.20889,	3.20553,	3.20218,	3.19883,	3.19549,	3.19215,	3.18881,	3.18547,	3.18214,	3.17881,	3.17548,	3.17216,	3.16883,	3.16552,	3.1622,	3.15889,	3.15558,	3.15227,	3.14896,	3.14566,	3.14236,	3.13907,	3.13577,	3.13248,	3.1292,	3.12591,	3.12263,	3.11935,	3.11608,	3.1128,	3.10953,	3.10626,	3.103,	3.09974,	3.09648,	3.09322,	3.08997,	3.08672,	3.08347,	3.08023,	3.07699,	3.07375,	3.07051,	3.06728,	3.06405,	3.06082,	3.05759,	3.05437,	3.05115,	3.04794,	3.04472,	3.04151,	3.0383,	3.0351,	3.03189,	3.0287,	3.0255,	3.0223,	3.01911,	3.01592,	3.01274,	3.00956,	3.00638,	3.0032,	3.00003,	2.99685,	2.99368,	2.99052,	2.98736,	2.9842,	2.98104,	2.97788,	2.97473,	2.97158,	2.96843,	2.96529,	2.96215,	2.95901,	2.95588,	2.95274,	2.94961,	2.94649,	2.94336,	2.94024,	2.93712,	2.93401,	2.93089,	2.92778,	2.92468,	2.92157,	2.91847,	2.91537,	2.91227,	2.90918,	2.90609,	2.903,	2.89991,	2.89683,	2.89375,	2.89067,	2.8876,	2.88453,	2.88146,	2.87839,	2.87533,	2.87227,	2.86921,	2.86615,	2.8631,	2.86005,	2.857,	2.85396,	2.85092,	2.84788,	2.84484,	2.84181,	2.83878,	2.83575,	2.83272,	2.8297,	2.82668,	2.82366,	2.82065,	2.81764,	2.81463,	2.81162,	2.80862,	2.80562,	2.80262,	2.79962,	2.79663,	2.79364,	2.79065,	2.78767,	2.78469,	2.78171,	2.77873,	2.77576,	2.77279,	2.76982,	2.76685,	2.76389,	2.76093,	2.75797,	2.75501,	2.75206,	2.74911,	2.74617,	2.74322,	2.74028,	2.73734,	2.7344,	2.73147,	2.72854,	2.72561,	2.72269,	2.71976,	2.71684,	2.71392,	2.71101,	2.7081,	2.70519,	2.70228,	2.69938,	2.69647,	2.69358,	2.69068,	2.68779,	2.68489,	2.68201,	2.67912,	2.67624,	2.67336,	2.67048,	2.6676,	2.66473,	2.66186,	2.65899,	2.65613,	2.65327,	2.65041,	2.64755,	2.6447,	2.64185,	2.639,	2.63615,	2.63331,	2.63047,	2.62763,	2.62479,	2.62196,	2.61913,	2.6163,	2.61347,	2.61065,	2.60783,	2.60501,	2.6022,	2.59939,	2.59658,	2.59377,	2.59097,	2.58817,	2.58537,	2.58257,	2.57978,	2.57698,	2.5742,	2.57141,	2.56863,	2.56584,	2.56307,	2.56029,	2.55752,	2.55475,	2.55198,	2.54921,	2.54645,	2.54369,	2.54093,	2.53818,	2.53543,	2.53268,	2.52993,	2.52718,	2.52444,	2.5217,	2.51896,	2.51623,	2.5135,	2.51077,	2.50804,	2.50532,	2.5026,	2.49988,	2.49716,	2.49445,	2.49173,	2.48903,	2.48632,	2.48362,	2.48091,	2.47822,	2.47552,	2.47283,	2.47013,	2.46745,	2.46476,	2.46208,	2.4594,	2.45672,	2.45404,	2.45137,	2.4487,	2.44603,	2.44336,	2.4407,	2.43804,	2.43538,	2.43273,	2.43007,	2.42742,	2.42478,	2.42213,	2.41949,	2.41685,	2.41421,	2.41157,	2.40894,	2.40631,	2.40368,	2.40106,	2.39843,	2.39581,	2.3932,	2.39058,	2.38797,	2.38536,	2.38275,	2.38015,	2.37754,	2.37494,	2.37234,	2.36975,	2.36716,	2.36457,	2.36198,	2.35939,	2.35681,	2.35423,	2.35165,	2.34908,	2.3465,	2.34393,	2.34137,	2.3388,	2.33624,	2.33368,	2.33112,	2.32856,	2.32601,	2.32346,	2.32091,	2.31837,	2.31582,	2.31328,	2.31074,	2.30821,	2.30567,	2.30314,	2.30061,	2.29809,	2.29557,	2.29304,	2.29053,	2.28801,	2.2855,	2.28298,	2.28048,	2.27797,	2.27547,	2.27296,	2.27046,	2.26797,	2.26547,	2.26298,	2.26049,	2.25801,	2.25552,	2.25304,	2.25056,	2.24808,	2.24561,	2.24314,	2.24067,	2.2382,	2.23573,	2.23327,	2.23081,	2.22835,	2.2259,	2.22345,	2.22099,	2.21855,	2.2161,	2.21366,	2.21122,	2.20878,	2.20634,	2.20391,	2.20148,	2.19905,	2.19662,	2.1942,	2.19178,	2.18936,	2.18694,	2.18453,	2.18211,	2.1797,	2.1773,	2.17489,	2.17249,	2.17009,	2.16769,	2.1653,	2.1629,	2.16051,	2.15813,	2.15574,	2.15336,	2.15098,	2.1486,	2.14622,	2.14385,	2.14148,	2.13911,	2.13674,	2.13438,	2.13201,	2.12965,	2.1273,	2.12494,	2.12259,	2.12024,	2.11789,	2.11555,	2.1132,	2.11086,	2.10852,	2.10619,	2.10385,	2.10152,	2.09919,	2.09687,	2.09454,	2.09222,	2.0899,	2.08758,	2.08527,	2.08295,	2.08064,	2.07834,	2.07603,	2.07373,	2.07143,	2.06913,	2.06683,	2.06454,	2.06225,	2.05996,	2.05767,	2.05539,	2.0531,	2.05082,	2.04855,	2.04627,	2.044,	2.04173,	2.03946,	2.03719,	2.03493,	2.03267,	2.03041,	2.02815,	2.0259,	2.02364,	2.02139,	2.01915,	2.0169,	2.01466,	2.01242,	2.01018,	2.00794,	2.00571,	2.00348,	2.00125,	1.99902,	1.99679,	1.99457,	1.99235,	1.99013,	1.98792,	1.98571,	1.98349,	1.98129,	1.97908,	1.97688,	1.97467,	1.97247,	1.97028,	1.96808,	1.96589,	1.9637,	1.96151,	1.95932,	1.95714,	1.95496,	1.95278,	1.9506,	1.94843,	1.94625,	1.94408,	1.94192,	1.93975,	1.93759,	1.93543,	1.93327,	1.93111,	1.92896,	1.9268,	1.92465,	1.92251,	1.92036,	1.91822,	1.91608,	1.91394,	1.9118,	1.90967,	1.90754,	1.90541,	1.90328,	1.90115,	1.89903,	1.89691,	1.89479,	1.89267,	1.89056,	1.88845,	1.88634,	1.88423,	1.88213,	1.88002,	1.87792,	1.87582,	1.87373,	1.87163,	1.86954,	1.86745,	1.86536,	1.86328,	1.8612,	1.85911,	1.85704,	1.85496,	1.85289,	1.85081,	1.84874,	1.84668,	1.84461,	1.84255,	1.84049,	1.83843,	1.83637,	1.83432,	1.83226,	1.83021,	1.82817,	1.82612,	1.82408,	1.82203,	1.82,	1.81796,	1.81592,	1.81389,	1.81186,	1.80983,	1.80781,	1.80578,	1.80376,	1.80174,	1.79972,	1.79771,	1.79569,	1.79368,	1.79167,	1.78967,	1.78766,	1.78566,	1.78366,	1.78166,	1.77967,	1.77767,	1.77568,	1.77369,	1.77171,	1.76972,	1.76774,	1.76576,	1.76378,	1.7618,	1.75983,	1.75786,	1.75589,	1.75392,	1.75195,	1.74999,	1.74803,	1.74607,	1.74411,	1.74216,	1.7402,	1.73825,	1.7363,	1.73436,	1.73241,	1.73047,	1.72853,	1.72659,	1.72466,	1.72272,	1.72079,	1.71886,	1.71693,	1.71501,	1.71308,	1.71116,	1.70924,	1.70733,	1.70541,	1.7035,	1.70159,	1.69968,	1.69777,	1.69587,	1.69397,	1.69207,	1.69017,	1.68827,	1.68638,	1.68449,	1.6826,	1.68071,	1.67883,	1.67694,	1.67506,	1.67318,	1.67131,	1.66943,	1.66756,	1.66569,	1.66382,	1.66195,	1.66009,	1.65822,	1.65636,	1.65451,	1.65265,	1.6508,	1.64894,	1.64709,	1.64525,	1.6434,	1.64156,	1.63971,	1.63787,	1.63604,	1.6342,	1.63237,	1.63054,	1.62871,	1.62688,	1.62505,	1.62323,	1.62141,	1.61959,	1.61777,	1.61596,	1.61415,	1.61233,	1.61053,	1.60872,	1.60691,	1.60511,	1.60331,	1.60151,	1.59972,	1.59792,	1.59613,	1.59434,	1.59255,	1.59076,	1.58898,	1.5872,	1.58542,	1.58364,	1.58186,	1.58009,	1.57831,	1.57654,	1.57478,	1.57301,	1.57125,	1.56948,	1.56772,	1.56597,	1.56421,	1.56246,	1.5607,	1.55895,	1.55721,	1.55546,	1.55372,	1.55197,	1.55023,	1.5485,	1.54676,	1.54502,	1.54329,	1.54156,	1.53983,	1.53811,	1.53638,	1.53466,	1.53294,	1.53122,	1.52951,	1.52779,	1.52608,	1.52437,	1.52266,	1.52096,	1.51925,	1.51755,	1.51585,	1.51415,	1.51246,	1.51076,	1.50907,	1.50738,	1.50569,	1.50401,	1.50232,	1.50064,	1.49896,	1.49728,	1.4956,	1.49393,	1.49226,	1.49058,	1.48892,	1.48725,	1.48558,	1.48392,	1.48226,	1.4806,	1.47895,	1.47729,	1.47564,	1.47399,	1.47234,	1.47069,	1.46904,	1.4674,	1.46576,	1.46412,	1.46248,	1.46085,	1.45921,	1.45758,	1.45595,	1.45432,	1.4527,	1.45107,	1.44945,	1.44783,	1.44621,	1.4446,	1.44298,	1.44137,	1.43976,	1.43815,	1.43655,	1.43494,	1.43334,	1.43174,	1.43014,	1.42854,	1.42695,	1.42535,	1.42376,	1.42217,	1.42058,	1.419,	1.41742,	1.41583,	1.41425,	1.41268,	1.4111,	1.40953,	1.40795,	1.40638,	1.40481,	1.40325,	1.40168,	1.40012,	1.39856,	1.397,	1.39544,	1.39389,	1.39234,	1.39078,	1.38923,	1.38769,	1.38614,	1.3846,	1.38305,	1.38151,	1.37998,	1.37844,	1.37691,	1.37537,	1.37384,	1.37231,	1.37079,	1.36926,	1.36774,	1.36622,	1.3647,	1.36318,	1.36166,	1.36015,	1.35864,	1.35713,	1.35562,	1.35411,	1.35261,	1.3511,	1.3496,	1.3481,	1.34661,	1.34511,	1.34362,	1.34213,	1.34064,	1.33915,	1.33766,	1.33618,	1.3347,	1.33322,	1.33174,	1.33026,	1.32878,	1.32731,	1.32584,	1.32437,	1.3229,	1.32144,	1.31997,	1.31851,	1.31705,	1.31559,	1.31413,	1.31268,	1.31123,	1.30978,	1.30833,	1.30688,	1.30543,	1.30399,	1.30255,	1.30111,	1.29967,	1.29823,	1.2968,	1.29536,	1.29393,	1.2925,	1.29107,	1.28965,	1.28822,	1.2868,	1.28538,	1.28396,	1.28255,	1.28113,	1.27972,	1.27831,	1.2769,	1.27549,	1.27408,	1.27268,	1.27127,	1.26987,	1.26847,	1.26708,	1.26568,	1.26429,	1.2629,	1.26151,	1.26012,	1.25873,	1.25735,	1.25596,	1.25458,	1.2532,	1.25183,	1.25045,	1.24908,	1.2477,	1.24633,	1.24497,	1.2436,	1.24223,	1.24087,	1.23951,	1.23815,	1.23679,	1.23543,	1.23408,	1.23273,	1.23137,	1.23003,	1.22868,	1.22733,	1.22599,	1.22465,	1.2233,	1.22197,	1.22063,	1.21929,	1.21796,	1.21663,	1.2153,	1.21397,	1.21264,	1.21132,	1.20999,	1.20867,	1.20735,	1.20604,	1.20472,	1.20341,	1.20209,	1.20078,	1.19947,	1.19816,	1.19686,	1.19555,	1.19425,	1.19295,	1.19165,	1.19036,	1.18906,	1.18777,	1.18647,	1.18518,	1.1839,	1.18261,	1.18132,	1.18004,	1.17876,	1.17748,	1.1762,	1.17492,	1.17365,	1.17237,	1.1711,	1.16983,	1.16857,	1.1673,	1.16603,	1.16477,	1.16351,	1.16225,	1.16099,	1.15974,	1.15848,	1.15723,	1.15598,	1.15473,	1.15348,	1.15223,	1.15099,	1.14975,	1.14851,	1.14727,	1.14603,	1.14479,	1.14356,	1.14233,	1.14109,	1.13987,	1.13864,	1.13741,	1.13619,	1.13496,	1.13374,	1.13252,	1.13131,	1.13009,	1.12888,	1.12766,	1.12645,	1.12524,	1.12404,	1.12283,	1.12163,	1.12042,	1.11922,	1.11802,	1.11683,	1.11563,	1.11444,	1.11324,	1.11205,	1.11086,	1.10967,	1.10849,	1.1073,	1.10612,	1.10494,	1.10376,	1.10258,	1.10141,	1.10023,	1.09906,	1.09789,	1.09672,	1.09555,	1.09438,	1.09322,	1.09205,	1.09089,	1.08973,	1.08857,	1.08742,	1.08626,	1.08511,	1.08396,	1.08281,	1.08166,	1.08051,	1.07937,	1.07822,	1.07708,	1.07594,	1.0748,	1.07366,	1.07253,	1.07139,	1.07026,	1.06913,	1.068,	1.06687,	1.06575,	1.06462,	1.0635,	1.06238,	1.06126,	1.06014,	1.05903,	1.05791,	1.0568,	1.05569,	1.05458,	1.05347,	1.05236,	1.05126,	1.05015,	1.04905,	1.04795,	1.04685,	1.04575,	1.04466,	1.04356,	1.04247,	1.04138,	1.04029,	1.0392,	1.03812,	1.03703,	1.03595,	1.03487,	1.03379,	1.03271,	1.03163,	1.03056,	1.02948,	1.02841,	1.02734,	1.02627,	1.02521,	1.02414,	1.02308,	1.02201,	1.02095,	1.01989,	1.01883,	1.01778,	1.01672,	1.01567,	1.01462,	1.01357,	1.01252,	1.01147,	1.01043,	1.00938,	1.00834,	1.0073,	1.00626,	1.00522,	1.00418,	1.00315,	1.00212,	1.00108,	1.00005,	0.999025,	0.997998,	0.996973,	0.995948,	0.994926,	0.993905,	0.992885,	0.991868,	0.990851,	0.989836,	0.988823,	0.987811,	0.986801,	0.985792,	0.984785,	0.983779,	0.982775,	0.981772,	0.980771,	0.979771,	0.978773,	0.977776,	0.976781,	0.975788,	0.974796,	0.973805,	0.972816,	0.971828,	0.970842,	0.969858,	0.968874,	0.967893,	0.966913,	0.965934,	0.964957,	0.963982,	0.963008,	0.962035,	0.961064,	0.960094,	0.959126,	0.95816,	0.957194,	0.956231,	0.955269,	0.954308,	0.953349,	0.952391,	0.951435,	0.95048,	0.949527,	0.948575,	0.947625,	0.946676,	0.945729,	0.944783,	0.943839,	0.942896,	0.941954,	0.941015,	0.940076,	0.939139,	0.938204,	0.937269,	0.936337,	0.935406,	0.934476,	0.933548,	0.932621,	0.931696,	0.930772,	0.92985,	0.928929,	0.928009,	0.927091,	0.926175,	0.92526,	0.924346,	0.923434,	0.922523,	0.921614,	0.920706,	0.9198,	0.918895,	0.917991,	0.917089,	0.916189,	0.91529,	0.914392,	0.913496,	0.912601,	0.911707,	0.910815,	0.909925,	0.909036,	0.908148,	0.907262,	0.906377,	0.905494,	0.904612,	0.903731,	0.902852,	0.901975,	0.901099,	0.900224,	0.89935,	0.898478,	0.897608,	0.896739,	0.895871,	0.895005,	0.89414,	0.893276,	0.892414,	0.891554,	0.890695,	0.889837,	0.888981,	0.888126,	0.887272,	0.88642,	0.885569,	0.88472,	0.883872,	0.883025,	0.88218,	0.881336,	0.880494,	0.879653,	0.878814,	0.877975,	0.877139,	0.876303,	0.875469,	0.874637,	0.873806,	0.872976,	0.872148,	0.871321,	0.870495,	0.869671,	0.868848,	0.868026,	0.867206,	0.866388,	0.86557,	0.864754,	0.86394,	0.863127,	0.862315,	0.861504,	0.860695,	0.859888,	0.859081,	0.858277,	0.857473,	0.856671,	0.85587,	0.855071,	0.854272,	0.853476,	0.85268,	0.851886,	0.851094,	0.850302,	0.849513,	0.848724,	0.847937,	0.847151,	0.846366,	0.845583,	0.844802,	0.844021,	0.843242,	0.842464,	0.841688,	0.840913,	0.840139,	0.839367,	0.838596,	0.837826,	0.837058,	0.836291,	0.835526,	0.834761,	0.833998,	0.833237,	0.832477,	0.831718,	0.83096,	0.830204,	0.829449,	0.828695,	0.827943,	0.827192,	0.826443,	0.825694,	0.824947,	0.824202,	0.823457,	0.822714,	0.821973,	0.821233,	0.820494,	0.819756,	0.81902,	0.818284,	0.817551,	0.816818,	0.816087,	0.815357,	0.814629,	0.813902,	0.813176,	0.812451,	0.811728,	0.811006,	0.810286,	0.809566,	0.808848,	0.808132,	0.807416,	0.806702,	0.805989,	0.805278,	0.804568,	0.803859,	0.803151,	0.802445,	0.80174,	0.801036,	0.800334,	0.799633,	0.798933,	0.798234,	0.797537,	0.796841,	0.796146,	0.795453,	0.794761,	0.79407,	0.79338,	0.792692,	0.792005,	0.791319,	0.790635,	0.789952,	0.78927,	0.788589,	0.78791,	0.787232,	0.786555,	0.785879,	0.785205,	0.784532,	0.78386,	0.78319,	0.782521,	0.781853,	0.781186,	0.780521,	0.779857,	0.779194,	0.778532,	0.777872,	0.777213,	0.776555,	0.775898,	0.775243,	0.774589,	0.773936,	0.773284,	0.772634,	0.771985,	0.771337,	0.770691,	0.770045,	0.769401,	0.768758,	0.768117,	0.767476,	0.766837,	0.766199,	0.765563,	0.764927,	0.764293,	0.76366,	0.763028,	0.762398,	0.761769,	0.761141,	0.760514,	0.759888,	0.759264,	0.758641,	0.758019,	0.757399,	0.756779,	0.756161,	0.755544,	0.754928,	0.754314,	0.753701,	0.753089,	0.752478,	0.751868,	0.75126,	0.750652,	0.750047,	0.749442,	0.748838,	0.748236,	0.747635,	0.747035,	0.746436,	0.745839,	0.745242,	0.744647,	0.744053,	0.743461,	0.742869,	0.742279,	0.74169,	0.741102,	0.740515,	0.73993,	0.739345,	0.738762,	0.73818,	0.7376,	0.73702,	0.736442,	0.735865,	0.735289,	0.734714,	0.734141,	0.733568,	0.732997,	0.732427,	0.731858,	0.731291,	0.730724,	0.730159,	0.729595,	0.729032,	0.72847,	0.727909,	0.72735,	0.726792,	0.726235,	0.725679,	0.725124,	0.724571,	0.724018,	0.723467,	0.722917,	0.722368,	0.721821,	0.721274,	0.720729,	0.720185,	0.719642,	0.7191,	0.718559,	0.718019,	0.717481,	0.716944,	0.716408,	0.715873,	0.715339,	0.714806,	0.714275,	0.713745,	0.713216,	0.712688,	0.712161,	0.711635,	0.71111,	0.710587,	0.710065,	0.709544,	0.709024,	0.708505,	0.707987,	0.707471,	0.706955,	0.706441,	0.705928,	0.705416,	0.704905,	0.704395,	0.703886,	0.703379,	0.702873,	0.702367,	0.701863,	0.70136,	0.700858,	0.700358,	0.699858,	0.69936,	0.698862,	0.698366,	0.697871,	0.697377,	0.696884,	0.696392,	0.695902,	0.695412,	0.694924,	0.694437,	0.693951,	0.693466,	0.692982,	0.692499,	0.692017,	0.691536,	0.691057,	0.690579,	0.690101,	0.689625,	0.68915,	0.688676,	0.688203,	0.687731,	0.687261,	0.686791,	0.686323,	0.685855,	0.685389,	0.684924,	0.68446,	0.683997,	0.683535,	0.683074,	0.682614,	0.682156,	0.681698,	0.681242,	0.680786,	0.680332,	0.679879,	0.679427,	0.678976,	0.678526,	0.678077,	0.677629,	0.677183,	0.676737,	0.676292,	0.675849,	0.675407,	0.674965,	0.674525,	0.674086,	0.673648,	0.673211,	0.672775,	0.67234,	0.671906,	0.671473,	0.671042,	0.670611,	0.670181,	0.669753,	0.669326,	0.668899,	0.668474,	0.66805,	0.667626,	0.667204,	0.666783,	0.666363,	0.665944,	0.665526,	0.665109,	0.664694,	0.664279,	0.663865,	0.663452,	0.663041,	0.66263,	0.662221,	0.661812,	0.661405,	0.660998,	0.660593,	0.660189,	0.659786,	0.659383,	0.658982,	0.658582,	0.658183,	0.657785,	0.657388,	0.656992,	0.656597,	0.656203,	0.65581,	0.655418,	0.655027,	0.654637,	0.654249,	0.653861,	0.653474,	0.653088,	0.652704,	0.65232,	0.651937,	0.651556,	0.651175,	0.650796,	0.650417,	0.65004,	0.649663,	0.649287,	0.648913,	0.648539,	0.648167,	0.647796,	0.647425,	0.647056,	0.646687,	0.64632,	0.645953,	0.645588,	0.645224,	0.64486,	0.644498,	0.644136,	0.643776,	0.643417,	0.643058,	0.642701,	0.642344,	0.641989,	0.641635,	0.641281,	0.640929,	0.640577,	0.640227,	0.639877,	0.639529,	0.639182,	0.638835,	0.63849,	0.638145,	0.637802,	0.637459,	0.637118,	0.636777,	0.636437,	0.636099,	0.635761,	0.635425,	0.635089,	0.634754,	0.634421,	0.634088,	0.633756,	0.633425,	0.633095,	0.632767,	0.632439,	0.632112,	0.631786,	0.631461,	0.631137,	0.630814,	0.630492,	0.630171,	0.629851,	0.629532,	0.629213,	0.628896,	0.62858,	0.628265,	0.62795,	0.627637,	0.627324,	0.627013,	0.626702,	0.626393,	0.626084,	0.625777,	0.62547,	0.625164,	0.624859,	0.624555,	0.624252,	0.62395,	0.623649,	0.623349,	0.62305,	0.622752,	0.622455,	0.622158,	0.621863,	0.621569,	0.621275,	0.620983,	0.620691,	0.6204,	0.62011,	0.619822,	0.619534,	0.619247,	0.618961,	0.618676,	0.618392,	0.618108,	0.617826,	0.617545,	0.617264,	0.616985,	0.616706,	0.616428,	0.616152,	0.615876,	0.615601,	0.615327,	0.615054,	0.614782,	0.61451,	0.61424,	0.613971,	0.613702,	0.613435,	0.613168,	0.612902,	0.612637,	0.612373,	0.61211,	0.611848,	0.611587,	0.611327,	0.611067,	0.610809,	0.610551,	0.610295,	0.610039,	0.609784,	0.60953,	0.609277,	0.609025,	0.608773,	0.608523,	0.608274,	0.608025,	0.607777,	0.607531,	0.607285,	0.60704,	0.606795,	0.606552,	0.60631,	0.606068,	0.605828,	0.605588,	0.605349,	0.605111,	0.604874,	0.604638,	0.604403,	0.604168,	0.603935,	0.603702,	0.603471,	0.60324,	0.60301,	0.602781,	0.602552,	0.602325,	0.602098,	0.601873,	0.601648,	0.601424,	0.601201,	0.600979,	0.600758,	0.600537,	0.600318,	0.600099,	0.599881,	0.599664,	0.599448,	0.599233,	0.599018,	0.598805,	0.598592,	0.59838,	0.598169,	0.597959,	0.59775,	0.597542,	0.597334,	0.597128,	0.596922,	0.596717,	0.596513,	0.596309,	0.596107,	0.595905,	0.595705,	0.595505,	0.595306,	0.595108,	0.59491,	0.594714,	0.594518,	0.594323,	0.594129,	0.593936,	0.593744,	0.593552,	0.593362,	0.593172,	0.592983,	0.592795,	0.592607,	0.592421,	0.592235,	0.592051,	0.591867,	0.591683,	0.591501,	0.59132,	0.591139,	0.590959,	0.59078,	0.590602,	0.590425,	0.590248,	0.590072,	0.589897,	0.589723,	0.58955,	0.589378,	0.589206,	0.589035,	0.588865,	0.588696,	0.588528,	0.58836,	0.588193,	0.588027,	0.587862,	0.587698,	0.587534,	0.587372,	0.58721,	0.587049,	0.586888,	0.586729,	0.58657,	0.586412,	0.586255,	0.586099,	0.585943,	0.585789,	0.585635,	0.585482,	0.58533,	0.585178,	0.585027,	0.584877,	0.584728,	0.58458,	0.584432,	0.584286,	0.58414,	0.583995,	0.58385,	0.583707,	0.583564,	0.583422,	0.583281,	0.58314,	0.583,	0.582862,	0.582723,	0.582586,	0.58245,	0.582314,	0.582179,	0.582045,	0.581911,	0.581779,	0.581647,	0.581516,	0.581385,	0.581256,	0.581127,	0.580999,	0.580872,	0.580745,	0.580619,	0.580494,	0.58037,	0.580247,	0.580124,	0.580002,	0.579881,	0.579761,	0.579641,	0.579522,	0.579404,	0.579287,	0.57917,	0.579054,	0.578939,	0.578825,	0.578712,	0.578599,	0.578487,	0.578375,	0.578265,	0.578155,	0.578046,	0.577938,	0.57783,	0.577723,	0.577617,	0.577512,	0.577407,	0.577304,	0.577201,	0.577098,	0.576997,	0.576896,	0.576796,	0.576696,	0.576598,	0.5765,	0.576402,	0.576306,	0.57621,	0.576115,	0.576021,	0.575928,	0.575835,	0.575743,	0.575652,	0.575561,	0.575471,	0.575382,	0.575294,	0.575206,	0.575119,	0.575033,	0.574947,	0.574862,	0.574778,	0.574695,	0.574612,	0.57453,	0.574449,	0.574369,	0.574289,	0.57421,	0.574132,	0.574054,	0.573977,	0.573901,	0.573826,	0.573751,	0.573677,	0.573603,	0.573531,	0.573459,	0.573388,	0.573317,	0.573247,	0.573178,	0.57311,	0.573042,	0.572975,	0.572909,	0.572843,	0.572778,	0.572714,	0.572651,	0.572588,	0.572526,	0.572464,	0.572404,	0.572344,	0.572284,	0.572226,	0.572168,	0.57211,	0.572054,	0.571998,	0.571943,	0.571888,	0.571834,	0.571781,	0.571729,	0.571677,	0.571626,	0.571576,	0.571526,	0.571477,	0.571428,	0.571381,	0.571334,	0.571287,	0.571242,	0.571197,	0.571153,	0.571109,	0.571066,	0.571024,	0.570982,	0.570941,	0.570901,	0.570861,	0.570822,	0.570784,	0.570747,	0.57071,	0.570673,	0.570638,	0.570603,	0.570569,	0.570535,	0.570502,	0.57047,	0.570438,	0.570407,	0.570377,	0.570347,	0.570318,	0.57029,	0.570262,	0.570235,	0.570209,	0.570183,	0.570158,	0.570134,	0.57011,	0.570087,	0.570064,	0.570043,	0.570021,	0.570001,	0.569981,	0.569962,	0.569943,	0.569925,	0.569908,	0.569891,	0.569875,	0.56986,	0.569845,	0.569831,	0.569818,	0.569805,	0.569793,	0.569781,	0.56977,	0.56976,	0.56975,	0.569741,	0.569733,	0.569725,	0.569718,	0.569711,	0.569706,	0.5697,	0.569696,	0.569692,	0.569688,	0.569686,	0.569683,	0.569682,	0.569681,	0.569681,	0.569681,	0.569682,	0.569684,	0.569686,	0.569689,	0.569692,	0.569697,	0.569701,	0.569707,	0.569712,	0.569719,	0.569726,	0.569734,	0.569742,	0.569751,	0.569761,	0.569771,	0.569782,	0.569793,	0.569805,	0.569818,	0.569831,	0.569845,	0.569859,	0.569874,	0.56989,	0.569906,	0.569923,	0.569941,	0.569959,	0.569977,	0.569997,	0.570016,	0.570037,	0.570058,	0.570079,	0.570102,	0.570124,	0.570148,	0.570172,	0.570196,	0.570222,	0.570247,	0.570274,	0.570301,	0.570328,	0.570356,	0.570385,	0.570414,	0.570444,	0.570474,	0.570505,	0.570537,	0.570569,	0.570602,	0.570635,	0.570669,	0.570704,	0.570739,	0.570774,	0.57081,	0.570847,	0.570885,	0.570922,	0.570961,	0.571,	0.57104,	0.57108,	0.571121,	0.571162,	0.571204,	0.571246,	0.571289,	0.571333,	0.571377,	0.571422,	0.571467,	0.571513,	0.57156,	0.571607,	0.571654,	0.571702,	0.571751,	0.5718,	0.57185,	0.5719,	0.571951,	0.572002,	0.572054,	0.572107,	0.57216,	0.572214,	0.572268,	0.572323,	0.572378,	0.572434,	0.57249,	0.572547,	0.572605,	0.572663,	0.572721,	0.57278,	0.57284,	0.5729,	0.572961,	0.573022,	0.573084,	0.573146,	0.573209,	0.573273,	0.573337,	0.573401,	0.573466,	0.573532,	0.573598,	0.573665,	0.573732,	0.5738,	0.573868,	0.573937,	0.574006,	0.574076,	0.574146,	0.574217,	0.574288,	0.57436,	0.574433,	0.574506,	0.574579,	0.574653,	0.574728,	0.574803,	0.574879,	0.574955,	0.575031,	0.575109,	0.575186,	0.575264,	0.575343,	0.575422,	0.575502,	0.575582,	0.575663,	0.575744,	0.575826,	0.575909,	0.575991,	0.576075,	0.576159,	0.576243,	0.576328,	0.576413,	0.576499,	0.576585,	0.576672,	0.57676,	0.576848,	0.576936,	0.577025,	0.577114,	0.577204,	0.577295,	0.577385,	0.577477,	0.577569,	0.577661,	0.577754,	0.577847,	0.577941,	0.578036,	0.57813,	0.578226,	0.578322,	0.578418,	0.578515,	0.578612,	0.57871,	0.578808,	0.578907,	0.579006,	0.579106,	0.579206,	0.579307,	0.579408,	0.57951,	0.579612,	0.579715,	0.579818,	0.579921,	0.580026,	0.58013,	0.580235,	0.580341,	0.580447,	0.580553,	0.58066,	0.580768,	0.580875,	0.580984,	0.581093,	0.581202,	0.581312,	0.581422,	0.581533,	0.581644,	0.581756,	0.581868,	0.58198,	0.582094,	0.582207,	0.582321,	0.582436,	0.58255,	0.582666,	0.582782,	0.582898,	0.583015,	0.583132,	0.58325,	0.583368,	0.583486,	0.583606,	0.583725,	0.583845,	0.583965,	0.584086,	0.584208,	0.584329,	0.584452,	0.584574,	0.584698,	0.584821,	0.584945,	0.58507,	0.585195,	0.58532,	0.585446,	0.585572,	0.585699,	0.585826,	0.585954,	0.586082,	0.58621,	0.586339,	0.586468,	0.586598,	0.586728,	0.586859,	0.58699,	0.587122,	0.587254,	0.587386,	0.587519,	0.587653,	0.587786,	0.58792,	0.588055,	0.58819,	0.588326,	0.588461,	0.588598,	0.588735,	0.588872,	0.589009,	0.589147,	0.589286,	0.589425,	0.589564,	0.589704,	0.589844,	0.589985,	0.590126,	0.590267,	0.590409,	0.590551,	0.590694,	0.590837,	0.59098,	0.591124,	0.591269,	0.591414,	0.591559,	0.591704,	0.59185,	0.591997,	0.592144,	0.592291,	0.592439,	0.592587,	0.592735,	0.592884,	0.593033,	0.593183,	0.593333,	0.593484,	0.593635,	0.593786,	0.593938,	0.59409,	0.594242,	0.594395,	0.594549,	0.594702,	0.594857,	0.595011,	0.595166,	0.595321,	0.595477,	0.595633,	0.59579,	0.595947,	0.596104,	0.596262,	0.59642,	0.596578,	0.596737,	0.596897,	0.597056,	0.597216,	0.597377,	0.597538,	0.597699,	0.59786,	0.598023,	0.598185,	0.598348,	0.598511,	0.598674,	0.598838,	0.599003,	0.599167,	0.599332,	0.599498,	0.599664,	0.59983,	0.599996,	0.600163,	0.600331,	0.600499,	0.600667,	0.600835,	0.601004,	0.601173,	0.601343,	0.601513,	0.601683,	0.601854,	0.602025,	0.602196,	0.602368,	0.60254,	0.602713,	0.602886,	0.603059,	0.603233,	0.603407,	0.603581,	0.603756,	0.603931,	0.604107,	0.604282,	0.604459,	0.604635,	0.604812,	0.604989,	0.605167,	0.605345,	0.605523,	0.605702,	0.605881,	0.60606,	0.60624,	0.60642,	0.606601,	0.606782,	0.606963,	0.607144,	0.607326,	0.607509,	0.607691,	0.607874,	0.608057,	0.608241,	0.608425,	0.608609,	0.608794,	0.608979,	0.609164,	0.60935,	0.609536,	0.609722,	0.609909,	0.610096,	0.610284,	0.610471,	0.610659,	0.610848,	0.611037,	0.611226,	0.611415,	0.611605,	0.611795,	0.611986,	0.612176,	0.612367,	0.612559,	0.612751,	0.612943,	0.613135,	0.613328,	0.613521,	0.613714,	0.613908,	0.614102,	0.614297,	0.614491,	0.614686,	0.614882,	0.615078,	0.615274,	0.61547,	0.615667,	0.615864,	0.616061,	0.616259,	0.616457,	0.616655,	0.616853,	0.617052,	0.617252,	0.617451,	0.617651,	0.617851,	0.618052,	0.618252,	0.618453,	0.618655,	0.618857,	0.619059,	0.619261,	0.619464,	0.619667,	0.61987,	0.620074,	0.620278,	0.620482,	0.620686,	0.620891,	0.621096,	0.621302,	0.621507,	0.621713,	0.62192,	0.622126,	0.622333,	0.622541,	0.622748,	0.622956,	0.623164,	0.623373,	0.623581,	0.62379,	0.624,	0.624209,	0.624419,	0.624629,	0.62484,	0.625051,	0.625262,	0.625473,	0.625685,	0.625897,	0.626109,	0.626322,	0.626534,	0.626748,	0.626961,	0.627175,	0.627389,	0.627603,	0.627818,	0.628032,	0.628248,	0.628463,	0.628679,	0.628895,	0.629111,	0.629327,	0.629544,	0.629761,	0.629979,	0.630196,	0.630414,	0.630632,	0.630851,	0.63107,	0.631289,	0.631508,	0.631728,	0.631947,	0.632168,	0.632388,	0.632609,	0.63283,	0.633051,	0.633272,	0.633494,	0.633716,	0.633938,	0.634161,	0.634384,	0.634607,	0.63483,	0.635054,	0.635277,	0.635502,	0.635726,	0.635951,	0.636176,	0.636401,	0.636626,	0.636852,	0.637078,	0.637304,	0.637531,	0.637757,	0.637984,	0.638212,	0.638439,	0.638667,	0.638895,	0.639123,	0.639352,	0.63958,	0.639809,	0.640039,	0.640268,	0.640498,	0.640728,	0.640958,	0.641189,	0.64142,	0.641651,	0.641882,	0.642113,	0.642345,	0.642577,	0.642809,	0.643042,	0.643275,	0.643508,	0.643741,	0.643974,	0.644208,	0.644442,	0.644676,	0.64491,	0.645145,	0.64538,	0.645615,	0.64585,	0.646086,	0.646322,	0.646558,	0.646794,	0.647031,	0.647268,	0.647505,	0.647742,	0.647979,	0.648217,	0.648455,	0.648693,	0.648931,	0.64917,	0.649409,	0.649648,	0.649887,	0.650127,	0.650366,	0.650606,	0.650847,	0.651087,	0.651328,	0.651568,	0.65181,	0.652051,	0.652292,	0.652534,	0.652776,	0.653018,	0.653261,	0.653503,	0.653746,	0.653989,	0.654232,	0.654476,	0.654719,	0.654963,	0.655207,	0.655452,	0.655696,	0.655941,	0.656186,	0.656431,	0.656677,	0.656922,	0.657168,	0.657414,	0.65766,	0.657907,	0.658153,	0.6584,	0.658647,	0.658894,	0.659142,	0.659389,	0.659637,	0.659885,	0.660134,	0.660382,	0.660631,	0.660879,	0.661129,	0.661378,	0.661627,	0.661877,	0.662127,	0.662377,	0.662627,	0.662877,	0.663128,	0.663379,	0.66363,	0.663881,	0.664133,	0.664384,	0.664636,	0.664888,	0.66514,	0.665392,	0.665645,	0.665898,	0.666151,	0.666404,	0.666657,	0.66691,	0.667164,	0.667418,	0.667672,	0.667926,	0.668181,	0.668435,	0.66869,	0.668945,	0.6692,	0.669455,	0.669711,	0.669966,	0.670222,	0.670478,	0.670735,	0.670991,	0.671248,	0.671504,	0.671761,	0.672018,	0.672275,	0.672533,	0.672791,	0.673048,	0.673306,	0.673564,	0.673823,	0.674081,	0.67434,	0.674599,	0.674858,	0.675117,	0.675376,	0.675635,	0.675895,	0.676155,	0.676415,	0.676675,	0.676935,	0.677196,	0.677456,	0.677717,	0.677978,	0.678239,	0.678501,	0.678762,	0.679024,	0.679285,	0.679547,	0.679809,	0.680071,	0.680334,	0.680596,	0.680859,	0.681122,	0.681385,	0.681648,	0.681911,	0.682175,	0.682439,	0.682702,	0.682966,	0.68323,	0.683495,	0.683759,	0.684023,	0.684288,	0.684553,	0.684818,	0.685083,	0.685348,	0.685614,	0.685879,	0.686145,	0.686411,	0.686677,	0.686943,	0.687209,	0.687476,	0.687742,	0.688009,	0.688276,	0.688543,	0.68881,	0.689077,	0.689344,	0.689612,	0.68988,	0.690148,	0.690415,	0.690684,	0.690952,	0.69122,	0.691489,	0.691757,	0.692026,	0.692295,	0.692564,	0.692833,	0.693102,	0.693372,	0.693641,	0.693911,	0.694181,	0.694451,	0.694721,	0.694991,	0.695261,	0.695532,	0.695802,	0.696073,	0.696344,	0.696615,	0.696886,	0.697157,	0.697428,	0.6977,	0.697971,	0.698243,	0.698515,	0.698787,	0.699059,	0.699331,	0.699603,	0.699875,	0.700148,	0.700421,	0.700693,	0.700966,	0.701239,	0.701512,	0.701785,	0.702059,	0.702332,	0.702606,	0.702879,	0.703153,	0.703427,	0.703701,	0.703975,	0.704249,	0.704523,	0.704798,	0.705072,	0.705347,	0.705622,	0.705897,	0.706172,	0.706447,	0.706722,	0.706997,	0.707272,	0.707548,	0.707823,	0.708099,	0.708375,	0.708651,	0.708927,	0.709203,	0.709479,	0.709755,	0.710032,	0.710308,	0.710585,	0.710861,	0.711138,	0.711415,	0.711692,	0.711969,	0.712246,	0.712523,	0.712801,	0.713078,	0.713356,	0.713633,	0.713911,	0.714189,	0.714467,	0.714744,	0.715023,	0.715301,	0.715579,	0.715857,	0.716136,	0.716414,	0.716693,	0.716971,	0.71725,	0.717529,	0.717808,	0.718087,	0.718366,	0.718645,	0.718924,	0.719204,	0.719483,	0.719763,	0.720042,	0.720322,	0.720602,	0.720881,	0.721161,	0.721441,	0.721721,	0.722001,	0.722282,	0.722562,	0.722842,	0.723123,	0.723403,	0.723684,	0.723964,	0.724245,	0.724526,	0.724807,	0.725088,	0.725369,	0.72565,	0.725931,	0.726212,	0.726493,	0.726775,	0.727056,	0.727338,	0.727619,	0.727901,	0.728182,	0.728464,	0.728746,	0.729028,	0.72931,	0.729592,	0.729874,	0.730156,	0.730438,	0.73072,	0.731003,	0.731285,	0.731568,	0.73185,	0.732133,	0.732415,	0.732698,	0.732981,	0.733263,	0.733546,	0.733829,	0.734112,	0.734395,	0.734678,	0.734961,	0.735244,	0.735528,	0.735811,	0.736094,	0.736378,	0.736661,	0.736944,	0.737228,	0.737512,	0.737795,	0.738079,	0.738363,	0.738646,	0.73893,	0.739214,	0.739498,	0.739782,	0.740066,	0.74035,	0.740634,	0.740918,	0.741202,	0.741486,	0.741771,	0.742055,	0.742339,	0.742624,	0.742908,	0.743193,	0.743477,	0.743762,	0.744046,	0.744331,	0.744616,	0.7449,	0.745185,	0.74547,	0.745754,	0.746039,	0.746324,	0.746609,	0.746894,	0.747179,	0.747464,	0.747749,	0.748034,	0.748319,	0.748604,	0.748889,	0.749175,	0.74946,	0.749745,	0.75003,	0.750316,	0.750601,	0.750886,	0.751172,	0.751457,	0.751743,	0.752028,	0.752314,	0.752599,	0.752885,	0.75317,	0.753456,	0.753741,	0.754027,	0.754313,	0.754598,	0.754884,	0.75517,	0.755455,	0.755741,	0.756027,	0.756313,	0.756599,	0.756884,	0.75717,	0.757456,	0.757742,	0.758028,	0.758314,	0.7586,	0.758886,	0.759172,	0.759457,	0.759743,	0.760029,	0.760315,	0.760601,	0.760887,	0.761173,	0.76146,	0.761746,	0.762032,	0.762318,	0.762604,	0.76289,	0.763176,	0.763462,	0.763748,	0.764034,	0.76432,	0.764606,	0.764893,	0.765179,	0.765465,	0.765751,	0.766037,	0.766323,	0.766609,	0.766896,	0.767182,	0.767468,	0.767754,	0.76804,	0.768326,	0.768612,	0.768899,	0.769185,	0.769471,	0.769757,	0.770043,	0.770329,	0.770615,	0.770901,	0.771188,	0.771474,	0.77176,	0.772046,	0.772332,	0.772618,	0.772904,	0.77319,	0.773476,	0.773762,	0.774048,	0.774334,	0.77462,	0.774906,	0.775192,	0.775478,	0.775764,	0.77605,	0.776336,	0.776622,	0.776908,	0.777194,	0.77748,	0.777766,	0.778051,	0.778337,	0.778623,	0.778909,	0.779195,	0.77948,	0.779766,	0.780052,	0.780338,	0.780623,	0.780909,	0.781195,	0.78148,	0.781766,	0.782051,	0.782337,	0.782622,	0.782908,	0.783193,	0.783479,	0.783764,	0.78405,	0.784335,	0.784621,	0.784906,	0.785191,	0.785476,	0.785762,	0.786047,	0.786332,	0.786617,	0.786902,	0.787188,	0.787473,	0.787758,	0.788043,	0.788328,	0.788613,	0.788898,	0.789183,	0.789467,	0.789752,	0.790037,	0.790322,	0.790606,	0.790891,	0.791176,	0.79146,	0.791745,	0.79203,	0.792314,	0.792599,	0.792883,	0.793167,	0.793452,	0.793736,	0.79402,	0.794305,	0.794589,	0.794873,	0.795157,	0.795441,	0.795725,	0.796009,	0.796293,	0.796577,	0.796861,	0.797145,	0.797428,	0.797712,	0.797996,	0.798279,	0.798563,	0.798846,	0.79913,	0.799413,	0.799697,	0.79998,	0.800263,	0.800547,	0.80083,	0.801113,	0.801396,	0.801679,	0.801962,	0.802245,	0.802528,	0.802811,	0.803094,	0.803376,	0.803659,	0.803942,	0.804224,	0.804507,	0.804789,	0.805071,	0.805354,	0.805636,	0.805918,	0.8062,	0.806483,	0.806765,	0.807047,	0.807329,	0.80761,	0.807892,	0.808174,	0.808456,	0.808737,	0.809019,	0.8093,	0.809582,	0.809863,	0.810145,	0.810426,	0.810707,	0.810988,	0.811269,	0.81155,	0.811831,	0.812112,	0.812393,	0.812674,	0.812954,	0.813235,	0.813515,	0.813796,	0.814076,	0.814356,	0.814637,	0.814917,	0.815197,	0.815477,	0.815757,	0.816037,	0.816317,	0.816597,	0.816876,	0.817156,	0.817435,	0.817715,	0.817994,	0.818274,	0.818553,	0.818832,	0.819111,	0.81939,	0.819669,	0.819948,	0.820227,	0.820505,	0.820784,	0.821062,	0.821341,	0.821619,	0.821898,	0.822176,	0.822454,	0.822732,	0.82301,	0.823288,	0.823566,	0.823844,	0.824121,	0.824399,	0.824676,	0.824954,	0.825231,	0.825508,	0.825785,	0.826062,	0.826339,	0.826616,	0.826893,	0.82717,	0.827446,	0.827723,	0.827999,	0.828276,	0.828552,	0.828828,	0.829104,	0.82938,	0.829656,	0.829932,	0.830208,	0.830484,	0.830759,	0.831035,	0.83131,	0.831585,	0.83186,	0.832135,	0.83241,	0.832685,	0.83296,	0.833235,	0.833509,	0.833784,	0.834058,	0.834333,	0.834607,	0.834881,	0.835155,	0.835429,	0.835703,	0.835977,	0.83625,	0.836524,	0.836797,	0.837071,	0.837344,	0.837617,	0.83789,	0.838163,	0.838436,	0.838708,	0.838981,	0.839254,	0.839526,	0.839798,	0.84007,	0.840343,	0.840615,	0.840886,	0.841158,	0.84143,	0.841702,	0.841973,	0.842244,	0.842516,	0.842787,	0.843058,	0.843329,	0.843599,	0.84387,	0.844141,	0.844411,	0.844682,	0.844952,	0.845222,	0.845492,	0.845762,	0.846032,	0.846302,	0.846571,	0.846841,	0.84711,	0.847379,	0.847648,	0.847917,	0.848186,	0.848455,	0.848724,	0.848992,	0.849261,	0.849529,	0.849797,	0.850065,	0.850333,	0.850601,	0.850869,	0.851136,	0.851404,	0.851671,	0.851938,	0.852206,	0.852473,	0.852739,	0.853006,	0.853273,	0.853539,	0.853806,	0.854072,	0.854338,	0.854604,	0.85487,	0.855136,	0.855402,	0.855667,	0.855932,	0.856198,	0.856463,	0.856728,	0.856993,	0.857258,	0.857522,	0.857787,	0.858051,	0.858315,	0.858579,	0.858843,	0.859107,	0.859371,	0.859635,	0.859898,	0.860162,	0.860425,	0.860688,	0.860951,	0.861214,	0.861476,	0.861739,	0.862001,	0.862263,	0.862526,	0.862788,	0.86305,	0.863311,	0.863573,	0.863834,	0.864096,	0.864357,	0.864618,	0.864879,	0.86514,	0.8654,	0.865661,	0.865921,	0.866181,	0.866442,	0.866701,	0.866961,	0.867221,	0.867481,	0.86774,	0.867999,	0.868258,	0.868517,	0.868776,	0.869035,	0.869293,	0.869552,	0.86981,	0.870068,	0.870326,	0.870584,	0.870842,	0.871099,	0.871356,	0.871614,	0.871871,	0.872128,	0.872385,	0.872641,	0.872898,	0.873154,	0.87341,	0.873666,	0.873922,	0.874178,	0.874434,	0.874689,	0.874944,	0.8752,	0.875455,	0.875709,	0.875964,	0.876219,	0.876473,	0.876727,	0.876982,	0.877235,	0.877489,	0.877743,	0.877996,	0.87825,	0.878503,	0.878756,	0.879009,	0.879262,	0.879514,	0.879767,	0.880019,	0.880271,	0.880523,	0.880775,	0.881026,	0.881278,	0.881529,	0.88178,	0.882031,	0.882282,	0.882533,	0.882783,	0.883033,	0.883284,	0.883534,	0.883784,	0.884033,	0.884283,	0.884532,	0.884781,	0.88503,	0.885279,	0.885528,	0.885777,	0.886025,	0.886273,	0.886521,	0.886769,	0.887017,	0.887265,	0.887512,	0.887759,	0.888006,	0.888253,	0.8885,	0.888747,	0.888993,	0.889239,	0.889485,	0.889731,	0.889977,	0.890223,	0.890468,	0.890713,	0.890958,	0.891203,	0.891448,	0.891692,	0.891937,	0.892181,	0.892425,	0.892669,	0.892913,	0.893156,	0.893399,	0.893643,	0.893886,	0.894128,	0.894371,	0.894614,	0.894856,	0.895098,	0.89534,	0.895582,	0.895823,	0.896065,	0.896306,	0.896547,	0.896788,	0.897029,	0.897269,	0.89751,	0.89775,	0.89799,	0.89823,	0.898469,	0.898709,	0.898948,	0.899187,	0.899426,	0.899665,	0.899903,	0.900142,	0.90038,	0.900618,	0.900856,	0.901093,	0.901331,	0.901568,	0.901805,	0.902042,	0.902279,	0.902515,	0.902752,	0.902988,	0.903224,	0.90346,	0.903695,	0.903931,	0.904166,	0.904401,	0.904636,	0.904871,	0.905105,	0.90534,	0.905574,	0.905808,	0.906041,	0.906275,	0.906508,	0.906742,	0.906975,	0.907207,	0.90744,	0.907672,	0.907905,	0.908137,	0.908369,	0.9086,	0.908832,	0.909063,	0.909294,	0.909525,	0.909756,	0.909986,	0.910216,	0.910447,	0.910677,	0.910906,	0.911136,	0.911365,	0.911594,	0.911823,	0.912052,	0.912281,	0.912509,	0.912737,	0.912965,	0.913193,	0.91342,	0.913648,	0.913875,	0.914102,	0.914329,	0.914555,	0.914782,	0.915008,	0.915234,	0.91546,	0.915685,	0.915911,	0.916136,	0.916361,	0.916586,	0.91681,	0.917035,	0.917259,	0.917483,	0.917707,	0.91793,	0.918154,	0.918377,	0.9186,	0.918823,	0.919045,	0.919267,	0.91949,	0.919712,	0.919933,	0.920155,	0.920376,	0.920597,	0.920818,	0.921039,	0.921259,	0.92148,	0.9217,	0.92192,	0.922139,	0.922359,	0.922578,	0.922797,	0.923016,	0.923235,	0.923453,	0.923671,	0.923889,	0.924107,	0.924325,	0.924542,	0.924759,	0.924976,	0.925193,	0.92541,	0.925626,	0.925842,	0.926058,	0.926274,	0.926489,	0.926704,	0.926919,	0.927134,	0.927349,	0.927563,	0.927778,	0.927992,	0.928205,	0.928419,	0.928632,	0.928845,	0.929058,	0.929271,	0.929483,	0.929696,	0.929908,	0.93012,	0.930331,	0.930543,	0.930754,	0.930965,	0.931175,	0.931386,	0.931596,	0.931806,	0.932016,	0.932226,	0.932435,	0.932644,	0.932853,	0.933062,	0.933271,	0.933479,	0.933687,	0.933895,	0.934103,	0.93431,	0.934517,	0.934724,	0.934931,	0.935138,	0.935344,	0.93555,	0.935756,	0.935962,	0.936167,	0.936372,	0.936577,	0.936782,	0.936986,	0.937191,	0.937395,	0.937599,	0.937802,	0.938006,	0.938209,	0.938412,	0.938615,	0.938817,	0.939019,	0.939221,	0.939423,	0.939625,	0.939826,	0.940027,	0.940228,	0.940429,	0.940629,	0.94083,	0.94103,	0.941229,	0.941429,	0.941628,	0.941827,	0.942026,	0.942225,	0.942423,	0.942621,	0.942819,	0.943017,	0.943214,	0.943411,	0.943608,	0.943805,	0.944002,	0.944198,	0.944394,	0.94459,	0.944785,	0.944981,	0.945176,	0.945371,	0.945565,	0.94576,	0.945954,	0.946148,	0.946342,	0.946535,	0.946728,	0.946921,	0.947114,	0.947307,	0.947499,	0.947691,	0.947883,	0.948074,	0.948266,	0.948457,	0.948648,	0.948838,	0.949029,	0.949219,	0.949409,	0.949598,	0.949788,	0.949977,	0.950166,	0.950355,	0.950543,	0.950731,	0.950919,	0.951107,	0.951295,	0.951482,	0.951669,	0.951856,	0.952042,	0.952228,	0.952415,	0.9526,	0.952786,	0.952971,	0.953156,	0.953341,	0.953526,	0.95371,	0.953894,	0.954078,	0.954262,	0.954445,	0.954628,	0.954811,	0.954994,	0.955176,	0.955358,	0.95554,	0.955722,	0.955903,	0.956084,	0.956265,	0.956446,	0.956626,	0.956807,	0.956986,	0.957166,	0.957346,	0.957525,	0.957704,	0.957882,	0.958061,	0.958239,	0.958417,	0.958595,	0.958772,	0.958949,	0.959126,	0.959303,	0.959479,	0.959655,	0.959831,	0.960007,	0.960183,	0.960358,	0.960533,	0.960707,	0.960882,	0.961056,	0.96123,	0.961404,	0.961577,	0.96175,	0.961923,	0.962096,	0.962268,	0.96244,	0.962612,	0.962784,	0.962955,	0.963126,	0.963297,	0.963468,	0.963638,	0.963808,	0.963978,	0.964148,	0.964317,	0.964486,	0.964655,	0.964824,	0.964992,	0.96516,	0.965328,	0.965495,	0.965663,	0.96583,	0.965996,	0.966163,	0.966329,	0.966495,	0.966661,	0.966827,	0.966992,	0.967157,	0.967321,	0.967486,	0.96765,	0.967814,	0.967978,	0.968141,	0.968304,	0.968467,	0.96863,	0.968792,	0.968954,	0.969116,	0.969278,	0.969439,	0.9696,	0.969761,	0.969921,	0.970082,	0.970242,	0.970401,	0.970561,	0.97072,	0.970879,	0.971038,	0.971196,	0.971355,	0.971512,	0.97167,	0.971827,	0.971985,	0.972141,	0.972298,	0.972454,	0.97261,	0.972766,	0.972922,	0.973077,	0.973232,	0.973387,	0.973541,	0.973695,	0.973849,	0.974003,	0.974156,	0.97431,	0.974462,	0.974615,	0.974767,	0.974919,	0.975071,	0.975223,	0.975374,	0.975525,	0.975676,	0.975826,	0.975976,	0.976126,	0.976276,	0.976425,	0.976574,	0.976723,	0.976872,	0.97702,	0.977168,	0.977316,	0.977463,	0.977611,	0.977758,	0.977904,	0.978051,	0.978197,	0.978343,	0.978488,	0.978634,	0.978779,	0.978923,	0.979068,	0.979212,	0.979356,	0.9795,	0.979643,	0.979786,	0.979929,	0.980072,	0.980214,	0.980356,	0.980498,	0.98064,	0.980781,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	1.11086,	


Input > Layer1 > Layer2  time = 484103 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3

// Input > Layer1 > Layer2 > Layer3



SDFS:
0.0293651,	0.0301765,	0.0309875,	0.0317983,	0.0326086,	0.0334186,	0.0342282,	0.0350374,	0.0358463,	0.0366548,	0.037463,	0.0382707,	0.0390782,	0.0398852,	0.0406919,	0.0414982,	0.0423042,	0.0431097,	0.043915,	0.0447198,	0.0455243,	0.0463284,	0.0471322,	0.0479356,	0.0487386,	0.0495413,	0.0503436,	0.0511455,	0.0519471,	0.0527483,	0.0535491,	0.0543496,	0.0551497,	0.0559495,	0.0567488,	0.0575478,	0.0583465,	0.0591448,	0.0599427,	0.0607403,	0.0615374,	0.0623343,	0.0631307,	0.0639268,	0.0647226,	0.0655179,	0.0663129,	0.0671076,	0.0679019,	0.0686958,	0.0694893,	0.0702825,	0.0710753,	0.0718678,	0.0726599,	0.0734516,	0.0742429,	0.0750339,	0.0758246,	0.0766148,	0.0774047,	0.0781943,	0.0789835,	0.0797723,	0.0805607,	0.0813488,	0.0821365,	0.0829239,	0.0837109,	0.0844975,	0.0852838,	0.0860697,	0.0868553,	0.0876404,	0.0884253,	0.0892097,	0.0899938,	0.0907775,	0.0915609,	0.0923439,	0.0931265,	0.0939088,	0.0946907,	0.0954723,	0.0962535,	0.0970343,	0.0978147,	0.0985948,	0.0993746,	0.100154,	0.100933,	0.101712,	0.10249,	0.103268,	0.104045,	0.104823,	0.105599,	0.106376,	0.107152,	0.107928,	0.108703,	0.109478,	0.110253,	0.111027,	0.111801,	0.112575,	0.113348,	0.114121,	0.114893,	0.115665,	0.116437,	0.117208,	0.11798,	0.11875,	0.119521,	0.12029,	0.12106,	0.121829,	0.122598,	0.123367,	0.124135,	0.124903,	0.12567,	0.126437,	0.127204,	0.12797,	0.128736,	0.129502,	0.130267,	0.131032,	0.131797,	0.132561,	0.133325,	0.134088,	0.134851,	0.135614,	0.136376,	0.137138,	0.1379,	0.138661,	0.139422,	0.140183,	0.140943,	0.141703,	0.142462,	0.143221,	0.14398,	0.144739,	0.145497,	0.146254,	0.147012,	0.147769,	0.148525,	0.149281,	0.150037,	0.150793,	0.151548,	0.152303,	0.153057,	0.153811,	0.154565,	0.155319,	0.156072,	0.156824,	0.157577,	0.158328,	0.15908,	0.159831,	0.160582,	0.161333,	0.162083,	0.162833,	0.163582,	0.164331,	0.16508,	0.165828,	0.166576,	0.167324,	0.168071,	0.168818,	0.169565,	0.170311,	0.171057,	0.171802,	0.172547,	0.173292,	0.174036,	0.17478,	0.175524,	0.176267,	0.17701,	0.177753,	0.178495,	0.179237,	0.179979,	0.18072,	0.181461,	0.182201,	0.182941,	0.183681,	0.18442,	0.18516,	0.185898,	0.186637,	0.187375,	0.188112,	0.188849,	0.189586,	0.190323,	0.191059,	0.191795,	0.19253,	0.193265,	0.194,	0.194735,	0.195469,	0.196202,	0.196936,	0.197669,	0.198401,	0.199133,	0.199865,	0.200597,	0.201328,	0.202059,	0.202789,	0.20352,	0.204249,	0.204979,	0.205708,	0.206436,	0.207165,	0.207893,	0.20862,	0.209348,	0.210075,	0.210801,	0.211527,	0.212253,	0.212979,	0.213704,	0.214429,	0.215153,	0.215877,	0.216601,	0.217324,	0.218047,	0.21877,	0.219492,	0.220214,	0.220936,	0.221657,	0.222378,	0.223098,	0.223819,	0.224538,	0.225258,	0.225977,	0.226696,	0.227414,	0.228132,	0.22885,	0.229567,	0.230284,	0.231001,	0.231717,	0.232433,	0.233149,	0.233864,	0.234579,	0.235293,	0.236007,	0.236721,	0.237435,	0.238148,	0.23886,	0.239573,	0.240285,	0.240997,	0.241708,	0.242419,	0.243129,	0.24384,	0.24455,	0.245259,	0.245968,	0.246677,	0.247386,	0.248094,	0.248802,	0.249509,	0.250216,	0.250923,	0.251629,	0.252335,	0.253041,	0.253746,	0.254451,	0.255156,	0.25586,	0.256564,	0.257268,	0.257971,	0.258674,	0.259376,	0.260079,	0.26078,	0.261482,	0.262183,	0.262884,	0.263584,	0.264284,	0.264984,	0.265683,	0.266382,	0.267081,	0.267779,	0.268477,	0.269175,	0.269872,	0.270569,	0.271265,	0.271961,	0.272657,	0.273353,	0.274048,	0.274743,	0.275437,	0.276131,	0.276825,	0.277518,	0.278211,	0.278904,	0.279596,	0.280288,	0.28098,	0.281671,	0.282362,	0.283053,	0.283743,	0.284433,	0.285123,	0.285812,	0.286501,	0.287189,	0.287877,	0.288565,	0.289252,	0.289939,	0.290626,	0.291313,	0.291999,	0.292684,	0.29337,	0.294055,	0.294739,	0.295424,	0.296108,	0.296791,	0.297474,	0.298157,	0.29884,	0.299522,	0.300204,	0.300885,	0.301567,	0.302247,	0.302928,	0.303608,	0.304288,	0.304967,	0.305646,	0.306325,	0.307003,	0.307681,	0.308359,	0.309036,	0.309713,	0.31039,	0.311066,	0.311742,	0.312418,	0.313093,	0.313768,	0.314443,	0.315117,	0.315791,	0.316464,	0.317137,	0.31781,	0.318483,	0.319155,	0.319827,	0.320498,	0.321169,	0.32184,	0.32251,	0.32318,	0.32385,	0.324519,	0.325189,	0.325857,	0.326525,	0.327193,	0.327861,	0.328528,	0.329195,	0.329862,	0.330528,	0.331194,	0.33186,	0.332525,	0.33319,	0.333854,	0.334518,	0.335182,	0.335846,	0.336509,	0.337172,	0.337834,	0.338496,	0.339158,	0.339819,	0.340481,	0.341141,	0.341802,	0.342462,	0.343121,	0.343781,	0.34444,	0.345098,	0.345757,	0.346415,	0.347072,	0.34773,	0.348387,	0.349043,	0.349699,	0.350355,	0.351011,	0.351666,	0.352321,	0.352976,	0.35363,	0.354284,	0.354937,	0.35559,	0.356243,	0.356896,	0.357548,	0.3582,	0.358851,	0.359502,	0.360153,	0.360803,	0.361454,	0.362103,	0.362753,	0.363402,	0.36405,	0.364699,	0.365347,	0.365995,	0.366642,	0.367289,	0.367936,	0.368582,	0.369228,	0.369874,	0.370519,	0.371164,	0.371808,	0.372453,	0.373097,	0.37374,	0.374383,	0.375026,	0.375669,	0.376311,	0.376953,	0.377595,	0.378236,	0.378877,	0.379517,	0.380157,	0.380797,	0.381437,	0.382076,	0.382715,	0.383353,	0.383991,	0.384629,	0.385267,	0.385904,	0.386541,	0.387177,	0.387813,	0.388449,	0.389084,	0.389719,	0.390354,	0.390989,	0.391623,	0.392256,	0.39289,	0.393523,	0.394156,	0.394788,	0.39542,	0.396052,	0.396683,	0.397314,	0.397945,	0.398575,	0.399205,	0.399835,	0.400464,	0.401093,	0.401722,	0.40235,	0.402978,	0.403606,	0.404233,	0.40486,	0.405487,	0.406113,	0.406739,	0.407364,	0.40799,	0.408615,	0.409239,	0.409864,	0.410487,	0.411111,	0.411734,	0.412357,	0.41298,	0.413602,	0.414224,	0.414846,	0.415467,	0.416088,	0.416708,	0.417328,	0.417948,	0.418568,	0.419187,	0.419806,	0.420425,	0.421043,	0.421661,	0.422278,	0.422895,	0.423512,	0.424129,	0.424745,	0.425361,	0.425976,	0.426592,	0.427206,	0.427821,	0.428435,	0.429049,	0.429662,	0.430276,	0.430889,	0.431501,	0.432113,	0.432725,	0.433337,	0.433948,	0.434559,	0.435169,	0.435779,	0.436389,	0.436999,	0.437608,	0.438217,	0.438825,	0.439433,	0.440041,	0.440649,	0.441256,	0.441863,	0.442469,	0.443075,	0.443681,	0.444287,	0.444892,	0.445497,	0.446101,	0.446705,	0.447309,	0.447913,	0.448516,	0.449119,	0.449721,	0.450323,	0.450925,	0.451527,	0.452128,	0.452729,	0.453329,	0.453929,	0.454529,	0.455129,	0.455728,	0.456327,	0.456925,	0.457524,	0.458121,	0.458719,	0.459316,	0.459913,	0.46051,	0.461106,	0.461702,	0.462297,	0.462892,	0.463487,	0.464082,	0.464676,	0.46527,	0.465863,	0.466457,	0.46705,	0.467642,	0.468234,	0.468826,	0.469418,	0.470009,	0.4706,	0.471191,	0.471781,	0.472371,	0.47296,	0.47355,	0.474139,	0.474727,	0.475316,	0.475904,	0.476491,	0.477078,	0.477665,	0.478252,	0.478838,	0.479424,	0.48001,	0.480595,	0.48118,	0.481765,	0.482349,	0.482933,	0.483517,	0.4841,	0.484683,	0.485266,	0.485848,	0.486431,	0.487012,	0.487594,	0.488175,	0.488755,	0.489336,	0.489916,	0.490496,	0.491075,	0.491654,	0.492233,	0.492811,	0.493389,	0.493967,	0.494545,	0.495122,	0.495699,	0.496275,	0.496851,	0.497427,	0.498003,	0.498578,	0.499153,	0.499727,	0.500301,	0.500875,	0.501449,	0.502022,	0.502595,	0.503168,	0.50374,	0.504312,	0.504883,	0.505455,	0.506026,	0.506596,	0.507166,	0.507736,	0.508306,	0.508875,	0.509444,	0.510013,	0.510581,	0.511149,	0.511717,	0.512285,	0.512852,	0.513418,	0.513985,	0.514551,	0.515117,	0.515682,	0.516247,	0.516812,	0.517376,	0.51794,	0.518504,	0.519068,	0.519631,	0.520194,	0.520756,	0.521319,	0.52188,	0.522442,	0.523003,	0.523564,	0.524125,	0.524685,	0.525245,	0.525804,	0.526364,	0.526923,	0.527481,	0.52804,	0.528598,	0.529155,	0.529713,	0.53027,	0.530827,	0.531383,	0.531939,	0.532495,	0.53305,	0.533605,	0.53416,	0.534715,	0.535269,	0.535823,	0.536376,	0.536929,	0.537482,	0.538035,	0.538587,	0.539139,	0.53969,	0.540242,	0.540793,	0.541343,	0.541894,	0.542444,	0.542993,	0.543543,	0.544092,	0.54464,	0.545189,	0.545737,	0.546284,	0.546832,	0.547379,	0.547926,	0.548472,	0.549018,	0.549564,	0.55011,	0.550655,	0.5512,	0.551744,	0.552289,	0.552833,	0.553376,	0.553919,	0.554462,	0.555005,	0.555547,	0.556089,	0.556631,	0.557172,	0.557714,	0.558254,	0.558795,	0.559335,	0.559875,	0.560414,	0.560953,	0.561492,	0.562031,	0.562569,	0.563107,	0.563644,	0.564182,	0.564718,	0.565255,	0.565791,	0.566327,	0.566863,	0.567398,	0.567933,	0.568468,	0.569003,	0.569537,	0.57007,	0.570604,	0.571137,	0.57167,	0.572202,	0.572735,	0.573267,	0.573798,	0.574329,	0.57486,	0.575391,	0.575921,	0.576451,	0.576981,	0.57751,	0.578039,	0.578568,	0.579096,	0.579625,	0.580152,	0.58068,	0.581207,	0.581734,	0.58226,	0.582787,	0.583313,	0.583838,	0.584363,	0.584888,	0.585413,	0.585937,	0.586461,	0.586985,	0.587509,	0.588032,	0.588554,	0.589077,	0.589599,	0.590121,	0.590642,	0.591164,	0.591685,	0.592205,	0.592725,	0.593245,	0.593765,	0.594284,	0.594803,	0.595322,	0.595841,	0.596359,	0.596876,	0.597394,	0.597911,	0.598428,	0.598944,	0.599461,	0.599977,	0.600492,	0.601008,	0.601522,	0.602037,	0.602552,	0.603066,	0.603579,	0.604093,	0.604606,	0.605119,	0.605631,	0.606143,	0.606655,	0.607167,	0.607678,	0.608189,	0.6087,	0.60921,	0.60972,	0.61023,	0.610739,	0.611248,	0.611757,	0.612266,	0.612774,	0.613282,	0.613789,	0.614296,	0.614803,	0.61531,	0.615816,	0.616322,	0.616828,	0.617333,	0.617839,	0.618343,	0.618848,	0.619352,	0.619856,	0.620359,	0.620863,	0.621366,	0.621868,	0.62237,	0.622872,	0.623374,	0.623876,	0.624377,	0.624877,	0.625378,	0.625878,	0.626378,	0.626878,	0.627377,	0.627876,	0.628374,	0.628873,	0.629371,	0.629868,	0.630366,	0.630863,	0.63136,	0.631856,	0.632353,	0.632848,	0.633344,	0.633839,	0.634334,	0.634829,	0.635323,	0.635817,	0.636311,	0.636805,	0.637298,	0.637791,	0.638283,	0.638775,	0.639267,	0.639759,	0.64025,	0.640741,	0.641232,	0.641722,	0.642212,	0.642702,	0.643192,	0.643681,	0.64417,	0.644658,	0.645147,	0.645635,	0.646122,	0.64661,	0.647097,	0.647584,	0.64807,	0.648556,	0.649042,	0.649528,	0.650013,	0.650498,	0.650982,	0.651467,	0.651951,	0.652435,	0.652918,	0.653401,	0.653884,	0.654367,	0.654849,	0.655331,	0.655812,	0.656294,	0.656775,	0.657255,	0.657736,	0.658216,	0.658696,	0.659175,	0.659655,	0.660134,	0.660612,	0.66109,	0.661569,	0.662046,	0.662524,	0.663001,	0.663478,	0.663954,	0.66443,	0.664906,	0.665382,	0.665857,	0.666332,	0.666807,	0.667281,	0.667756,	0.668229,	0.668703,	0.669176,	0.669649,	0.670122,	0.670594,	0.671066,	0.671538,	0.672009,	0.672481,	0.672951,	0.673422,	0.673892,	0.674362,	0.674832,	0.675301,	0.67577,	0.676239,	0.676707,	0.677176,	0.677643,	0.678111,	0.678578,	0.679045,	0.679512,	0.679978,	0.680444,	0.68091,	0.681376,	0.681841,	0.682306,	0.68277,	0.683235,	0.683699,	0.684163,	0.684626,	0.685089,	0.685552,	0.686014,	0.686477,	0.686939,	0.6874,	0.687862,	0.688323,	0.688784,	0.689244,	0.689704,	0.690164,	0.690624,	0.691083,	0.691542,	0.692001,	0.692459,	0.692917,	0.693375,	0.693833,	0.69429,	0.694747,	0.695203,	0.69566,	0.696116,	0.696572,	0.697027,	0.697482,	0.697937,	0.698392,	0.698846,	0.6993,	0.699754,	0.700207,	0.70066,	0.701113,	0.701566,	0.702018,	0.70247,	0.702921,	0.703373,	0.703824,	0.704275,	0.704725,	0.705175,	0.705625,	0.706075,	0.706524,	0.706973,	0.707422,	0.707871,	0.708319,	0.708767,	0.709214,	0.709661,	0.710108,	0.710555,	0.711002,	0.711448,	0.711894,	0.712339,	0.712784,	0.713229,	0.713674,	0.714118,	0.714563,	0.715006,	0.71545,	0.715893,	0.716336,	0.716779,	0.717221,	0.717663,	0.718105,	0.718546,	0.718988,	0.719429,	0.719869,	0.72031,	0.72075,	0.721189,	0.721629,	0.722068,	0.722507,	0.722946,	0.723384,	0.723822,	0.72426,	0.724697,	0.725134,	0.725571,	0.726008,	0.726444,	0.72688,	0.727316,	0.727751,	0.728186,	0.728621,	0.729056,	0.72949,	0.729924,	0.730358,	0.730791,	0.731225,	0.731657,	0.73209,	0.732522,	0.732954,	0.733386,	0.733817,	0.734249,	0.734679,	0.73511,	0.73554,	0.73597,	0.7364,	0.73683,	0.737259,	0.737688,	0.738116,	0.738544,	0.738972,	0.7394,	0.739828,	0.740255,	0.740682,	0.741108,	0.741535,	0.741961,	0.742386,	0.742812,	0.743237,	0.743662,	0.744087,	0.744511,	0.744935,	0.745359,	0.745782,	0.746205,	0.746628,	0.747051,	0.747473,	0.747895,	0.748317,	0.748739,	0.74916,	0.749581,	0.750001,	0.750422,	0.750842,	0.751262,	0.751681,	0.7521,	0.752519,	0.752938,	0.753356,	0.753774,	0.754192,	0.75461,	0.755027,	0.755444,	0.755861,	0.756277,	0.756693,	0.757109,	0.757525,	0.75794,	0.758355,	0.75877,	0.759184,	0.759598,	0.760012,	0.760426,	0.760839,	0.761252,	0.761665,	0.762078,	0.76249,	0.762902,	0.763314,	0.763725,	0.764136,	0.764547,	0.764957,	0.765368,	0.765778,	0.766187,	0.766597,	0.767006,	0.767415,	0.767823,	0.768232,	0.76864,	0.769048,	0.769455,	0.769862,	0.770269,	0.770676,	0.771082,	0.771488,	0.771894,	0.7723,	0.772705,	0.77311,	0.773515,	0.773919,	0.774323,	0.774727,	0.775131,	0.775534,	0.775937,	0.77634,	0.776742,	0.777145,	0.777546,	0.777948,	0.77835,	0.778751,	0.779152,	0.779552,	0.779952,	0.780352,	0.780752,	0.781152,	0.781551,	0.78195,	0.782348,	0.782747,	0.783145,	0.783543,	0.78394,	0.784337,	0.784734,	0.785131,	0.785528,	0.785924,	0.78632,	0.786715,	0.787111,	0.787506,	0.787901,	0.788295,	0.788689,	0.789083,	0.789477,	0.78987,	0.790264,	0.790657,	0.791049,	0.791441,	0.791834,	0.792225,	0.792617,	0.793008,	0.793399,	0.79379,	0.79418,	0.79457,	0.79496,	0.79535,	0.795739,	0.796128,	0.796517,	0.796906,	0.797294,	0.797682,	0.79807,	0.798457,	0.798844,	0.799231,	0.799618,	0.800004,	0.80039,	0.800776,	0.801162,	0.801547,	0.801932,	0.802317,	0.802701,	0.803086,	0.803469,	0.803853,	0.804237,	0.80462,	0.805003,	0.805385,	0.805767,	0.80615,	0.806531,	0.806913,	0.807294,	0.807675,	0.808056,	0.808436,	0.808816,	0.809196,	0.809576,	0.809955,	0.810334,	0.810713,	0.811092,	0.81147,	0.811848,	0.812226,	0.812603,	0.812981,	0.813358,	0.813734,	0.814111,	0.814487,	0.814863,	0.815238,	0.815614,	0.815989,	0.816364,	0.816738,	0.817112,	0.817486,	0.81786,	0.818234,	0.818607,	0.81898,	0.819353,	0.819725,	0.820097,	0.820469,	0.820841,	0.821212,	0.821583,	0.821954,	0.822325,	0.822695,	0.823065,	0.823435,	0.823804,	0.824174,	0.824543,	0.824911,	0.82528,	0.825648,	0.826016,	0.826383,	0.826751,	0.827118,	0.827485,	0.827852,	0.828218,	0.828584,	0.82895,	0.829315,	0.829681,	0.830046,	0.83041,	0.830775,	0.831139,	0.831503,	0.831867,	0.83223,	0.832594,	0.832956,	0.833319,	0.833682,	0.834044,	0.834406,	0.834767,	0.835129,	0.83549,	0.83585,	0.836211,	0.836571,	0.836931,	0.837291,	0.837651,	0.83801,	0.838369,	0.838728,	0.839086,	0.839444,	0.839802,	0.84016,	0.840518,	0.840875,	0.841232,	0.841588,	0.841945,	0.842301,	0.842657,	0.843012,	0.843368,	0.843723,	0.844078,	0.844432,	0.844787,	0.845141,	0.845495,	0.845848,	0.846201,	0.846555,	0.846907,	0.84726,	0.847612,	0.847964,	0.848316,	0.848667,	0.849019,	0.84937,	0.84972,	0.850071,	0.850421,	0.850771,	0.851121,	0.85147,	0.851819,	0.852168,	0.852517,	0.852865,	0.853213,	0.853561,	0.853909,	0.854256,	0.854603,	0.85495,	0.855297,	0.855643,	0.855989,	0.856335,	0.856681,	0.857026,	0.857371,	0.857716,	0.85806,	0.858405,	0.858749,	0.859093,	0.859436,	0.859779,	0.860122,	0.860465,	0.860808,	0.86115,	0.861492,	0.861834,	0.862175,	0.862517,	0.862858,	0.863198,	0.863539,	0.863879,	0.864219,	0.864559,	0.864898,	0.865237,	0.865576,	0.865915,	0.866254,	0.866592,	0.86693,	0.867267,	0.867605,	0.867942,	0.868279,	0.868616,	0.868952,	0.869288,	0.869624,	0.86996,	0.870295,	0.870631,	0.870966,	0.8713,	0.871635,	0.871969,	0.872303,	0.872636,	0.87297,	0.873303,	0.873636,	0.873969,	0.874301,	0.874633,	0.874965,	0.875297,	0.875628,	0.875959,	0.87629,	0.876621,	0.876951,	0.877282,	0.877612,	0.877941,	0.878271,	0.8786,	0.878929,	0.879257,	0.879586,	0.879914,	0.880242,	0.88057,	0.880897,	0.881224,	0.881551,	0.881878,	0.882204,	0.88253,	0.882856,	0.883182,	0.883507,	0.883833,	0.884158,	0.884482,	0.884807,	0.885131,	0.885455,	0.885779,	0.886102,	0.886425,	0.886748,	0.887071,	0.887393,	0.887716,	0.888038,	0.888359,	0.888681,	0.889002,	0.889323,	0.889644,	0.889964,	0.890285,	0.890605,	0.890924,	0.891244,	0.891563,	0.891882,	0.892201,	0.89252,	0.892838,	0.893156,	0.893474,	0.893791,	0.894109,	0.894426,	0.894743,	0.895059,	0.895375,	0.895692,	0.896007,	0.896323,	0.896638,	0.896953,	0.897268,	0.897583,	0.897897,	0.898211,	0.898525,	0.898839,	0.899152,	0.899466,	0.899779,	0.900091,	0.900404,	0.900716,	0.901028,	0.90134,	0.901651,	0.901962,	0.902273,	0.902584,	0.902894,	0.903205,	0.903515,	0.903825,	0.904134,	0.904443,	0.904752,	0.905061,	0.90537,	0.905678,	0.905986,	0.906294,	0.906602,	0.906909,	0.907216,	0.907523,	0.90783,	0.908136,	0.908442,	0.908748,	0.909054,	0.909359,	0.909664,	0.909969,	0.910274,	0.910579,	0.910883,	0.911187,	0.911491,	0.911794,	0.912097,	0.912401,	0.912703,	0.913006,	0.913308,	0.91361,	0.913912,	0.914214,	0.914515,	0.914816,	0.915117,	0.915418,	0.915718,	0.916019,	0.916318,	0.916618,	0.916918,	0.917217,	0.917516,	0.917815,	0.918113,	0.918412,	0.91871,	0.919007,	0.919305,	0.919602,	0.919899,	0.920196,	0.920493,	0.920789,	0.921085,	0.921381,	0.921677,	0.921973,	0.922268,	0.922563,	0.922858,	0.923152,	0.923446,	0.92374,	0.924034,	0.924328,	0.924621,	0.924914,	0.925207,	0.9255,	0.925792,	0.926084,	0.926376,	0.926668,	0.926959,	0.927251,	0.927542,	0.927832,	0.928123,	0.928413,	0.928703,	0.928993,	0.929283,	0.929572,	0.929861,	0.93015,	0.930439,	0.930727,	0.931015,	0.931303,	0.931591,	0.931878,	0.932166,	0.932453,	0.93274,	0.933026,	0.933312,	0.933599,	0.933884,	0.93417,	0.934455,	0.934741,	0.935026,	0.93531,	0.935595,	0.935879,	0.936163,	0.936447,	0.93673,	0.937014,	0.937297,	0.93758,	0.937862,	0.938145,	0.938427,	0.938709,	0.938991,	0.939272,	0.939553,	0.939834,	0.940115,	0.940396,	0.940676,	0.940956,	0.941236,	0.941516,	0.941795,	0.942074,	0.942353,	0.942632,	0.94291,	0.943189,	0.943467,	0.943745,	0.944022,	0.9443,	0.944577,	0.944854,	0.94513,	0.945407,	0.945683,	0.945959,	0.946235,	0.94651,	0.946786,	0.947061,	0.947336,	0.94761,	0.947885,	0.948159,	0.948433,	0.948706,	0.94898,	0.949253,	0.949526,	0.949799,	0.950072,	0.950344,	0.950616,	0.950888,	0.95116,	0.951431,	0.951703,	0.951974,	0.952244,	0.952515,	0.952785,	0.953055,	0.953325,	0.953595,	0.953864,	0.954134,	0.954403,	0.954671,	0.95494,	0.955208,	0.955476,	0.955744,	0.956012,	0.956279,	0.956546,	0.956813,	0.95708,	0.957347,	0.957613,	0.957879,	0.958145,	0.958411,	0.958676,	0.958941,	0.959206,	0.959471,	0.959735,	0.96,	0.960264,	0.960528,	0.960791,	0.961055,	0.961318,	0.961581,	0.961844,	0.962106,	0.962368,	0.96263,	0.962892,	0.963154,	0.963415,	0.963677,	0.963938,	0.964198,	0.964459,	0.964719,	0.964979,	0.965239,	0.965499,	0.965758,	0.966017,	0.966276,	0.966535,	0.966794,	0.967052,	0.96731,	0.967568,	0.967826,	0.968083,	0.96834,	0.968597,	0.968854,	0.969111,	0.969367,	0.969623,	0.969879,	0.970135,	0.97039,	0.970646,	0.970901,	0.971155,	0.97141,	0.971664,	0.971919,	0.972173,	0.972426,	0.97268,	0.972933,	0.973186,	0.973439,	0.973692,	0.973944,	0.974196,	0.974448,	0.9747,	0.974952,	0.975203,	0.975454,	0.975705,	0.975956,	0.976206,	0.976457,	0.976707,	0.976956,	0.977206,	0.977455,	0.977705,	0.977954,	0.978202,	0.978451,	0.978699,	0.978947,	0.979195,	0.979443,	0.97969,	0.979938,	0.980185,	0.980431,	0.980678,	0.980924,	0.981171,	0.981417,	0.981662,	0.981908,	0.982153,	0.982398,	0.982643,	0.982888,	0.983132,	0.983377,	0.983621,	0.983864,	0.984108,	0.984351,	0.984595,	0.984838,	0.98508,	0.985323,	0.985565,	0.985807,	0.986049,	0.986291,	0.986532,	0.986774,	0.987015,	0.987256,	0.987496,	0.987737,	0.987977,	0.988217,	0.988457,	0.988696,	0.988936,	0.989175,	0.989414,	0.989653,	0.989891,	0.990129,	0.990367,	0.990605,	0.990843,	0.991081,	0.991318,	0.991555,	0.991792,	0.992028,	0.992265,	0.992501,	0.992737,	0.992973,	0.993208,	0.993444,	0.993679,	0.993914,	0.994149,	0.994383,	0.994617,	0.994852,	0.995085,	0.995319,	0.995553,	0.995786,	0.996019,	0.996252,	0.996485,	0.996717,	0.996949,	0.997181,	0.997413,	0.997645,	0.997876,	0.998107,	0.998338,	0.998569,	0.9988,	0.99903,	0.99926,	0.99949,	0.99972,	0.99995,	1.00018,	1.00041,	1.00064,	1.00087,	1.00109,	1.00132,	1.00155,	1.00178,	1.00201,	1.00223,	1.00246,	1.00269,	1.00292,	1.00314,	1.00337,	1.00359,	1.00382,	1.00405,	1.00427,	1.0045,	1.00472,	1.00495,	1.00517,	1.0054,	1.00562,	1.00585,	1.00607,	1.00629,	1.00652,	1.00674,	1.00696,	1.00719,	1.00741,	1.00763,	1.00785,	1.00808,	1.0083,	1.00852,	1.00874,	1.00896,	1.00918,	1.00941,	1.00963,	1.00985,	1.01007,	1.01029,	1.01051,	1.01073,	1.01095,	1.01117,	1.01139,	1.0116,	1.01182,	1.01204,	1.01226,	1.01248,	1.0127,	1.01291,	1.01313,	1.01335,	1.01357,	1.01378,	1.014,	1.01422,	1.01443,	1.01465,	1.01486,	1.01508,	1.0153,	1.01551,	1.01573,	1.01594,	1.01616,	1.01637,	1.01658,	1.0168,	1.01701,	1.01723,	1.01744,	1.01765,	1.01787,	1.01808,	1.01829,	1.0185,	1.01872,	1.01893,	1.01914,	1.01935,	1.01956,	1.01978,	1.01999,	1.0202,	1.02041,	1.02062,	1.02083,	1.02104,	1.02125,	1.02146,	1.02167,	1.02188,	1.02209,	1.0223,	1.02251,	1.02271,	1.02292,	1.02313,	1.02334,	1.02355,	1.02375,	1.02396,	1.02417,	1.02438,	1.02458,	1.02479,	1.025,	1.0252,	1.02541,	1.02561,	1.02582,	1.02602,	1.02623,	1.02644,	1.02664,	1.02684,	1.02705,	1.02725,	1.02746,	1.02766,	1.02787,	1.02807,	1.02827,	1.02848,	1.02868,	1.02888,	1.02908,	1.02929,	1.02949,	1.02969,	1.02989,	1.03009,	1.03029,	1.0305,	1.0307,	1.0309,	1.0311,	1.0313,	1.0315,	1.0317,	1.0319,	1.0321,	1.0323,	1.0325,	1.0327,	1.0329,	1.03309,	1.03329,	1.03349,	1.03369,	1.03389,	1.03408,	1.03428,	1.03448,	1.03468,	1.03487,	1.03507,	1.03527,	1.03546,	1.03566,	1.03586,	1.03605,	1.03625,	1.03644,	1.03664,	1.03683,	1.03703,	1.03722,	1.03742,	1.03761,	1.03781,	1.038,	1.03819,	1.03839,	1.03858,	1.03877,	1.03897,	1.03916,	1.03935,	1.03954,	1.03974,	1.03993,	1.04012,	1.04031,	1.0405,	1.0407,	1.04089,	1.04108,	1.04127,	1.04146,	1.04165,	1.04184,	1.04203,	1.04222,	1.04241,	1.0426,	1.04279,	1.04298,	1.04317,	1.04335,	1.04354,	1.04373,	1.04392,	1.04411,	1.04429,	1.04448,	1.04467,	1.04486,	1.04504,	1.04523,	1.04542,	1.0456,	1.04579,	1.04598,	1.04616,	1.04635,	1.04653,	1.04672,	1.0469,	1.04709,	1.04727,	1.04746,	1.04764,	1.04783,	1.04801,	1.04819,	1.04838,	1.04856,	1.04875,	1.04893,	1.04911,	1.04929,	1.04948,	1.04966,	1.04984,	1.05002,	1.05021,	1.05039,	1.05057,	1.05075,	1.05093,	1.05111,	1.05129,	1.05147,	1.05165,	1.05183,	1.05201,	1.05219,	1.05237,	1.05255,	1.05273,	1.05291,	1.05309,	1.05327,	1.05345,	1.05363,	1.0538,	1.05398,	1.05416,	1.05434,	1.05452,	1.05469,	1.05487,	1.05505,	1.05522,	1.0554,	1.05558,	1.05575,	1.05593,	1.0561,	1.05628,	1.05646,	1.05663,	1.05681,	1.05698,	1.05716,	1.05733,	1.05751,	1.05768,	1.05785,	1.05803,	1.0582,	1.05837,	1.05855,	1.05872,	1.05889,	1.05907,	1.05924,	1.05941,	1.05958,	1.05976,	1.05993,	1.0601,	1.06027,	1.06044,	1.06061,	1.06079,	1.06096,	1.06113,	1.0613,	1.06147,	1.06164,	1.06181,	1.06198,	1.06215,	1.06232,	1.06249,	1.06266,	1.06282,	1.06299,	1.06316,	1.06333,	1.0635,	1.06367,	1.06383,	1.064,	1.06417,	1.06434,	1.0645,	1.06467,	1.06484,	1.06501,	1.06517,	1.06534,	1.0655,	1.06567,	1.06584,	1.066,	1.06617,	1.06633,	1.0665,	1.06666,	1.06683,	1.06699,	1.06716,	1.06732,	1.06748,	1.06765,	1.06781,	1.06798,	1.06814,	1.0683,	1.06846,	1.06863,	1.06879,	1.06895,	1.06912,	1.06928,	1.06944,	1.0696,	1.06976,	1.06992,	1.07009,	1.07025,	1.07041,	1.07057,	1.07073,	1.07089,	1.07105,	1.07121,	1.07137,	1.07153,	1.07169,	1.07185,	1.07201,	1.07217,	1.07233,	1.07248,	1.07264,	1.0728,	1.07296,	1.07312,	1.07328,	1.07343,	1.07359,	1.07375,	1.07391,	1.07406,	1.07422,	1.07438,	1.07453,	1.07469,	1.07484,	1.075,	1.07516,	1.07531,	1.07547,	1.07562,	1.07578,	1.07593,	1.07609,	1.07624,	1.0764,	1.07655,	1.07671,	1.07686,	1.07701,	1.07717,	1.07732,	1.07747,	1.07763,	1.07778,	1.07793,	1.07809,	1.07824,	1.07839,	1.07854,	1.07869,	1.07885,	1.079,	1.07915,	1.0793,	1.07945,	1.0796,	1.07975,	1.0799,	1.08006,	1.08021,	1.08036,	1.08051,	1.08066,	1.0808,	1.08095,	1.0811,	1.08125,	1.0814,	1.08155,	1.0817,	1.08185,	1.082,	1.08214,	1.08229,	1.08244,	1.08259,	1.08274,	1.08288,	1.08303,	1.08318,	1.08332,	1.08347,	1.08362,	1.08376,	1.08391,	1.08406,	1.0842,	1.08435,	1.08449,	1.08464,	1.08478,	1.08493,	1.08507,	1.08522,	1.08536,	1.08551,	1.08565,	1.0858,	1.08594,	1.08608,	1.08623,	1.08637,	1.08651,	1.08666,	1.0868,	1.08694,	1.08709,	1.08723,	1.08737,	1.08751,	1.08765,	1.0878,	1.08794,	1.08808,	1.08822,	1.08836,	1.0885,	1.08864,	1.08878,	1.08892,	1.08907,	1.08921,	1.08935,	1.08949,	1.08963,	1.08976,	1.0899,	1.09004,	1.09018,	1.09032,	1.09046,	1.0906,	1.09074,	1.09088,	1.09101,	1.09115,	1.09129,	1.09143,	1.09156,	1.0917,	1.09184,	1.09198,	1.09211,	1.09225,	1.09239,	1.09252,	1.09266,	1.0928,	1.09293,	1.09307,	1.0932,	1.09334,	1.09347,	1.09361,	1.09374,	1.09388,	1.09401,	1.09415,	1.09428,	1.09442,	1.09455,	1.09468,	1.09482,	1.09495,	1.09509,	1.09522,	1.09535,	1.09548,	1.09562,	1.09575,	1.09588,	1.09601,	1.09615,	1.09628,	1.09641,	1.09654,	1.09667,	1.09681,	1.09694,	1.09707,	1.0972,	1.09733,	1.09746,	1.09759,	1.09772,	1.09785,	1.09798,	1.09811,	1.09824,	1.09837,	1.0985,	1.09863,	1.09876,	1.09889,	1.09902,	1.09914,	1.09927,	1.0994,	1.09953,	1.09966,	1.09979,	1.09991,	1.10004,	1.10017,	1.1003,	1.10042,	1.10055,	1.10068,	1.1008,	1.10093,	1.10106,	1.10118,	1.10131,	1.10143,	1.10156,	1.10169,	1.10181,	1.10194,	1.10206,	1.10219,	1.10231,	1.10244,	1.10256,	1.10268,	1.10281,	1.10293,	1.10306,	1.10318,	1.1033,	1.10343,	1.10355,	1.10367,	1.1038,	1.10392,	1.10404,	1.10417,	1.10429,	1.10441,	1.10453,	1.10465,	1.10478,	1.1049,	1.10502,	1.10514,	1.10526,	1.10538,	1.1055,	1.10563,	1.10575,	1.10587,	1.10599,	1.10611,	1.10623,	1.10635,	1.10647,	1.10659,	1.10671,	1.10683,	1.10694,	1.10706,	1.10718,	1.1073,	1.10742,	1.10754,	1.10766,	1.10777,	1.10789,	1.10801,	1.10813,	1.10825,	1.10836,	1.10848,	1.1086,	1.10871,	1.10883,	1.10895,	1.10906,	1.10918,	1.1093,	1.10941,	1.10953,	1.10965,	1.10976,	1.10988,	1.10999,	1.11011,	1.11022,	1.11034,	1.11045,	1.11057,	1.11068,	1.1108,	1.11091,	1.11102,	1.11114,	1.11125,	1.11136,	1.11148,	1.11159,	1.1117,	1.11182,	1.11193,	1.11204,	1.11216,	1.11227,	1.11238,	1.11249,	1.11261,	1.11272,	1.11283,	1.11294,	1.11305,	1.11316,	1.11327,	1.11339,	1.1135,	1.11361,	1.11372,	1.11383,	1.11394,	1.11405,	1.11416,	1.11427,	1.11438,	1.11449,	1.1146,	1.11471,	1.11482,	1.11493,	1.11503,	1.11514,	1.11525,	1.11536,	1.11547,	1.11558,	1.11569,	1.11579,	1.1159,	1.11601,	1.11612,	1.11622,	1.11633,	1.11644,	1.11655,	1.11665,	1.11676,	1.11687,	1.11697,	1.11708,	1.11718,	1.11729,	1.1174,	1.1175,	1.11761,	1.11771,	1.11782,	1.11792,	1.11803,	1.11813,	1.11824,	1.11834,	1.11845,	1.11855,	1.11866,	1.11876,	1.11886,	1.11897,	1.11907,	1.11917,	1.11928,	1.11938,	1.11948,	1.11959,	1.11969,	1.11979,	1.1199,	1.12,	1.1201,	1.1202,	1.1203,	1.12041,	1.12051,	1.12061,	1.12071,	1.12081,	1.12091,	1.12101,	1.12112,	1.12122,	1.12132,	1.12142,	1.12152,	1.12162,	1.12172,	1.12182,	1.12192,	1.12202,	1.12212,	1.12222,	1.12232,	1.12241,	1.12251,	1.12261,	1.12271,	1.12281,	1.12291,	1.12301,	1.12311,	1.1232,	1.1233,	1.1234,	1.1235,	1.12359,	1.12369,	1.12379,	1.12389,	1.12398,	1.12408,	1.12418,	1.12427,	1.12437,	1.12447,	1.12456,	1.12466,	1.12475,	1.12485,	1.12495,	1.12504,	1.12514,	1.12523,	1.12533,	1.12542,	1.12552,	1.12561,	1.12571,	1.1258,	1.1259,	1.12599,	1.12608,	1.12618,	1.12627,	1.12637,	1.12646,	1.12655,	1.12665,	1.12674,	1.12683,	1.12692,	1.12702,	1.12711,	1.1272,	1.12729,	1.12739,	1.12748,	1.12757,	1.12766,	1.12776,	1.12785,	1.12794,	1.12803,	1.12812,	1.12821,	1.1283,	1.12839,	1.12848,	1.12857,	1.12867,	1.12876,	1.12885,	1.12894,	1.12903,	1.12912,	1.12921,	1.12929,	1.12938,	1.12947,	1.12956,	1.12965,	1.12974,	1.12983,	1.12992,	1.13001,	1.1301,	1.13018,	1.13027,	1.13036,	1.13045,	1.13054,	1.13062,	1.13071,	1.1308,	1.13089,	1.13097,	1.13106,	1.13115,	1.13123,	1.13132,	1.13141,	1.13149,	1.13158,	1.13166,	1.13175,	1.13184,	1.13192,	1.13201,	1.13209,	1.13218,	1.13226,	1.13235,	1.13243,	1.13252,	1.1326,	1.13269,	1.13277,	1.13286,	1.13294,	1.13303,	1.13311,	1.13319,	1.13328,	1.13336,	1.13344,	1.13353,	1.13361,	1.13369,	1.13378,	1.13386,	1.13394,	1.13403,	1.13411,	1.13419,	1.13427,	1.13435,	1.13444,	1.13452,	1.1346,	1.13468,	1.13476,	1.13484,	1.13493,	1.13501,	1.13509,	1.13517,	1.13525,	1.13533,	1.13541,	1.13549,	1.13557,	1.13565,	1.13573,	1.13581,	1.13589,	1.13597,	1.13605,	1.13613,	1.13621,	1.13629,	1.13637,	1.13645,	1.13653,	1.1366,	1.13668,	1.13676,	1.13684,	1.13692,	1.137,	1.13707,	1.13715,	1.13723,	1.13731,	1.13739,	1.13746,	1.13754,	1.13762,	1.13769,	1.13777,	1.13785,	1.13792,	1.138,	1.13808,	1.13815,	1.13823,	1.13831,	1.13838,	1.13846,	1.13853,	1.13861,	1.13868,	1.13876,	1.13884,	1.13891,	1.13899,	1.13906,	1.13914,	1.13921,	1.13928,	1.13936,	1.13943,	1.13951,	1.13958,	1.13966,	1.13973,	1.1398,	1.13988,	1.13995,	1.14002,	1.1401,	1.14017,	1.14024,	1.14032,	1.14039,	1.14046,	1.14053,	1.14061,	1.14068,	1.14075,	1.14082,	1.14089,	1.14097,	1.14104,	1.14111,	1.14118,	1.14125,	1.14132,	1.1414,	1.14147,	1.14154,	1.14161,	1.14168,	1.14175,	1.14182,	1.14189,	1.14196,	1.14203,	1.1421,	1.14217,	1.14224,	1.14231,	1.14238,	1.14245,	1.14252,	1.14259,	1.14266,	1.14273,	1.14279,	1.14286,	1.14293,	1.143,	1.14307,	1.14314,	1.1432,	1.14327,	1.14334,	1.14341,	1.14348,	1.14354,	1.14361,	1.14368,	1.14375,	1.14381,	1.14388,	1.14395,	1.14401,	1.14408,	1.14415,	1.14421,	1.14428,	1.14435,	1.14441,	1.14448,	1.14454,	1.14461,	1.14468,	1.14474,	1.14481,	1.14487,	1.14494,	1.145,	1.14507,	1.14513,	1.1452,	1.14526,	1.14533,	1.14539,	1.14546,	1.14552,	1.14558,	1.14565,	1.14571,	1.14578,	1.14584,	1.1459,	1.14597,	1.14603,	1.14609,	1.14616,	1.14622,	1.14628,	1.14635,	1.14641,	1.14647,	1.14653,	1.1466,	1.14666,	1.14672,	1.14678,	1.14685,	1.14691,	1.14697,	1.14703,	1.14709,	1.14715,	1.14721,	1.14728,	1.14734,	1.1474,	1.14746,	1.14752,	1.14758,	1.14764,	1.1477,	1.14776,	1.14782,	1.14788,	1.14794,	1.148,	1.14806,	1.14812,	1.14818,	1.14824,	1.1483,	1.14836,	1.14842,	1.14848,	1.14854,	1.1486,	1.14865,	1.14871,	1.14877,	1.14883,	1.14889,	1.14895,	1.149,	1.14906,	1.14912,	1.14918,	1.14924,	1.14929,	1.14935,	1.14941,	1.14947,	1.14952,	1.14958,	1.14964,	1.14969,	1.14975,	1.14981,	1.14986,	1.14992,	1.14998,	1.15003,	1.15009,	1.15014,	1.1502,	1.15026,	1.15031,	1.15037,	1.15042,	1.15048,	1.15053,	1.15059,	1.15064,	1.1507,	1.15075,	1.15081,	1.15086,	1.15092,	1.15097,	1.15103,	1.15108,	1.15114,	1.15119,	1.15124,	1.1513,	1.15135,	1.1514,	1.15146,	1.15151,	1.15156,	1.15162,	1.15167,	1.15172,	1.15178,	1.15183,	1.15188,	1.15194,	1.15199,	1.15204,	1.15209,	1.15214,	1.1522,	1.15225,	1.1523,	1.15235,	1.1524,	1.15246,	1.15251,	1.15256,	1.15261,	1.15266,	1.15271,	1.15276,	1.15281,	1.15287,	1.15292,	1.15297,	1.15302,	1.15307,	1.15312,	1.15317,	1.15322,	1.15327,	1.15332,	1.15337,	1.15342,	1.15347,	1.15352,	1.15357,	1.15362,	1.15366,	1.15371,	1.15376,	1.15381,	1.15386,	1.15391,	1.15396,	1.15401,	1.15406,	1.1541,	1.15415,	1.1542,	1.15425,	1.1543,	1.15434,	1.15439,	1.15444,	1.15449,	1.15453,	1.15458,	1.15463,	1.15468,	1.15472,	1.15477,	1.15482,	1.15486,	1.15491,	1.15496,	1.155,	1.15505,	1.1551,	1.15514,	1.15519,	1.15523,	1.15528,	1.15533,	1.15537,	1.15542,	1.15546,	1.15551,	1.15555,	1.1556,	1.15564,	1.15569,	1.15573,	1.15578,	1.15582,	1.15587,	1.15591,	1.15596,	1.156,	1.15605,	1.15609,	1.15613,	1.15618,	1.15622,	1.15627,	1.15631,	1.15635,	1.1564,	1.15644,	1.15648,	1.15653,	1.15657,	1.15661,	1.15666,	1.1567,	1.15674,	1.15678,	1.15683,	1.15687,	1.15691,	1.15695,	1.157,	1.15704,	1.15708,	1.15712,	1.15716,	1.15721,	1.15725,	1.15729,	1.15733,	1.15737,	1.15741,	1.15746,	1.1575,	1.15754,	1.15758,	1.15762,	1.15766,	1.1577,	1.15774,	1.15778,	1.15782,	1.15786,	1.1579,	1.15794,	1.15798,	1.15802,	1.15806,	1.1581,	1.15814,	1.15818,	1.15822,	1.15826,	1.1583,	1.15834,	1.15838,	1.15842,	1.15846,	1.15849,	1.15853,	1.15857,	1.15861,	1.15865,	1.15869,	1.15873,	1.15876,	1.1588,	1.15884,	1.15888,	1.15892,	1.15895,	1.15899,	1.15903,	1.15907,	1.1591,	1.15914,	1.15918,	1.15922,	1.15925,	1.15929,	1.15933,	1.15936,	1.1594,	1.15944,	1.15947,	1.15951,	1.15955,	1.15958,	1.15962,	1.15965,	1.15969,	1.15973,	1.15976,	1.1598,	1.15983,	1.15987,	1.1599,	1.15994,	1.15998,	1.16001,	1.16005,	1.16008,	1.16012,	1.16015,	1.16019,	1.16022,	1.16025,	1.16029,	1.16032,	1.16036,	1.16039,	1.16043,	1.16046,	1.16049,	1.16053,	1.16056,	1.1606,	1.16063,	1.16066,	1.1607,	1.16073,	1.16076,	1.1608,	1.16083,	1.16086,	1.1609,	1.16093,	1.16096,	1.16099,	1.16103,	1.16106,	1.16109,	1.16112,	1.16116,	1.16119,	1.16122,	1.16125,	1.16128,	1.16132,	1.16135,	1.16138,	1.16141,	1.16144,	1.16147,	1.16151,	1.16154,	1.16157,	1.1616,	1.16163,	1.16166,	1.16169,	1.16172,	1.16175,	1.16178,	1.16182,	1.16185,	1.16188,	1.16191,	1.16194,	1.16197,	1.162,	1.16203,	1.16206,	1.16209,	1.16212,	1.16215,	1.16218,	1.16221,	1.16223,	1.16226,	1.16229,	1.16232,	1.16235,	1.16238,	1.16241,	1.16244,	1.16247,	1.1625,	1.16252,	1.16255,	1.16258,	1.16261,	1.16264,	1.16267,	1.16269,	1.16272,	1.16275,	1.16278,	1.16281,	1.16283,	1.16286,	1.16289,	1.16292,	1.16294,	1.16297,	1.163,	1.16302,	1.16305,	1.16308,	1.16311,	1.16313,	1.16316,	1.16319,	1.16321,	1.16324,	1.16327,	1.16329,	1.16332,	1.16334,	1.16337,	1.1634,	1.16342,	1.16345,	1.16347,	1.1635,	1.16352,	1.16355,	1.16358,	1.1636,	1.16363,	1.16365,	1.16368,	1.1637,	1.16373,	1.16375,	1.16378,	1.1638,	1.16383,	1.16385,	1.16388,	1.1639,	1.16392,	1.16395,	1.16397,	1.164,	1.16402,	1.16405,	1.16407,	1.16409,	1.16412,	1.16414,	1.16416,	1.16419,	1.16421,	1.16423,	1.16426,	1.16428,	1.1643,	1.16433,	1.16435,	1.16437,	1.1644,	1.16442,	1.16444,	1.16446,	1.16449,	1.16451,	1.16453,	1.16455,	1.16458,	1.1646,	1.16462,	1.16464,	1.16466,	1.16469,	1.16471,	1.16473,	1.16475,	1.16477,	1.16479,	1.16482,	1.16484,	1.16486,	1.16488,	1.1649,	1.16492,	1.16494,	1.16496,	1.16498,	1.16501,	1.16503,	1.16505,	1.16507,	1.16509,	1.16511,	1.16513,	1.16515,	1.16517,	1.16519,	1.16521,	1.16523,	1.16525,	1.16527,	1.16529,	1.16531,	1.16533,	1.16535,	1.16537,	1.16539,	1.16541,	1.16542,	1.16544,	1.16546,	1.16548,	1.1655,	1.16552,	1.16554,	1.16556,	1.16558,	1.16559,	1.16561,	1.16563,	1.16565,	1.16567,	1.16569,	1.1657,	1.16572,	1.16574,	1.16576,	1.16578,	1.16579,	1.16581,	1.16583,	1.16585,	1.16586,	1.16588,	1.1659,	1.16592,	1.16593,	1.16595,	1.16597,	1.16599,	1.166,	1.16602,	1.16604,	1.16605,	1.16607,	1.16609,	1.1661,	1.16612,	1.16614,	1.16615,	1.16617,	1.16618,	1.1662,	1.16622,	1.16623,	1.16625,	1.16626,	1.16628,	1.1663,	1.16631,	1.16633,	1.16634,	1.16636,	1.16637,	1.16639,	1.1664,	1.16642,	1.16643,	1.16645,	1.16646,	1.16648,	1.16649,	1.16651,	1.16652,	1.16654,	1.16655,	1.16657,	1.16658,	1.1666,	1.16661,	1.16662,	1.16664,	1.16665,	1.16667,	1.16668,	1.16669,	1.16671,	1.16672,	1.16674,	1.16675,	1.16676,	1.16678,	1.16679,	1.1668,	1.16682,	1.16683,	1.16684,	1.16686,	1.16687,	1.16688,	1.1669,	1.16691,	1.16692,	1.16693,	1.16695,	1.16696,	1.16697,	1.16698,	1.167,	1.16701,	1.16702,	1.16703,	1.16704,	1.16706,	1.16707,	1.16708,	1.16709,	1.1671,	1.16712,	1.16713,	1.16714,	1.16715,	1.16716,	1.16717,	1.16718,	1.1672,	1.16721,	1.16722,	1.16723,	1.16724,	1.16725,	1.16726,	1.16727,	1.16728,	1.16729,	1.16731,	1.16732,	1.16733,	1.16734,	1.16735,	1.16736,	1.16737,	1.16738,	1.16739,	1.1674,	1.16741,	1.16742,	1.16743,	1.16744,	1.16745,	1.16746,	1.16747,	1.16748,	1.16749,	1.1675,	1.1675,	1.16751,	1.16752,	1.16753,	1.16754,	1.16755,	1.16756,	1.16757,	1.16758,	1.16759,	1.1676,	1.1676,	1.16761,	1.16762,	1.16763,	1.16764,	1.16765,	1.16765,	1.16766,	1.16767,	1.16768,	1.16769,	1.1677,	1.1677,	1.16771,	1.16772,	1.16773,	1.16774,	1.16774,	1.16775,	1.16776,	1.16777,	1.16777,	1.16778,	1.16779,	1.16779,	1.1678,	1.16781,	1.16782,	1.16782,	1.16783,	1.16784,	1.16784,	1.16785,	1.16786,	1.16786,	1.16787,	1.16788,	1.16788,	1.16789,	1.1679,	1.1679,	1.16791,	1.16792,	1.16792,	1.16793,	1.16793,	1.16794,	1.16795,	1.16795,	1.16796,	1.16796,	1.16797,	1.16797,	1.16798,	1.16798,	1.16799,	1.168,	1.168,	1.16801,	1.16801,	1.16802,	1.16802,	1.16803,	1.16803,	1.16804,	1.16804,	1.16805,	1.16805,	1.16806,	1.16806,	1.16807,	1.16807,	1.16807,	1.16808,	1.16808,	1.16809,	1.16809,	1.1681,	1.1681,	1.1681,	1.16811,	1.16811,	1.16812,	1.16812,	1.16812,	1.16813,	1.16813,	1.16813,	1.16814,	1.16814,	1.16814,	1.16815,	1.16815,	1.16816,	1.16816,	1.16816,	1.16816,	1.16817,	1.16817,	1.16817,	1.16818,	1.16818,	1.16818,	1.16818,	1.16819,	1.16819,	1.16819,	1.1682,	1.1682,	1.1682,	1.1682,	1.16821,	1.16821,	1.16821,	1.16821,	1.16821,	1.16822,	1.16822,	1.16822,	1.16822,	1.16822,	1.16823,	1.16823,	1.16823,	1.16823,	1.16823,	1.16823,	1.16823,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16825,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16824,	1.16823,	1.16823,	1.16823,	1.16823,	1.16823,	1.16823,	1.16822,	1.16822,	1.16822,	1.16822,	1.16822,	1.16822,	1.16821,	1.16821,	1.16821,	1.16821,	1.16821,	1.1682,	1.1682,	1.1682,	1.1682,	1.16819,	1.16819,	1.16819,	1.16819,	1.16818,	1.16818,	1.16818,	1.16818,	1.16817,	1.16817,	1.16817,	1.16816,	1.16816,	1.16816,	1.16815,	1.16815,	1.16815,	1.16815,	1.16814,	1.16814,	1.16814,	1.16813,	1.16813,	1.16812,	1.16812,	1.16812,	1.16811,	1.16811,	1.16811,	1.1681,	1.1681,	1.1681,	1.16809,	1.16809,	1.16808,	1.16808,	1.16807,	1.16807,	1.16807,	1.16806,	1.16806,	1.16805,	1.16805,	1.16804,	1.16804,	1.16804,	1.16803,	1.16803,	1.16802,	1.16802,	1.16801,	1.16801,	1.168,	1.168,	1.16799,	1.16799,	1.16798,	1.16798,	1.16797,	1.16797,	1.16796,	1.16796,	1.16795,	1.16795,	1.16794,	1.16794,	1.16793,	1.16793,	1.16792,	1.16791,	1.16791,	1.1679,	1.1679,	1.16789,	1.16789,	1.16788,	1.16787,	1.16787,	1.16786,	1.16786,	1.16785,	1.16784,	1.16784,	1.16783,	1.16783,	1.16782,	1.16781,	1.16781,	1.1678,	1.16779,	1.16779,	1.16778,	1.16777,	1.16777,	1.16776,	1.16775,	1.16775,	1.16774,	1.16773,	1.16773,	1.16772,	1.16771,	1.16771,	1.1677,	1.16769,	1.16768,	1.16768,	1.16767,	1.16766,	1.16766,	1.16765,	1.16764,	1.16763,	1.16763,	1.16762,	1.16761,	1.1676,	1.1676,	1.16759,	1.16758,	1.16757,	1.16756,	1.16756,	1.16755,	1.16754,	1.16753,	1.16753,	1.16752,	1.16751,	1.1675,	1.16749,	1.16748,	1.16748,	1.16747,	1.16746,	1.16745,	1.16744,	1.16743,	1.16743,	1.16742,	1.16741,	1.1674,	1.16739,	1.16738,	1.16737,	1.16737,	1.16736,	1.16735,	1.16734,	1.16733,	1.16732,	1.16731,	1.1673,	1.16729,	1.16729,	1.16728,	1.16727,	1.16726,	1.16725,	1.16724,	1.16723,	1.16722,	1.16721,	1.1672,	1.16719,	1.16718,	1.16717,	1.16716,	1.16715,	1.16714,	1.16713,	1.16712,	1.16711,	1.16711,	1.1671,	1.16709,	1.16708,	1.16707,	1.16706,	1.16705,	1.16704,	1.16703,	1.16702,	1.167,	1.16699,	1.16698,	1.16697,	1.16696,	1.16695,	1.16694,	1.16693,	1.16692,	1.16691,	1.1669,	1.16689,	1.16688,	1.16687,	1.16686,	1.16685,	1.16684,	1.16683,	1.16682,	1.1668,	1.16679,	1.16678,	1.16677,	1.16676,	1.16675,	1.16674,	1.16673,	1.16672,	1.1667,	1.16669,	1.16668,	1.16667,	1.16666,	1.16665,	1.16664,	1.16663,	1.16661,	1.1666,	1.16659,	1.16658,	1.16657,	1.16656,	1.16654,	1.16653,	1.16652,	1.16651,	1.1665,	1.16648,	1.16647,	1.16646,	1.16645,	1.16644,	1.16643,	1.16641,	1.1664,	1.16639,	1.16638,	1.16636,	1.16635,	1.16634,	1.16633,	1.16632,	1.1663,	1.16629,	1.16628,	1.16627,	1.16625,	1.16624,	1.16623,	1.16622,	1.1662,	1.16619,	1.16618,	1.16616,	1.16615,	1.16614,	1.16613,	1.16611,	1.1661,	1.16609,	1.16607,	1.16606,	1.16605,	1.16604,	1.16602,	1.16601,	1.166,	1.16598,	1.16597,	1.16596,	1.16594,	1.16593,	1.16592,	1.1659,	1.16589,	1.16588,	1.16586,	1.16585,	1.16584,	1.16582,	1.16581,	1.16579,	1.16578,	1.16577,	1.16575,	1.16574,	1.16573,	1.16571,	1.1657,	1.16568,	1.16567,	1.16566,	1.16564,	1.16563,	1.16561,	1.1656,	1.16559,	1.16557,	1.16556,	1.16554,	1.16553,	1.16551,	1.1655,	1.16549,	1.16547,	1.16546,	1.16544,	1.16543,	1.16541,	1.1654,	1.16538,	1.16537,	1.16536,	1.16534,	1.16533,	1.16531,	1.1653,	1.16528,	1.16527,	1.16525,	1.16524,	1.16522,	1.16521,	1.16519,	1.16518,	1.16516,	1.16515,	1.16513,	1.16512,	1.1651,	1.16509,	1.16507,	1.16506,	1.16504,	1.16503,	1.16501,	1.165,	1.16498,	1.16497,	1.16495,	1.16494,	1.16492,	1.1649,	1.16489,	1.16487,	1.16486,	1.16484,	1.16483,	1.16481,	1.1648,	1.16478,	1.16476,	1.16475,	1.16473,	1.16472,	1.1647,	1.16468,	1.16467,	1.16465,	1.16464,	1.16462,	1.16461,	1.16459,	1.16457,	1.16456,	1.16454,	1.16452,	1.16451,	1.16449,	1.16448,	1.16446,	1.16444,	1.16443,	1.16441,	1.16439,	1.16438,	1.16436,	1.16435,	1.16433,	1.16431,	1.1643,	1.16428,	1.16426,	1.16425,	1.16423,	1.16421,	1.1642,	1.16418,	1.16416,	1.16415,	1.16413,	1.16411,	1.1641,	1.16408,	1.16406,	1.16405,	1.16403,	1.16401,	1.164,	1.16398,	1.16396,	1.16394,	1.16393,	1.16391,	1.16389,	1.16388,	1.16386,	1.16384,	1.16382,	1.16381,	1.16379,	1.16377,	1.16376,	1.16374,	1.16372,	1.1637,	1.16369,	1.16367,	1.16365,	1.16363,	1.16362,	1.1636,	1.16358,	1.16356,	1.16355,	1.16353,	1.16351,	1.16349,	1.16347,	1.16346,	1.16344,	1.16342,	1.1634,	1.16339,	1.16337,	1.16335,	1.16333,	1.16331,	1.1633,	1.16328,	1.16326,	1.16324,	1.16322,	1.16321,	1.16319,	1.16317,	1.16315,	1.16313,	1.16312,	1.1631,	1.16308,	1.16306,	1.16304,	1.16303,	1.16301,	1.16299,	1.16297,	1.16295,	1.16293,	1.16292,	1.1629,	1.16288,	1.16286,	1.16284,	1.16282,	1.1628,	1.16279,	1.16277,	1.16275,	1.16273,	1.16271,	1.16269,	1.16267,	1.16266,	1.16264,	1.16262,	1.1626,	1.16258,	1.16256,	1.16254,	1.16252,	1.1625,	1.16249,	1.16247,	1.16245,	1.16243,	1.16241,	1.16239,	1.16237,	1.16235,	1.16233,	1.16232,	1.1623,	1.16228,	1.16226,	1.16224,	1.16222,	1.1622,	1.16218,	1.16216,	1.16214,	1.16212,	1.1621,	1.16208,	1.16207,	1.16205,	1.16203,	1.16201,	1.16199,	1.16197,	1.16195,	1.16193,	1.16191,	1.16189,	1.16187,	1.16185,	1.16183,	1.16181,	1.16179,	1.16177,	1.16175,	1.16173,	1.16171,	1.16169,	1.16167,	1.16165,	1.16163,	1.16162,	1.1616,	1.16158,	1.16156,	1.16154,	1.16152,	1.1615,	1.16148,	1.16146,	1.16144,	1.16142,	1.1614,	1.16138,	1.16136,	1.16134,	1.16132,	1.1613,	1.16128,	1.16126,	1.16124,	1.16122,	1.1612,	1.16118,	1.16116,	1.16113,	1.16111,	1.16109,	1.16107,	1.16105,	1.16103,	1.16101,	1.16099,	1.16097,	1.16095,	1.16093,	1.16091,	1.16089,	1.16087,	1.16085,	1.16083,	1.16081,	1.16079,	1.16077,	1.16075,	1.16073,	1.16071,	1.16069,	1.16067,	1.16064,	1.16062,	1.1606,	1.16058,	1.16056,	1.16054,	1.16052,	1.1605,	1.16048,	1.16046,	1.16044,	1.16042,	1.1604,	1.16037,	1.16035,	1.16033,	1.16031,	1.16029,	1.16027,	1.16025,	1.16023,	1.16021,	1.16019,	1.16017,	1.16014,	1.16012,	1.1601,	1.16008,	1.16006,	1.16004,	1.16002,	1.16,	1.15998,	1.15996,	1.15993,	1.15991,	1.15989,	1.15987,	1.15985,	1.15983,	1.15981,	1.15979,	1.15976,	1.15974,	1.15972,	1.1597,	1.15968,	1.15966,	1.15964,	1.15961,	1.15959,	1.15957,	1.15955,	1.15953,	1.15951,	1.15949,	1.15946,	1.15944,	1.15942,	1.1594,	1.15938,	1.15936,	1.15934,	1.15931,	1.15929,	1.15927,	1.15925,	1.15923,	1.15921,	1.15918,	1.15916,	1.15914,	1.15912,	1.1591,	1.15908,	1.15905,	1.15903,	1.15901,	1.15899,	1.15897,	1.15895,	1.15892,	1.1589,	1.15888,	1.15886,	1.15884,	1.15881,	1.15879,	1.15877,	1.15875,	1.15873,	1.1587,	1.15868,	1.15866,	1.15864,	1.15862,	1.1586,	1.15857,	1.15855,	1.15853,	1.15851,	1.15849,	1.15846,	1.15844,	1.15842,	1.1584,	1.15837,	1.15835,	1.15833,	1.15831,	1.15829,	1.15826,	1.15824,	1.15822,	1.1582,	1.15818,	1.15815,	1.15813,	1.15811,	1.15809,	1.15806,	1.15804,	1.15802,	1.158,	1.15797,	1.15795,	1.15793,	1.15791,	1.15789,	1.15786,	1.15784,	1.15782,	1.1578,	1.15777,	1.15775,	1.15773,	1.15771,	1.15768,	1.15766,	1.15764,	1.15762,	1.15759,	1.15757,	1.15755,	1.15753,	1.1575,	1.15748,	1.15746,	1.15744,	1.15741,	1.15739,	1.15737,	1.15735,	1.15732,	1.1573,	1.15728,	1.15726,	1.15723,	1.15721,	1.15719,	1.15717,	1.15714,	1.15712,	1.1571,	1.15707,	1.15705,	1.15703,	1.15701,	1.15698,	1.15696,	1.15694,	1.15692,	1.15689,	1.15687,	1.15685,	1.15682,	1.1568,	1.15678,	1.15676,	1.15673,	1.15671,	1.15669,	1.15666,	1.15664,	1.15662,	1.1566,	1.15657,	1.15655,	1.15653,	1.1565,	1.15648,	1.15646,	1.15644,	1.15641,	1.15639,	1.15637,	1.15634,	1.15632,	1.1563,	1.15627,	1.15625,	1.15623,	1.15621,	1.15618,	1.15616,	1.15614,	1.15611,	1.15609,	1.15607,	1.15604,	1.15602,	1.156,	1.15597,	1.15595,	1.15593,	1.15591,	1.15588,	1.15586,	1.15584,	1.15581,	1.15579,	1.15577,	1.15574,	1.15572,	1.1557,	1.15567,	1.15565,	1.15563,	1.1556,	1.15558,	1.15556,	1.15553,	1.15551,	1.15549,	1.15547,	1.15544,	1.15542,	1.1554,	1.15537,	1.15535,	1.15533,	1.1553,	1.15528,	1.15526,	1.15523,	1.15521,	1.15519,	1.15516,	1.15514,	1.15512,	1.15509,	1.15507,	1.15505,	1.15502,	1.155,	1.15498,	1.15495,	1.15493,	1.15491,	1.15488,	1.15486,	1.15484,	1.15481,	1.15479,	1.15477,	1.15474,	1.15472,	1.1547,	1.15467,	1.15465,	1.15463,	1.1546,	1.15458,	1.15455,	1.15453,	1.15451,	1.15448,	1.15446,	1.15444,	1.15441,	1.15439,	1.15437,	1.15434,	1.15432,	1.1543,	1.15427,	1.15425,	1.15423,	1.1542,	1.15418,	1.15416,	1.15413,	1.15411,	1.15409,	1.15406,	1.15404,	1.15401,	1.15399,	1.15397,	1.15394,	1.15392,	1.1539,	1.15387,	1.15385,	1.15383,	1.1538,	1.15378,	1.15376,	1.15373,	1.15371,	1.15368,	1.15366,	1.15364,	1.15361,	1.15359,	1.15357,	1.15354,	1.15352,	1.1535,	1.15347,	1.15345,	1.15343,	1.1534,	1.15338,	1.15335,	1.15333,	1.15331,	1.15328,	1.15326,	1.15324,	1.15321,	1.15319,	1.15317,	1.15314,	1.15312,	1.15309,	1.15307,	1.15305,	1.15302,	1.153,	1.15298,	1.15295,	1.15293,	1.15291,	1.15288,	1.15286,	1.15283,	1.15281,	1.15279,	1.15276,	1.15274,	1.15272,	1.15269,	1.15267,	1.15264,	1.15262,	1.1526,	1.15257,	1.15255,	1.15253,	1.1525,	1.15248,	1.15246,	1.15243,	1.15241,	1.15238,	1.15236,	1.15234,	1.15231,	1.15229,	1.15227,	1.15224,	1.15222,	1.15219,	1.15217,	1.15215,	1.15212,	1.1521,	1.15208,	1.15205,	1.15203,	1.15201,	1.15198,	1.15196,	1.15193,	1.15191,	1.15189,	1.15186,	1.15184,	1.15182,	1.15179,	1.15177,	1.15174,	1.15172,	1.1517,	1.15167,	1.15165,	1.15163,	1.1516,	1.15158,	1.15155,	1.15153,	1.15151,	1.15148,	1.15146,	1.15144,	1.15141,	1.15139,	1.15137,	1.15134,	1.15132,	1.15129,	1.15127,	1.15125,	1.15122,	1.1512,	1.15118,	1.15115,	1.15113,	1.1511,	1.15108,	1.15106,	1.15103,	1.15101,	1.15099,	1.15096,	1.15094,	1.15092,	1.15089,	1.15087,	1.15084,	1.15082,	1.1508,	1.15077,	1.15075,	1.15073,	1.1507,	1.15068,	1.15065,	1.15063,	1.15061,	1.15058,	1.15056,	1.15054,	1.15051,	1.15049,	1.15047,	1.15044,	1.15042,	1.15039,	1.15037,	1.15035,	1.15032,	1.1503,	1.15028,	1.15025,	1.15023,	1.15021,	1.15018,	1.15016,	1.15013,	1.15011,	1.15009,	1.15006,	1.15004,	1.15002,	1.14999,	1.14997,	1.14995,	1.14992,	1.1499,	1.14988,	1.14985,	1.14983,	1.1498,	1.14978,	1.14976,	1.14973,	1.14971,	1.14969,	1.14966,	1.14964,	1.14962,	1.14959,	1.14957,	1.14955,	1.14952,	1.1495,	1.14947,	1.14945,	1.14943,	1.1494,	1.14938,	1.14936,	1.14933,	1.14931,	1.14929,	1.14926,	1.14924,	1.14922,	1.14919,	1.14917,	1.14915,	1.14912,	1.1491,	1.14908,	1.14905,	1.14903,	1.149,	1.14898,	1.14896,	1.14893,	1.14891,	1.14889,	1.14886,	1.14884,	1.14882,	1.14879,	1.14877,	1.14875,	1.14872,	1.1487,	1.14868,	1.14865,	1.14863,	1.14861,	1.14858,	1.14856,	1.14854,	1.14851,	1.14849,	1.14847,	1.14844,	1.14842,	1.1484,	1.14837,	1.14835,	1.14833,	1.1483,	1.14828,	1.14826,	1.14823,	1.14821,	1.14819,	1.14816,	1.14814,	1.14812,	1.14809,	1.14807,	1.14805,	1.14802,	1.148,	1.14798,	1.14795,	1.14793,	1.14791,	1.14788,	1.14786,	1.14784,	1.14781,	1.14779,	1.14777,	1.14775,	1.14772,	1.1477,	1.14768,	1.14765,	1.14763,	1.14761,	1.14758,	1.14756,	1.14754,	1.14751,	1.14749,	1.14747,	1.14744,	1.14742,	1.1474,	1.14737,	1.14735,	1.14733,	1.14731,	1.14728,	1.14726,	1.14724,	1.14721,	1.14719,	1.14717,	1.14714,	1.14712,	1.1471,	1.14708,	1.14705,	1.14703,	1.14701,	1.14698,	1.14696,	1.14694,	1.14691,	1.14689,	1.14687,	1.14685,	1.14682,	1.1468,	1.14678,	1.14675,	1.14673,	1.14671,	1.14669,	1.14666,	1.14664,	1.14662,	1.14659,	1.14657,	1.14655,	1.14653,	1.1465,	1.14648,	1.14646,	1.14643,	1.14641,	1.14639,	1.14637,	1.14634,	1.14632,	1.1463,	1.14627,	1.14625,	1.14623,	1.14621,	1.14618,	1.14616,	1.14614,	1.14612,	1.14609,	1.14607,	1.14605,	1.14603,	1.146,	1.14598,	1.14596,	1.14593,	1.14591,	1.14589,	1.14587,	1.14584,	1.14582,	1.1458,	1.14578,	1.14575,	1.14573,	1.14571,	1.14569,	1.14566,	1.14564,	1.14562,	1.1456,	1.14557,	1.14555,	1.14553,	1.14551,	1.14548,	1.14546,	1.14544,	1.14542,	1.14539,	1.14537,	1.14535,	1.14533,	1.1453,	1.14528,	1.14526,	1.14524,	1.14522,	1.14519,	1.14517,	1.14515,	1.14513,	1.1451,	1.14508,	1.14506,	1.14504,	1.14501,	1.14499,	1.14497,	1.14495,	1.14493,	1.1449,	1.14488,	1.14486,	1.14484,	1.14482,	1.14479,	1.14477,	1.14475,	1.14473,	1.1447,	1.14468,	1.14466,	1.14464,	1.14462,	1.14459,	1.14457,	1.14455,	1.14453,	1.14451,	1.14448,	1.14446,	1.14444,	1.14442,	1.1444,	1.14437,	1.14435,	1.14433,	1.14431,	1.14429,	1.14426,	1.14424,	1.14422,	1.1442,	1.14418,	1.14415,	1.14413,	1.14411,	1.14409,	1.14407,	1.14405,	1.14402,	1.144,	1.14398,	1.14396,	1.14394,	1.14392,	1.14389,	1.14387,	1.14385,	1.14383,	1.14381,	1.14378,	1.14376,	1.14374,	1.14372,	1.1437,	1.14368,	1.14366,	1.14363,	1.14361,	1.14359,	1.14357,	1.14355,	1.14353,	1.1435,	1.14348,	1.14346,	1.14344,	1.14342,	1.1434,	1.14338,	1.14335,	1.14333,	1.14331,	1.14329,	1.14327,	1.14325,	1.14323,	1.1432,	1.14318,	1.14316,	1.14314,	1.14312,	1.1431,	1.14308,	1.14306,	1.14303,	1.14301,	1.14299,	1.14297,	1.14295,	1.14293,	1.14291,	1.14289,	1.14286,	1.14284,	1.14282,	1.1428,	1.14278,	1.14276,	1.14274,	1.14272,	1.1427,	1.14267,	1.14265,	1.14263,	1.14261,	1.14259,	1.14257,	1.14255,	1.14253,	1.14251,	1.14249,	1.14246,	1.14244,	1.14242,	1.1424,	1.14238,	1.14236,	1.14234,	1.14232,	1.1423,	1.14228,	1.14226,	1.14224,	1.14221,	1.14219,	1.14217,	1.14215,	1.14213,	1.14211,	1.14209,	1.14207,	1.14205,	1.14203,	1.14201,	1.14199,	1.14197,	1.14195,	1.14193,	1.1419,	1.14188,	1.14186,	1.14184,	1.14182,	1.1418,	1.14178,	1.14176,	1.14174,	1.14172,	1.1417,	1.14168,	1.14166,	1.14164,	1.14162,	1.1416,	1.14158,	1.14156,	1.14154,	1.14152,	1.1415,	1.14148,	1.14146,	1.14144,	1.14142,	1.14139,	1.14137,	1.14135,	1.14133,	1.14131,	1.14129,	1.14127,	1.14125,	1.14123,	1.14121,	1.14119,	1.14117,	1.14115,	1.14113,	1.14111,	1.14109,	1.14107,	1.14105,	1.14103,	1.14101,	1.14099,	1.14097,	1.14095,	1.14093,	1.14091,	1.14089,	1.14087,	1.14085,	1.14083,	1.14081,	1.14079,	1.14078,	1.14076,	1.14074,	1.14072,	1.1407,	1.14068,	1.14066,	1.14064,	1.14062,	1.1406,	1.14058,	1.14056,	1.14054,	1.14052,	1.1405,	1.14048,	1.14046,	1.14044,	1.14042,	1.1404,	1.14038,	1.14036,	1.14034,	1.14032,	1.14031,	1.14029,	1.14027,	1.14025,	1.14023,	1.14021,	1.14019,	1.14017,	1.14015,	1.14013,	1.14011,	1.14009,	1.14007,	1.14005,	1.14004,	1.14002,	1.14,	1.13998,	1.13996,	1.13994,	1.13992,	1.1399,	1.13988,	1.13986,	1.13984,	1.13983,	1.13981,	1.13979,	1.13977,	1.13975,	1.13973,	1.13971,	1.13969,	1.13967,	1.13965,	1.13964,	1.13962,	1.1396,	1.13958,	1.13956,	1.13954,	1.13952,	1.1395,	1.13949,	1.13947,	1.13945,	1.13943,	1.13941,	1.13939,	1.13937,	1.13936,	1.13934,	1.13932,	1.1393,	1.13928,	1.13926,	1.13924,	1.13923,	1.13921,	1.13919,	1.13917,	1.13915,	1.13913,	1.13912,	1.1391,	1.13908,	1.13906,	1.13904,	1.13902,	1.13901,	1.13899,	1.13897,	1.13895,	1.13893,	1.13891,	1.1389,	1.13888,	1.13886,	1.13884,	1.13882,	1.13881,	1.13879,	1.13877,	1.13875,	1.13873,	1.13872,	1.1387,	1.13868,	1.13866,	1.13864,	1.13863,	1.13861,	1.13859,	1.13857,	1.13855,	1.13854,	1.13852,	1.1385,	1.13848,	1.13846,	1.13845,	1.13843,	1.13841,	1.13839,	1.13838,	1.13836,	1.13834,	1.13832,	1.13831,	1.13829,	1.13827,	1.13825,	1.13824,	1.13822,	1.1382,	1.13818,	1.13817,	1.13815,	1.13813,	1.13811,	1.1381,	1.13808,	1.13806,	1.13804,	1.13803,	1.13801,	1.13799,	1.13797,	1.13796,	1.13794,	1.13792,	1.13791,	1.13789,	1.13787,	1.13785,	1.13784,	1.13782,	1.1378,	1.13779,	1.13777,	1.13775,	1.13774,	1.13772,	1.1377,	1.13768,	1.13767,	1.13765,	1.13763,	1.13762,	1.1376,	1.13758,	1.13757,	1.13755,	1.13753,	1.13752,	1.1375,	1.13748,	1.13747,	1.13745,	1.13743,	1.13742,	1.1374,	1.13738,	1.13737,	1.13735,	1.13733,	1.13732,	1.1373,	1.13728,	1.13727,	1.13725,	1.13723,	1.13722,	1.1372,	1.13718,	1.13717,	1.13715,	1.13714,	1.13712,	1.1371,	1.13709,	1.13707,	1.13705,	1.13704,	1.13702,	1.13701,	1.13699,	1.13697,	1.13696,	1.13694,	1.13693,	1.13691,	1.13689,	1.13688,	1.13686,	1.13685,	1.13683,	1.13681,	1.1368,	1.13678,	1.13677,	1.13675,	1.13673,	1.13672,	1.1367,	1.13669,	1.13667,	1.13666,	1.13664,	1.13662,	1.13661,	1.13659,	1.13658,	1.13656,	1.13655,	1.13653,	1.13651,	1.1365,	1.13648,	1.13647,	1.13645,	1.13644,	1.13642,	1.13641,	1.13639,	1.13638,	1.13636,	1.13634,	1.13633,	1.13631,	1.1363,	1.13628,	1.13627,	1.13625,	1.13624,	1.13622,	1.13621,	1.13619,	1.13618,	1.13616,	1.13615,	1.13613,	1.13612,	1.1361,	1.13609,	1.13607,	1.13606,	1.13604,	1.13603,	1.13601,	1.136,	1.13598,	1.13597,	1.13595,	1.13594,	1.13592,	1.13591,	1.13589,	1.13588,	1.13587,	1.13585,	1.13584,	1.13582,	1.13581,	1.13579,	1.13578,	1.13576,	1.13575,	1.13573,	1.13572,	1.1357,	1.13569,	1.13568,	1.13566,	1.13565,	1.13563,	1.13562,	1.1356,	1.13559,	1.13558,	1.13556,	1.13555,	1.13553,	1.13552,	1.1355,	1.13549,	1.13548,	1.13546,	1.13545,	1.13543,	1.13542,	1.13541,	1.13539,	1.13538,	1.13536,	1.13535,	1.13534,	1.13532,	1.13531,	1.13529,	1.13528,	1.13527,	1.13525,	1.13524,	1.13523,	1.13521,	1.1352,	1.13518,	1.13517,	1.13516,	1.13514,	1.13513,	1.13512,	1.1351,	1.13509,	1.13508,	1.13506,	1.13505,	1.13504,	1.13502,	1.13501,	1.135,	1.13498,	1.13497,	1.13496,	1.13494,	1.13493,	1.13492,	1.1349,	1.13489,	1.13488,	1.13486,	1.13485,	1.13484,	1.13482,	1.13481,	1.1348,	1.13478,	1.13477,	1.13476,	1.13475,	1.13473,	1.13472,	1.13471,	1.13469,	1.13468,	1.13467,	1.13466,	1.13464,	1.13463,	1.13462,	1.1346,	1.13459,	1.13458,	1.13457,	1.13455,	1.13454,	1.13453,	1.13452,	1.1345,	1.13449,	1.13448,	1.13447,	1.13445,	1.13444,	1.13443,	1.13442,	1.1344,	1.13439,	1.13438,	1.13437,	1.13436,	1.13434,	1.13433,	1.13432,	1.13431,	1.13429,	1.13428,	1.13427,	1.13426,	1.13425,	1.13423,	1.13422,	1.13421,	1.1342,	1.13419,	1.13417,	1.13416,	1.13415,	1.13414,	1.13413,	1.13411,	1.1341,	1.13409,	1.13408,	1.13407,	1.13406,	1.13404,	1.13403,	1.13402,	1.13401,	1.134,	1.13399,	1.13397,	1.13396,	1.13395,	1.13394,	1.13393,	1.13392,	1.13391,	1.13389,	1.13388,	1.13387,	1.13386,	1.13385,	1.13384,	1.13383,	1.13382,	1.1338,	1.13379,	1.13378,	1.13377,	1.13376,	1.13375,	1.13374,	1.13373,	1.13372,	1.1337,	1.13369,	1.13368,	1.13367,	1.13366,	1.13365,	1.13364,	1.13363,	1.13362,	1.13361,	1.1336,	1.13358,	1.13357,	1.13356,	1.13355,	1.13354,	1.13353,	1.13352,	1.13351,	1.1335,	1.13349,	1.13348,	1.13347,	1.13346,	1.13345,	1.13344,	1.13343,	1.13342,	1.13341,	1.1334,	1.13339,	1.13337,	1.13336,	1.13335,	1.13334,	1.13333,	1.13332,	1.13331,	1.1333,	1.13329,	1.13328,	1.13327,	1.13326,	1.13325,	1.13324,	1.13323,	1.13322,	1.13321,	1.1332,	1.13319,	1.13318,	1.13317,	1.13316,	1.13315,	1.13315,	1.13314,	1.13313,	1.13312,	1.13311,	1.1331,	1.13309,	1.13308,	1.13307,	1.13306,	1.13305,	1.13304,	1.13303,	1.13302,	1.13301,	1.133,	1.13299,	1.13298,	1.13297,	1.13296,	1.13296,	1.13295,	1.13294,	1.13293,	1.13292,	1.13291,	1.1329,	1.13289,	1.13288,	1.13287,	1.13286,	1.13286,	1.13285,	1.13284,	1.13283,	1.13282,	1.13281,	1.1328,	1.13279,	1.13278,	1.13278,	1.13277,	1.13276,	1.13275,	1.13274,	1.13273,	1.13272,	1.13271,	1.13271,	1.1327,	1.13269,	1.13268,	1.13267,	1.13266,	1.13266,	1.13265,	1.13264,	1.13263,	1.13262,	1.13261,	1.1326,	1.1326,	1.13259,	1.13258,	1.13257,	1.13256,	1.13256,	1.13255,	1.13254,	1.13253,	1.13252,	1.13252,	1.13251,	1.1325,	1.13249,	1.13248,	1.13248,	1.13247,	1.13246,	1.13245,	1.13244,	1.13244,	1.13243,	1.13242,	1.13241,	1.13241,	1.1324,	1.13239,	1.13238,	1.13238,	1.13237,	1.13236,	1.13235,	1.13235,	1.13234,	1.13233,	1.13232,	1.13232,	1.13231,	1.1323,	1.13229,	1.13229,	1.13228,	1.13227,	1.13226,	1.13226,	1.13225,	1.13224,	1.13224,	1.13223,	1.13222,	1.13221,	1.13221,	1.1322,	1.13219,	1.13219,	1.13218,	1.13217,	1.13217,	1.13216,	1.13215,	1.13215,	1.13214,	1.13213,	1.13213,	1.13212,	1.13211,	1.13211,	1.1321,	1.13209,	1.13209,	1.13208,	1.13207,	1.13207,	1.13206,	1.13205,	1.13205,	1.13204,	1.13203,	1.13203,	1.13202,	1.13201,	1.13201,	1.132,	1.132,	1.13199,	1.13198,	1.13198,	1.13197,	1.13197,	1.13196,	1.13195,	1.13195,	1.13194,	1.13194,	1.13193,	1.13192,	1.13192,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	1.14428,	


Input > Layer1 > Layer2 > Layer3  time = 469048 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 > Layer4  
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 1: i = 32
Thread 0: i = 0
Thread 2: i = 64
Thread 3: i = 96
Thread 1: i = 33
Thread 0: i = 1
Thread 2: i = 65
Thread 3: i = 97
Thread 1: i = 34
Thread 0: i = 2
Thread 2: i = 66
Thread 3: i = 98
Thread 1: i = 35
Thread 0: i = 3
Thread 2: i = 67
Thread 3: i = 99
Thread 1: i = 36
Thread 0: i = 4
Thread 2: i = 68
Thread 3: i = 100
Thread 1: i = 37
Thread 0: i = 5
Thread 2: i = 69
Thread 3: i = 101
Thread 1: i = 38
Thread 0: i = 6
Thread 2: i = 70
Thread 3: i = 102
Thread 1: i = 39
Thread 0: i = 7
Thread 2: i = 71
Thread 3: i = 103
Thread 1: i = 40
Thread 0: i = 8
Thread 2: i = 72
Thread 3: i = 104
Thread 1: i = 41
Thread 0: i = 9
Thread 2: i = 73
Thread 3: i = 105
Thread 1: i = 42
Thread 0: i = 10
Thread 2: i = 74
Thread 3: i = 106
Thread 1: i = 43
Thread 0: i = 11
Thread 2: i = 75
Thread 3: i = 107
Thread 1: i = 44
Thread 0: i = 12
Thread 2: i = 76
Thread 3: i = 108
Thread 1: i = 45
Thread 0: i = 13
Thread 2: i = 77
Thread 3: i = 109
Thread 1: i = 46
Thread 0: i = 14
Thread 2: i = 78
Thread 3: i = 110
Thread 1: i = 47
Thread 0: i = 15
Thread 2: i = 79
Thread 3: i = 111
Thread 1: i = 48
Thread 0: i = 16
Thread 2: i = 80
Thread 3: i = 112
Thread 1: i = 49
Thread 0: i = 17
Thread 2: i = 81
Thread 3: i = 113
Thread 1: i = 50
Thread 0: i = 18
Thread 2: i = 82
Thread 3: i = 114
Thread 1: i = 51
Thread 0: i = 19
Thread 2: i = 83
Thread 3: i = 115
Thread 1: i = 52
Thread 0: i = 20
Thread 2: i = 84
Thread 3: i = 116
Thread 1: i = 53
Thread 0: i = 21
Thread 2: i = 85
Thread 3: i = 117
Thread 1: i = 54
Thread 0: i = 22
Thread 2: i = 86
Thread 3: i = 118
Thread 1: i = 55
Thread 0: i = 23
Thread 2: i = 87
Thread 3: i = 119
Thread 1: i = 56
Thread 0: i = 24
Thread 2: i = 88
Thread 3: i = 120
Thread 1: i = 57
Thread 0: i = 25
Thread 2: i = 89
Thread 3: i = 121
Thread 1: i = 58
Thread 0: i = 26
Thread 2: i = 90
Thread 3: i = 122
Thread 1: i = 59
Thread 0: i = 27
Thread 2: i = 91
Thread 3: i = 123
Thread 1: i = 60
Thread 0: i = 28
Thread 2: i = 92
Thread 3: i = 124
Thread 1: i = 61
Thread 0: i = 29
Thread 2: i = 93
Thread 3: i = 125
Thread 1: i = 62
Thread 0: i = 30
Thread 2: i = 94
Thread 3: i = 126
Thread 1: i = 63
Thread 0: i = 31
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 0
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 1
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 2
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 3
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 4
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 5
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 6
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 7
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 8
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 9
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 10
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 11
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 12
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 13
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 14
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 15
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 16
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 17
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 18
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 19
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 20
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 21
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 22
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 23
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 24
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 25
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 26
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 27
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 28
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 29
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 30
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
Thread 0: i = 31
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 3: i = 121
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 88
Thread 3: i = 122
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 89
Thread 3: i = 123
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 90
Thread 3: i = 124
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 91
Thread 3: i = 125
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 92
Thread 3: i = 126
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 93
Thread 3: i = 127
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 94
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 1: i = 32
Thread 0: i = 0
Thread 2: i = 64
Thread 3: i = 96
Thread 1: i = 33
Thread 0: i = 1
Thread 2: i = 65
Thread 3: i = 97
Thread 1: i = 34
Thread 0: i = 2
Thread 2: i = 66
Thread 3: i = 98
Thread 1: i = 35
Thread 0: i = 3
Thread 2: i = 67
Thread 3: i = 99
Thread 1: i = 36
Thread 0: i = 4
Thread 2: i = 68
Thread 3: i = 100
Thread 1: i = 37
Thread 0: i = 5
Thread 2: i = 69
Thread 3: i = 101
Thread 1: i = 38
Thread 0: i = 6
Thread 2: i = 70
Thread 3: i = 102
Thread 1: i = 39
Thread 0: i = 7
Thread 2: i = 71
Thread 3: i = 103
Thread 1: i = 40
Thread 0: i = 8
Thread 2: i = 72
Thread 3: i = 104
Thread 1: i = 41
Thread 0: i = 9
Thread 2: i = 73
Thread 3: i = 105
Thread 1: i = 42
Thread 0: i = 10
Thread 2: i = 74
Thread 3: i = 106
Thread 1: i = 43
Thread 0: i = 11
Thread 2: i = 75
Thread 3: i = 107
Thread 1: i = 44
Thread 0: i = 12
Thread 2: i = 76
Thread 3: i = 108
Thread 1: i = 45
Thread 0: i = 13
Thread 2: i = 77
Thread 3: i = 109
Thread 1: i = 46
Thread 0: i = 14
Thread 2: i = 78
Thread 3: i = 110
Thread 1: i = 47
Thread 0: i = 15
Thread 2: i = 79
Thread 3: i = 111
Thread 1: i = 48
Thread 0: i = 16
Thread 2: i = 80
Thread 3: i = 112
Thread 1: i = 49
Thread 0: i = 17
Thread 2: i = 81
Thread 3: i = 113
Thread 1: i = 50
Thread 0: i = 18
Thread 2: i = 82
Thread 3: i = 114
Thread 1: i = 51
Thread 0: i = 19
Thread 2: i = 83
Thread 3: i = 115
Thread 1: i = 52
Thread 0: i = 20
Thread 2: i = 84
Thread 3: i = 116
Thread 1: i = 53
Thread 0: i = 21
Thread 2: i = 85
Thread 3: i = 117
Thread 1: i = 54
Thread 0: i = 22
Thread 2: i = 86
Thread 3: i = 118
Thread 1: i = 55
Thread 0: i = 23
Thread 2: i = 87
Thread 3: i = 119
Thread 1: i = 56
Thread 0: i = 24
Thread 2: i = 88
Thread 3: i = 120
Thread 1: i = 57
Thread 0: i = 25
Thread 2: i = 89
Thread 3: i = 121
Thread 1: i = 58
Thread 0: i = 26
Thread 2: i = 90
Thread 3: i = 122
Thread 1: i = 59
Thread 0: i = 27
Thread 2: i = 91
Thread 3: i = 123
Thread 1: i = 60
Thread 0: i = 28
Thread 2: i = 92
Thread 3: i = 124
Thread 1: i = 61
Thread 0: i = 29
Thread 2: i = 93
Thread 3: i = 125
Thread 1: i = 62
Thread 0: i = 30
Thread 2: i = 94
Thread 3: i = 126
Thread 1: i = 63
Thread 0: i = 31
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4

// Input > Layer1 > Layer2 > Layer3 > Layer4



SDFS:
0.418712,	0.400782,	0.383009,	0.365391,	0.347927,	0.330617,	0.31346,	0.296455,	0.279601,	0.262897,	0.246343,	0.229939,	0.213682,	0.197573,	0.181611,	0.165794,	0.150123,	0.134597,	0.119214,	0.103974,	0.0888763,	0.0739202,	0.0591049,	0.0444297,	0.0298938,	0.0154966,	0.00123724,	-0.0128849,	-0.0268706,	-0.0407206,	-0.0544355,	-0.068016,	-0.081463,	-0.094777,	-0.107959,	-0.121009,	-0.133928,	-0.146718,	-0.159377,	-0.171908,	-0.184311,	-0.196587,	-0.208736,	-0.220758,	-0.232656,	-0.244429,	-0.256077,	-0.267603,	-0.279005,	-0.290286,	-0.301445,	-0.312483,	-0.323402,	-0.334201,	-0.344881,	-0.355443,	-0.365888,	-0.376216,	-0.386427,	-0.396524,	-0.406505,	-0.416372,	-0.426125,	-0.435765,	-0.445293,	-0.454709,	-0.464014,	-0.473209,	-0.482293,	-0.491269,	-0.500135,	-0.508894,	-0.517545,	-0.526089,	-0.534527,	-0.542859,	-0.551086,	-0.559209,	-0.567228,	-0.575144,	-0.582957,	-0.590668,	-0.598277,	-0.605785,	-0.613193,	-0.620502,	-0.627711,	-0.634821,	-0.641834,	-0.648749,	-0.655567,	-0.662289,	-0.668915,	-0.675446,	-0.681882,	-0.688224,	-0.694472,	-0.700628,	-0.706691,	-0.712662,	-0.718542,	-0.724331,	-0.730029,	-0.735638,	-0.741158,	-0.746589,	-0.751933,	-0.757188,	-0.762356,	-0.767438,	-0.772434,	-0.777345,	-0.78217,	-0.786911,	-0.791568,	-0.796142,	-0.800633,	-0.805041,	-0.809368,	-0.813613,	-0.817777,	-0.821861,	-0.825865,	-0.82979,	-0.833636,	-0.837404,	-0.841093,	-0.844706,	-0.848241,	-0.8517,	-0.855083,	-0.858391,	-0.861623,	-0.864782,	-0.867866,	-0.870877,	-0.873814,	-0.876679,	-0.879472,	-0.882194,	-0.884844,	-0.887423,	-0.889933,	-0.892372,	-0.894742,	-0.897044,	-0.899276,	-0.901441,	-0.903539,	-0.905569,	-0.907533,	-0.90943,	-0.911262,	-0.913029,	-0.914731,	-0.916368,	-0.917941,	-0.919451,	-0.920898,	-0.922282,	-0.923604,	-0.924864,	-0.926063,	-0.927201,	-0.928278,	-0.929295,	-0.930253,	-0.931151,	-0.93199,	-0.932771,	-0.933494,	-0.934159,	-0.934767,	-0.935318,	-0.935813,	-0.936252,	-0.936635,	-0.936963,	-0.937237,	-0.937456,	-0.937621,	-0.937732,	-0.93779,	-0.937795,	-0.937748,	-0.937649,	-0.937498,	-0.937296,	-0.937043,	-0.936739,	-0.936386,	-0.935982,	-0.93553,	-0.935028,	-0.934477,	-0.933879,	-0.933232,	-0.932538,	-0.931797,	-0.931009,	-0.930174,	-0.929294,	-0.928368,	-0.927396,	-0.926379,	-0.925318,	-0.924213,	-0.923063,	-0.92187,	-0.920634,	-0.919355,	-0.918033,	-0.916669,	-0.915264,	-0.913817,	-0.912328,	-0.910799,	-0.909229,	-0.90762,	-0.90597,	-0.904281,	-0.902552,	-0.900785,	-0.89898,	-0.897136,	-0.895254,	-0.893335,	-0.891379,	-0.889385,	-0.887356,	-0.88529,	-0.883188,	-0.88105,	-0.878877,	-0.876669,	-0.874427,	-0.87215,	-0.869839,	-0.867495,	-0.865116,	-0.862705,	-0.860261,	-0.857785,	-0.855276,	-0.852735,	-0.850163,	-0.847559,	-0.844924,	-0.842259,	-0.839563,	-0.836836,	-0.83408,	-0.831295,	-0.82848,	-0.825636,	-0.822763,	-0.819862,	-0.816933,	-0.813976,	-0.810991,	-0.807979,	-0.80494,	-0.801874,	-0.798781,	-0.795663,	-0.792518,	-0.789348,	-0.786152,	-0.782931,	-0.779685,	-0.776415,	-0.77312,	-0.769801,	-0.766458,	-0.763092,	-0.759702,	-0.756289,	-0.752854,	-0.749396,	-0.745915,	-0.742413,	-0.738888,	-0.735343,	-0.731775,	-0.728187,	-0.724578,	-0.720949,	-0.717299,	-0.713629,	-0.709939,	-0.70623,	-0.702501,	-0.698753,	-0.694987,	-0.691201,	-0.687398,	-0.683576,	-0.679736,	-0.675878,	-0.672003,	-0.668111,	-0.664201,	-0.660275,	-0.656333,	-0.652374,	-0.648398,	-0.644407,	-0.6404,	-0.636378,	-0.632341,	-0.628288,	-0.624221,	-0.620139,	-0.616043,	-0.611932,	-0.607808,	-0.60367,	-0.599518,	-0.595353,	-0.591175,	-0.586984,	-0.58278,	-0.578564,	-0.574335,	-0.570095,	-0.565842,	-0.561578,	-0.557302,	-0.553015,	-0.548717,	-0.544408,	-0.540089,	-0.535758,	-0.531418,	-0.527067,	-0.522707,	-0.518336,	-0.513957,	-0.509567,	-0.505169,	-0.500762,	-0.496345,	-0.491921,	-0.487487,	-0.483046,	-0.478596,	-0.474139,	-0.469674,	-0.465201,	-0.460721,	-0.456234,	-0.451739,	-0.447238,	-0.44273,	-0.438216,	-0.433696,	-0.429169,	-0.424636,	-0.420098,	-0.415554,	-0.411004,	-0.406449,	-0.401889,	-0.397324,	-0.392754,	-0.38818,	-0.383601,	-0.379017,	-0.37443,	-0.369839,	-0.365243,	-0.360644,	-0.356042,	-0.351436,	-0.346827,	-0.342215,	-0.337599,	-0.332981,	-0.328361,	-0.323738,	-0.319113,	-0.314485,	-0.309856,	-0.305224,	-0.300591,	-0.295957,	-0.29132,	-0.286683,	-0.282044,	-0.277405,	-0.272764,	-0.268123,	-0.263481,	-0.258839,	-0.254196,	-0.249554,	-0.244911,	-0.240268,	-0.235626,	-0.230983,	-0.226342,	-0.221701,	-0.21706,	-0.212421,	-0.207783,	-0.203145,	-0.198509,	-0.193875,	-0.189242,	-0.18461,	-0.179981,	-0.175353,	-0.170727,	-0.166103,	-0.161482,	-0.156863,	-0.152246,	-0.147632,	-0.143021,	-0.138413,	-0.133808,	-0.129205,	-0.124606,	-0.120011,	-0.115418,	-0.11083,	-0.106245,	-0.101663,	-0.0970858,	-0.0925124,	-0.087943,	-0.0833779,	-0.078817,	-0.0742606,	-0.0697088,	-0.0651615,	-0.060619,	-0.0560814,	-0.0515487,	-0.0470211,	-0.0424986,	-0.0379813,	-0.0334695,	-0.0289631,	-0.0244622,	-0.019967,	-0.0154776,	-0.010994,	-0.00651639,	-0.0020448,	0.00242063,	0.00687983,	0.0113327,	0.0157791,	0.0202191,	0.0246524,	0.029079,	0.0334988,	0.0379117,	0.0423177,	0.0467165,	0.0511083,	0.0554928,	0.0598699,	0.0642397,	0.0686019,	0.0729566,	0.0773036,	0.0816428,	0.0859742,	0.0902977,	0.0946132,	0.0989206,	0.10322,	0.107511,	0.111793,	0.116068,	0.120333,	0.124591,	0.128839,	0.133079,	0.13731,	0.141532,	0.145746,	0.14995,	0.154145,	0.158331,	0.162508,	0.166675,	0.170833,	0.174982,	0.179121,	0.183251,	0.18737,	0.191481,	0.195581,	0.199671,	0.203752,	0.207822,	0.211883,	0.215933,	0.219973,	0.224003,	0.228023,	0.232032,	0.236031,	0.240019,	0.243997,	0.247964,	0.25192,	0.255866,	0.259801,	0.263725,	0.267638,	0.27154,	0.275431,	0.27931,	0.283179,	0.287037,	0.290883,	0.294718,	0.298541,	0.302353,	0.306154,	0.309943,	0.313721,	0.317487,	0.321241,	0.324983,	0.328714,	0.332433,	0.33614,	0.339835,	0.343518,	0.347189,	0.350847,	0.354494,	0.358129,	0.361751,	0.365361,	0.368959,	0.372545,	0.376118,	0.379678,	0.383226,	0.386762,	0.390285,	0.393795,	0.397293,	0.400778,	0.40425,	0.40771,	0.411157,	0.41459,	0.418011,	0.421419,	0.424815,	0.428197,	0.431566,	0.434922,	0.438264,	0.441594,	0.444911,	0.448214,	0.451504,	0.454781,	0.458044,	0.461294,	0.464531,	0.467754,	0.470964,	0.47416,	0.477343,	0.480512,	0.483668,	0.48681,	0.489938,	0.493053,	0.496154,	0.499242,	0.502315,	0.505375,	0.508421,	0.511454,	0.514472,	0.517476,	0.520467,	0.523444,	0.526406,	0.529355,	0.53229,	0.53521,	0.538117,	0.54101,	0.543888,	0.546752,	0.549603,	0.552439,	0.555261,	0.558068,	0.560862,	0.563641,	0.566406,	0.569156,	0.571893,	0.574615,	0.577322,	0.580016,	0.582695,	0.585359,	0.58801,	0.590645,	0.593267,	0.595873,	0.598466,	0.601044,	0.603607,	0.606156,	0.60869,	0.61121,	0.613715,	0.616206,	0.618682,	0.621144,	0.623591,	0.626023,	0.628441,	0.630844,	0.633232,	0.635606,	0.637965,	0.640309,	0.642639,	0.644954,	0.647254,	0.649539,	0.65181,	0.654066,	0.656308,	0.658534,	0.660746,	0.662943,	0.665125,	0.667293,	0.669446,	0.671584,	0.673707,	0.675815,	0.677909,	0.679987,	0.682051,	0.6841,	0.686135,	0.688154,	0.690159,	0.692148,	0.694123,	0.696083,	0.698029,	0.699959,	0.701875,	0.703776,	0.705661,	0.707533,	0.709389,	0.71123,	0.713057,	0.714868,	0.716665,	0.718447,	0.720214,	0.721967,	0.723704,	0.725427,	0.727135,	0.728828,	0.730506,	0.732169,	0.733818,	0.735451,	0.73707,	0.738674,	0.740263,	0.741838,	0.743397,	0.744942,	0.746472,	0.747988,	0.749488,	0.750974,	0.752445,	0.753901,	0.755342,	0.756769,	0.758181,	0.759578,	0.760961,	0.762328,	0.763681,	0.76502,	0.766343,	0.767652,	0.768946,	0.770226,	0.771491,	0.772741,	0.773977,	0.775198,	0.776404,	0.777596,	0.778773,	0.779936,	0.781084,	0.782217,	0.783336,	0.78444,	0.78553,	0.786605,	0.787666,	0.788712,	0.789744,	0.790761,	0.791764,	0.792752,	0.793726,	0.794685,	0.795631,	0.796561,	0.797477,	0.798379,	0.799267,	0.80014,	0.800999,	0.801844,	0.802674,	0.80349,	0.804291,	0.805079,	0.805852,	0.806611,	0.807356,	0.808087,	0.808803,	0.809505,	0.810193,	0.810867,	0.811527,	0.812173,	0.812805,	0.813423,	0.814026,	0.814616,	0.815191,	0.815753,	0.816301,	0.816835,	0.817354,	0.81786,	0.818352,	0.81883,	0.819295,	0.819745,	0.820182,	0.820605,	0.821014,	0.821409,	0.821791,	0.822158,	0.822513,	0.822853,	0.82318,	0.823493,	0.823793,	0.824079,	0.824351,	0.82461,	0.824856,	0.825088,	0.825306,	0.825511,	0.825702,	0.82588,	0.826045,	0.826196,	0.826334,	0.826459,	0.82657,	0.826669,	0.826753,	0.826825,	0.826883,	0.826928,	0.82696,	0.826979,	0.826985,	0.826978,	0.826957,	0.826924,	0.826877,	0.826818,	0.826746,	0.82666,	0.826562,	0.826451,	0.826327,	0.82619,	0.82604,	0.825877,	0.825702,	0.825514,	0.825313,	0.8251,	0.824874,	0.824635,	0.824383,	0.824119,	0.823843,	0.823554,	0.823252,	0.822938,	0.822612,	0.822273,	0.821921,	0.821557,	0.821181,	0.820793,	0.820392,	0.819979,	0.819554,	0.819117,	0.818667,	0.818205,	0.817731,	0.817245,	0.816747,	0.816237,	0.815715,	0.815181,	0.814634,	0.814076,	0.813506,	0.812925,	0.812331,	0.811725,	0.811108,	0.810479,	0.809838,	0.809186,	0.808522,	0.807846,	0.807158,	0.806459,	0.805749,	0.805027,	0.804293,	0.803548,	0.802791,	0.802023,	0.801244,	0.800453,	0.799651,	0.798838,	0.798014,	0.797178,	0.796331,	0.795473,	0.794603,	0.793723,	0.792832,	0.791929,	0.791016,	0.790091,	0.789156,	0.788209,	0.787252,	0.786284,	0.785305,	0.784315,	0.783315,	0.782303,	0.781281,	0.780249,	0.779205,	0.778151,	0.777087,	0.776012,	0.774926,	0.77383,	0.772724,	0.771607,	0.770479,	0.769342,	0.768194,	0.767035,	0.765867,	0.764688,	0.763499,	0.7623,	0.76109,	0.759871,	0.758642,	0.757402,	0.756152,	0.754893,	0.753623,	0.752344,	0.751055,	0.749756,	0.748447,	0.747128,	0.7458,	0.744462,	0.743114,	0.741756,	0.740389,	0.739013,	0.737626,	0.736231,	0.734825,	0.733411,	0.731987,	0.730553,	0.72911,	0.727658,	0.726197,	0.724726,	0.723246,	0.721757,	0.720259,	0.718751,	0.717235,	0.715709,	0.714175,	0.712631,	0.711079,	0.709517,	0.707947,	0.706368,	0.70478,	0.703183,	0.701578,	0.699964,	0.698341,	0.696709,	0.695069,	0.69342,	0.691763,	0.690097,	0.688423,	0.68674,	0.685049,	0.683349,	0.681641,	0.679925,	0.678201,	0.676468,	0.674727,	0.672978,	0.671221,	0.669455,	0.667682,	0.6659,	0.664111,	0.662313,	0.660508,	0.658694,	0.656873,	0.655044,	0.653207,	0.651362,	0.64951,	0.64765,	0.645782,	0.643907,	0.642024,	0.640133,	0.638235,	0.63633,	0.634416,	0.632496,	0.630568,	0.628633,	0.62669,	0.62474,	0.622783,	0.620819,	0.618847,	0.616868,	0.614882,	0.61289,	0.61089,	0.608882,	0.606868,	0.604847,	0.60282,	0.600785,	0.598743,	0.596695,	0.594639,	0.592577,	0.590509,	0.588433,	0.586351,	0.584263,	0.582167,	0.580065,	0.577957,	0.575842,	0.573721,	0.571593,	0.569459,	0.567319,	0.565172,	0.563019,	0.56086,	0.558695,	0.556523,	0.554346,	0.552162,	0.549972,	0.547776,	0.545574,	0.543366,	0.541152,	0.538933,	0.536707,	0.534476,	0.532238,	0.529995,	0.527747,	0.525492,	0.523232,	0.520966,	0.518695,	0.516418,	0.514136,	0.511848,	0.509554,	0.507256,	0.504951,	0.502642,	0.500327,	0.498007,	0.495681,	0.493351,	0.491015,	0.488674,	0.486328,	0.483976,	0.48162,	0.479259,	0.476892,	0.474521,	0.472145,	0.469764,	0.467378,	0.464987,	0.462591,	0.460191,	0.457786,	0.455376,	0.452962,	0.450542,	0.448119,	0.445691,	0.443258,	0.440821,	0.438379,	0.435933,	0.433482,	0.431027,	0.428568,	0.426105,	0.423637,	0.421165,	0.418688,	0.416208,	0.413724,	0.411235,	0.408742,	0.406245,	0.403745,	0.40124,	0.398731,	0.396219,	0.393702,	0.391182,	0.388658,	0.38613,	0.383599,	0.381063,	0.378524,	0.375982,	0.373435,	0.370886,	0.368332,	0.365775,	0.363215,	0.360651,	0.358084,	0.355513,	0.352939,	0.350362,	0.347781,	0.345198,	0.34261,	0.34002,	0.337427,	0.33483,	0.33223,	0.329628,	0.327022,	0.324413,	0.321801,	0.319186,	0.316569,	0.313948,	0.311325,	0.308699,	0.30607,	0.303438,	0.300804,	0.298166,	0.295527,	0.292884,	0.290239,	0.287591,	0.284941,	0.282289,	0.279633,	0.276976,	0.274316,	0.271654,	0.268989,	0.266322,	0.263652,	0.260981,	0.258307,	0.255631,	0.252953,	0.250272,	0.24759,	0.244905,	0.242219,	0.23953,	0.23684,	0.234147,	0.231453,	0.228756,	0.226058,	0.223358,	0.220656,	0.217953,	0.215247,	0.21254,	0.209832,	0.207121,	0.204409,	0.201695,	0.19898,	0.196264,	0.193545,	0.190826,	0.188104,	0.185382,	0.182658,	0.179932,	0.177206,	0.174478,	0.171749,	0.169018,	0.166286,	0.163553,	0.160819,	0.158084,	0.155348,	0.152611,	0.149872,	0.147133,	0.144393,	0.141651,	0.138909,	0.136166,	0.133422,	0.130677,	0.127931,	0.125185,	0.122438,	0.11969,	0.116941,	0.114192,	0.111442,	0.108692,	0.10594,	0.103189,	0.100437,	0.0976838,	0.0949306,	0.092177,	0.089423,	0.0866685,	0.0839137,	0.0811586,	0.0784032,	0.0756475,	0.0728915,	0.0701353,	0.067379,	0.0646224,	0.0618657,	0.0591089,	0.056352,	0.053595,	0.050838,	0.048081,	0.0453241,	0.0425671,	0.0398103,	0.0370535,	0.0342969,	0.0315404,	0.0287841,	0.026028,	0.0232722,	0.0205166,	0.0177613,	0.0150063,	0.0122516,	0.00949733,	0.00674343,	0.00398995,	0.00123692,	-0.00151565,	-0.00426772,	-0.00701926,	-0.00977026,	-0.0125207,	-0.0152705,	-0.0180197,	-0.0207683,	-0.0235161,	-0.0262633,	-0.0290098,	-0.0317554,	-0.0345004,	-0.0372445,	-0.0399877,	-0.0427302,	-0.0454717,	-0.0482124,	-0.0509521,	-0.0536908,	-0.0564286,	-0.0591654,	-0.0619011,	-0.0646358,	-0.0673694,	-0.0701019,	-0.0728333,	-0.0755635,	-0.0782926,	-0.0810204,	-0.083747,	-0.0864724,	-0.0891965,	-0.0919193,	-0.0946408,	-0.0973609,	-0.10008,	-0.102797,	-0.105513,	-0.108227,	-0.11094,	-0.113652,	-0.116362,	-0.119071,	-0.121777,	-0.124483,	-0.127187,	-0.129889,	-0.132589,	-0.135288,	-0.137985,	-0.14068,	-0.143374,	-0.146066,	-0.148756,	-0.151444,	-0.15413,	-0.156815,	-0.159497,	-0.162178,	-0.164857,	-0.167534,	-0.170209,	-0.172881,	-0.175552,	-0.178221,	-0.180888,	-0.183552,	-0.186215,	-0.188875,	-0.191533,	-0.194189,	-0.196843,	-0.199495,	-0.202144,	-0.204791,	-0.207436,	-0.210079,	-0.212719,	-0.215357,	-0.217992,	-0.220625,	-0.223256,	-0.225884,	-0.22851,	-0.231133,	-0.233754,	-0.236372,	-0.238988,	-0.241601,	-0.244212,	-0.24682,	-0.249425,	-0.252028,	-0.254628,	-0.257225,	-0.25982,	-0.262412,	-0.265001,	-0.267587,	-0.270171,	-0.272751,	-0.275329,	-0.277904,	-0.280477,	-0.283046,	-0.285612,	-0.288176,	-0.290736,	-0.293294,	-0.295848,	-0.2984,	-0.300949,	-0.303494,	-0.306036,	-0.308576,	-0.311112,	-0.313645,	-0.316175,	-0.318702,	-0.321225,	-0.323745,	-0.326263,	-0.328776,	-0.331287,	-0.333794,	-0.336298,	-0.338799,	-0.341297,	-0.343791,	-0.346281,	-0.348769,	-0.351252,	-0.353733,	-0.35621,	-0.358683,	-0.361153,	-0.36362,	-0.366083,	-0.368542,	-0.370998,	-0.37345,	-0.375899,	-0.378344,	-0.380786,	-0.383224,	-0.385658,	-0.388088,	-0.390515,	-0.392938,	-0.395357,	-0.397773,	-0.400185,	-0.402593,	-0.404997,	-0.407397,	-0.409794,	-0.412187,	-0.414576,	-0.41696,	-0.419342,	-0.421719,	-0.424092,	-0.426461,	-0.428826,	-0.431188,	-0.433545,	-0.435898,	-0.438247,	-0.440592,	-0.442933,	-0.44527,	-0.447603,	-0.449932,	-0.452257,	-0.454577,	-0.456893,	-0.459206,	-0.461514,	-0.463817,	-0.466117,	-0.468412,	-0.470703,	-0.47299,	-0.475272,	-0.47755,	-0.479824,	-0.482093,	-0.484358,	-0.486619,	-0.488875,	-0.491127,	-0.493375,	-0.495618,	-0.497857,	-0.500091,	-0.502321,	-0.504546,	-0.506766,	-0.508983,	-0.511194,	-0.513401,	-0.515604,	-0.517802,	-0.519995,	-0.522184,	-0.524368,	-0.526548,	-0.528723,	-0.530893,	-0.533059,	-0.53522,	-0.537376,	-0.539527,	-0.541674,	-0.543816,	-0.545953,	-0.548086,	-0.550213,	-0.552336,	-0.554454,	-0.556568,	-0.558676,	-0.56078,	-0.562878,	-0.564972,	-0.567061,	-0.569145,	-0.571224,	-0.573299,	-0.575368,	-0.577432,	-0.579492,	-0.581546,	-0.583595,	-0.58564,	-0.587679,	-0.589713,	-0.591743,	-0.593767,	-0.595786,	-0.5978,	-0.599809,	-0.601813,	-0.603812,	-0.605806,	-0.607794,	-0.609778,	-0.611756,	-0.613729,	-0.615697,	-0.617659,	-0.619617,	-0.621569,	-0.623516,	-0.625458,	-0.627395,	-0.629326,	-0.631252,	-0.633172,	-0.635088,	-0.636998,	-0.638903,	-0.640802,	-0.642696,	-0.644585,	-0.646468,	-0.648346,	-0.650219,	-0.652086,	-0.653948,	-0.655805,	-0.657655,	-0.659501,	-0.661341,	-0.663176,	-0.665005,	-0.666829,	-0.668647,	-0.67046,	-0.672267,	-0.674068,	-0.675865,	-0.677655,	-0.67944,	-0.68122,	-0.682994,	-0.684762,	-0.686525,	-0.688282,	-0.690033,	-0.691779,	-0.69352,	-0.695254,	-0.696983,	-0.698707,	-0.700425,	-0.702137,	-0.703843,	-0.705544,	-0.707239,	-0.708928,	-0.710612,	-0.712289,	-0.713961,	-0.715628,	-0.717288,	-0.718943,	-0.720592,	-0.722236,	-0.723873,	-0.725505,	-0.727131,	-0.728751,	-0.730365,	-0.731974,	-0.733576,	-0.735173,	-0.736764,	-0.738349,	-0.739929,	-0.741502,	-0.743069,	-0.744631,	-0.746187,	-0.747736,	-0.74928,	-0.750818,	-0.75235,	-0.753876,	-0.755396,	-0.756911,	-0.758419,	-0.759921,	-0.761417,	-0.762908,	-0.764392,	-0.76587,	-0.767343,	-0.768809,	-0.770269,	-0.771724,	-0.773172,	-0.774614,	-0.77605,	-0.77748,	-0.778904,	-0.780322,	-0.781734,	-0.78314,	-0.78454,	-0.785934,	-0.787321,	-0.788703,	-0.790078,	-0.791448,	-0.792811,	-0.794168,	-0.795519,	-0.796864,	-0.798202,	-0.799535,	-0.800861,	-0.802181,	-0.803495,	-0.804803,	-0.806105,	-0.8074,	-0.80869,	-0.809973,	-0.81125,	-0.81252,	-0.813785,	-0.815043,	-0.816295,	-0.817541,	-0.818781,	-0.820014,	-0.821241,	-0.822462,	-0.823677,	-0.824885,	-0.826087,	-0.827283,	-0.828473,	-0.829656,	-0.830833,	-0.832004,	-0.833168,	-0.834327,	-0.835478,	-0.836624,	-0.837763,	-0.838896,	-0.840023,	-0.841143,	-0.842257,	-0.843365,	-0.844466,	-0.845561,	-0.84665,	-0.847732,	-0.848808,	-0.849878,	-0.850941,	-0.851998,	-0.853049,	-0.854093,	-0.855131,	-0.856162,	-0.857187,	-0.858206,	-0.859218,	-0.860224,	-0.861224,	-0.862217,	-0.863204,	-0.864184,	-0.865158,	-0.866125,	-0.867086,	-0.868041,	-0.868989,	-0.869931,	-0.870867,	-0.871796,	-0.872718,	-0.873635,	-0.874544,	-0.875448,	-0.876344,	-0.877235,	-0.878119,	-0.878996,	-0.879867,	-0.880732,	-0.88159,	-0.882442,	-0.883287,	-0.884126,	-0.884958,	-0.885784,	-0.886603,	-0.887416,	-0.888223,	-0.889023,	-0.889816,	-0.890603,	-0.891384,	-0.892158,	-0.892925,	-0.893687,	-0.894441,	-0.895189,	-0.895931,	-0.896666,	-0.897395,	-0.898117,	-0.898832,	-0.899542,	-0.900244,	-0.90094,	-0.90163,	-0.902313,	-0.90299,	-0.90366,	-0.904323,	-0.904981,	-0.905631,	-0.906275,	-0.906913,	-0.907544,	-0.908168,	-0.908787,	-0.909398,	-0.910003,	-0.910602,	-0.911193,	-0.911779,	-0.912358,	-0.91293,	-0.913496,	-0.914056,	-0.914608,	-0.915155,	-0.915694,	-0.916228,	-0.916755,	-0.917275,	-0.917788,	-0.918296,	-0.918796,	-0.91929,	-0.919778,	-0.920259,	-0.920734,	-0.921202,	-0.921663,	-0.922118,	-0.922567,	-0.923009,	-0.923444,	-0.923873,	-0.924295,	-0.924711,	-0.925121,	-0.925523,	-0.92592,	-0.926309,	-0.926693,	-0.927069,	-0.92744,	-0.927803,	-0.92816,	-0.928511,	-0.928855,	-0.929193,	-0.929524,	-0.929848,	-0.930166,	-0.930478,	-0.930783,	-0.931082,	-0.931374,	-0.931659,	-0.931938,	-0.932211,	-0.932477,	-0.932736,	-0.932989,	-0.933236,	-0.933475,	-0.933709,	-0.933936,	-0.934156,	-0.93437,	-0.934578,	-0.934779,	-0.934973,	-0.935161,	-0.935343,	-0.935518,	-0.935687,	-0.935849,	-0.936004,	-0.936153,	-0.936296,	-0.936432,	-0.936562,	-0.936685,	-0.936802,	-0.936912,	-0.937016,	-0.937113,	-0.937204,	-0.937288,	-0.937366,	-0.937438,	-0.937503,	-0.937562,	-0.937614,	-0.937659,	-0.937699,	-0.937731,	-0.937758,	-0.937778,	-0.937791,	-0.937798,	-0.937799,	-0.937793,	-0.937781,	-0.937762,	-0.937737,	-0.937706,	-0.937668,	-0.937624,	-0.937573,	-0.937516,	-0.937452,	-0.937382,	-0.937306,	-0.937223,	-0.937134,	-0.937039,	-0.936937,	-0.936829,	-0.936714,	-0.936593,	-0.936466,	-0.936332,	-0.936192,	-0.936045,	-0.935892,	-0.935733,	-0.935568,	-0.935396,	-0.935218,	-0.935033,	-0.934842,	-0.934645,	-0.934441,	-0.934231,	-0.934015,	-0.933792,	-0.933563,	-0.933328,	-0.933087,	-0.932839,	-0.932585,	-0.932324,	-0.932058,	-0.931785,	-0.931505,	-0.93122,	-0.930928,	-0.93063,	-0.930325,	-0.930014,	-0.929697,	-0.929374,	-0.929045,	-0.928709,	-0.928367,	-0.928019,	-0.927664,	-0.927304,	-0.926937,	-0.926563,	-0.926184,	-0.925798,	-0.925407,	-0.925009,	-0.924604,	-0.924194,	-0.923777,	-0.923354,	-0.922925,	-0.92249,	-0.922049,	-0.921601,	-0.921147,	-0.920687,	-0.920221,	-0.919749,	-0.919271,	-0.918786,	-0.918296,	-0.917799,	-0.917296,	-0.916787,	-0.916272,	-0.91575,	-0.915223,	-0.914689,	-0.91415,	-0.913604,	-0.913052,	-0.912494,	-0.91193,	-0.91136,	-0.910784,	-0.910202,	-0.909614,	-0.909019,	-0.908419,	-0.907812,	-0.9072,	-0.906581,	-0.905957,	-0.905326,	-0.90469,	-0.904047,	-0.903399,	-0.902744,	-0.902083,	-0.901417,	-0.900744,	-0.900066,	-0.899381,	-0.89869,	-0.897994,	-0.897291,	-0.896583,	-0.895869,	-0.895148,	-0.894422,	-0.89369,	-0.892952,	-0.892208,	-0.891458,	-0.890702,	-0.88994,	-0.889173,	-0.888399,	-0.88762,	-0.886834,	-0.886043,	-0.885246,	-0.884443,	-0.883635,	-0.88282,	-0.881999,	-0.881173,	-0.880341,	-0.879503,	-0.878659,	-0.87781,	-0.876954,	-0.876093,	-0.875226,	-0.874353,	-0.873475,	-0.872591,	-0.8717,	-0.870805,	-0.869903,	-0.868996,	-0.868082,	-0.867164,	-0.866239,	-0.865309,	-0.864373,	-0.863431,	-0.862483,	-0.86153,	-0.860571,	-0.859607,	-0.858637,	-0.857661,	-0.856679,	-0.855692,	-0.854699,	-0.853701,	-0.852696,	-0.851687,	-0.850671,	-0.84965,	-0.848624,	-0.847591,	-0.846553,	-0.84551,	-0.844461,	-0.843406,	-0.842346,	-0.84128,	-0.840209,	-0.839132,	-0.83805,	-0.836962,	-0.835868,	-0.834769,	-0.833665,	-0.832555,	-0.831439,	-0.830318,	-0.829192,	-0.82806,	-0.826922,	-0.825779,	-0.824631,	-0.823477,	-0.822318,	-0.821153,	-0.819983,	-0.818807,	-0.817626,	-0.81644,	-0.815248,	-0.814051,	-0.812848,	-0.81164,	-0.810427,	-0.809208,	-0.807984,	-0.806755,	-0.80552,	-0.80428,	-0.803034,	-0.801784,	-0.800528,	-0.799266,	-0.797999,	-0.796727,	-0.79545,	-0.794168,	-0.79288,	-0.791587,	-0.790288,	-0.788985,	-0.787676,	-0.786362,	-0.785043,	-0.783718,	-0.782389,	-0.781054,	-0.779714,	-0.778368,	-0.777018,	-0.775662,	-0.774301,	-0.772936,	-0.771564,	-0.770188,	-0.768807,	-0.76742,	-0.766029,	-0.764632,	-0.76323,	-0.761823,	-0.760411,	-0.758994,	-0.757572,	-0.756145,	-0.754713,	-0.753276,	-0.751833,	-0.750386,	-0.748933,	-0.747476,	-0.746014,	-0.744546,	-0.743074,	-0.741597,	-0.740114,	-0.738627,	-0.737135,	-0.735638,	-0.734135,	-0.732628,	-0.731116,	-0.729599,	-0.728078,	-0.726551,	-0.725019,	-0.723483,	-0.721942,	-0.720395,	-0.718844,	-0.717288,	-0.715727,	-0.714162,	-0.712591,	-0.711016,	-0.709436,	-0.707851,	-0.706262,	-0.704667,	-0.703068,	-0.701464,	-0.699855,	-0.698242,	-0.696624,	-0.695001,	-0.693373,	-0.69174,	-0.690103,	-0.688462,	-0.686815,	-0.685164,	-0.683508,	-0.681847,	-0.680182,	-0.678512,	-0.676838,	-0.675159,	-0.673475,	-0.671787,	-0.670094,	-0.668396,	-0.666694,	-0.664987,	-0.663276,	-0.66156,	-0.65984,	-0.658115,	-0.656385,	-0.654651,	-0.652913,	-0.65117,	-0.649422,	-0.64767,	-0.645913,	-0.644152,	-0.642387,	-0.640617,	-0.638842,	-0.637064,	-0.63528,	-0.633493,	-0.6317,	-0.629904,	-0.628103,	-0.626298,	-0.624488,	-0.622674,	-0.620855,	-0.619033,	-0.617205,	-0.615374,	-0.613538,	-0.611698,	-0.609854,	-0.608005,	-0.606152,	-0.604294,	-0.602433,	-0.600567,	-0.598697,	-0.596822,	-0.594944,	-0.593061,	-0.591174,	-0.589283,	-0.587387,	-0.585487,	-0.583583,	-0.581675,	-0.579763,	-0.577847,	-0.575926,	-0.574002,	-0.572073,	-0.57014,	-0.568203,	-0.566262,	-0.564316,	-0.562367,	-0.560413,	-0.558456,	-0.556494,	-0.554529,	-0.552559,	-0.550585,	-0.548608,	-0.546626,	-0.54464,	-0.54265,	-0.540657,	-0.538659,	-0.536657,	-0.534652,	-0.532642,	-0.530629,	-0.528611,	-0.52659,	-0.524564,	-0.522535,	-0.520502,	-0.518465,	-0.516424,	-0.514379,	-0.512331,	-0.510278,	-0.508222,	-0.506162,	-0.504098,	-0.50203,	-0.499958,	-0.497883,	-0.495804,	-0.493721,	-0.491634,	-0.489543,	-0.487449,	-0.485351,	-0.483249,	-0.481144,	-0.479035,	-0.476922,	-0.474805,	-0.472685,	-0.470561,	-0.468433,	-0.466302,	-0.464167,	-0.462028,	-0.459886,	-0.45774,	-0.455591,	-0.453438,	-0.451281,	-0.449121,	-0.446957,	-0.44479,	-0.442619,	-0.440444,	-0.438266,	-0.436084,	-0.433899,	-0.431711,	-0.429519,	-0.427323,	-0.425124,	-0.422921,	-0.420715,	-0.418506,	-0.416293,	-0.414076,	-0.411857,	-0.409633,	-0.407407,	-0.405177,	-0.402943,	-0.400706,	-0.398466,	-0.396223,	-0.393976,	-0.391725,	-0.389472,	-0.387215,	-0.384955,	-0.382691,	-0.380424,	-0.378154,	-0.37588,	-0.373604,	-0.371324,	-0.369041,	-0.366754,	-0.364464,	-0.362171,	-0.359875,	-0.357576,	-0.355273,	-0.352968,	-0.350659,	-0.348347,	-0.346031,	-0.343713,	-0.341391,	-0.339067,	-0.336739,	-0.334408,	-0.332074,	-0.329737,	-0.327397,	-0.325053,	-0.322707,	-0.320358,	-0.318005,	-0.31565,	-0.313291,	-0.31093,	-0.308565,	-0.306198,	-0.303827,	-0.301453,	-0.299077,	-0.296697,	-0.294315,	-0.29193,	-0.289541,	-0.28715,	-0.284756,	-0.282359,	-0.279959,	-0.277556,	-0.27515,	-0.272742,	-0.27033,	-0.267916,	-0.265499,	-0.263079,	-0.260656,	-0.25823,	-0.255802,	-0.253371,	-0.250937,	-0.2485,	-0.24606,	-0.243618,	-0.241173,	-0.238725,	-0.236274,	-0.233821,	-0.231365,	-0.228906,	-0.226445,	-0.223981,	-0.221514,	-0.219045,	-0.216573,	-0.214098,	-0.21162,	-0.20914,	-0.206658,	-0.204173,	-0.201685,	-0.199194,	-0.196701,	-0.194206,	-0.191707,	-0.189207,	-0.186703,	-0.184198,	-0.181689,	-0.179178,	-0.176665,	-0.174149,	-0.171631,	-0.16911,	-0.166587,	-0.164061,	-0.161533,	-0.159002,	-0.156469,	-0.153933,	-0.151396,	-0.148855,	-0.146312,	-0.143767,	-0.14122,	-0.13867,	-0.136118,	-0.133563,	-0.131006,	-0.128447,	-0.125885,	-0.123321,	-0.120755,	-0.118186,	-0.115616,	-0.113042,	-0.110467,	-0.107889,	-0.10531,	-0.102727,	-0.100143,	-0.0975565,	-0.0949677,	-0.0923767,	-0.0897835,	-0.0871881,	-0.0845906,	-0.0819908,	-0.0793889,	-0.0767849,	-0.0741787,	-0.0715704,	-0.0689599,	-0.0663474,	-0.0637327,	-0.0611159,	-0.0584971,	-0.0558762,	-0.0532532,	-0.0506281,	-0.048001,	-0.0453719,	-0.0427407,	-0.0401075,	-0.0374723,	-0.034835,	-0.0321958,	-0.0295546,	-0.0269114,	-0.0242663,	-0.0216192,	-0.0189701,	-0.0163191,	-0.0136662,	-0.0110113,	-0.00835451,	-0.00569582,	-0.00303524,	-0.000372774,	0.00229157,	0.00495779,	0.00762587,	0.0102958,	0.0129676,	0.0156412,	0.0183166,	0.0209939,	0.0236729,	0.0263538,	0.0290364,	0.0317208,	0.034407,	0.037095,	0.0397847,	0.0424761,	0.0451693,	0.0478642,	0.0505609,	0.0532592,	0.0559592,	0.058661,	0.0613644,	0.0640694,	0.0667762,	0.0694846,	0.0721946,	0.0749063,	0.0776196,	0.0803346,	0.0830511,	0.0857693,	0.088489,	0.0912103,	0.0939332,	0.0966577,	0.0993837,	0.102111,	0.10484,	0.107571,	0.110303,	0.113037,	0.115772,	0.118509,	0.121247,	0.123987,	0.126728,	0.12947,	0.132214,	0.13496,	0.137707,	0.140455,	0.143205,	0.145956,	0.148708,	0.151462,	0.154218,	0.156974,	0.159733,	0.162492,	0.165253,	0.168015,	0.170778,	0.173543,	0.176309,	0.179077,	0.181845,	0.184615,	0.187386,	0.190159,	0.192933,	0.195708,	0.198484,	0.201262,	0.20404,	0.20682,	0.209601,	0.212384,	0.215167,	0.217952,	0.220738,	0.223525,	0.226313,	0.229103,	0.231893,	0.234685,	0.237478,	0.240272,	0.243067,	0.245863,	0.24866,	0.251458,	0.254258,	0.257058,	0.25986,	0.262662,	0.265466,	0.26827,	0.271076,	0.273883,	0.27669,	0.279499,	0.282309,	0.285119,	0.287931,	0.290743,	0.293557,	0.296371,	0.299187,	0.302003,	0.30482,	0.307639,	0.310458,	0.313278,	0.316098,	0.31892,	0.321743,	0.324566,	0.327391,	0.330216,	0.333042,	0.335869,	0.338696,	0.341525,	0.344354,	0.347184,	0.350015,	0.352847,	0.355679,	0.358513,	0.361346,	0.364181,	0.367017,	0.369853,	0.37269,	0.375527,	0.378366,	0.381205,	0.384045,	0.386885,	0.389726,	0.392568,	0.39541,	0.398253,	0.401097,	0.403942,	0.406787,	0.409632,	0.412478,	0.415325,	0.418173,	0.421021,	0.423869,	0.426718,	0.429568,	0.432419,	0.435269,	0.438121,	0.440973,	0.443825,	0.446678,	0.449532,	0.452385,	0.45524,	0.458095,	0.46095,	0.463806,	0.466663,	0.469519,	0.472377,	0.475234,	0.478092,	0.480951,	0.48381,	0.486669,	0.489529,	0.492389,	0.49525,	0.498111,	0.500972,	0.503834,	0.506696,	0.509558,	0.512421,	0.515284,	0.518147,	0.521011,	0.523875,	0.526739,	0.529603,	0.532468,	0.535333,	0.538199,	0.541064,	0.54393,	0.546796,	0.549663,	0.552529,	0.555396,	0.558263,	0.56113,	0.563998,	0.566866,	0.569733,	0.572601,	0.57547,	0.578338,	0.581206,	0.584075,	0.586944,	0.589813,	0.592682,	0.595551,	0.59842,	0.601289,	0.604159,	0.607028,	0.609898,	0.612768,	0.615638,	0.618507,	0.621377,	0.624247,	0.627117,	0.629987,	0.632857,	0.635727,	0.638597,	0.641467,	0.644337,	0.647207,	0.650077,	0.652947,	0.655817,	0.658687,	0.661557,	0.664426,	0.667296,	0.670166,	0.673035,	0.675905,	0.678774,	0.681643,	0.684513,	0.687382,	0.690251,	0.693119,	0.695988,	0.698856,	0.701725,	0.704593,	0.707461,	0.710329,	0.713197,	0.716064,	0.718931,	0.721798,	0.724665,	0.727532,	0.730398,	0.733265,	0.736131,	0.738996,	0.741862,	0.744727,	0.747592,	0.750457,	0.753321,	0.756185,	0.759049,	0.761913,	0.764776,	0.767639,	0.770502,	0.773364,	0.776226,	0.779088,	0.781949,	0.78481,	0.78767,	0.790531,	0.79339,	0.79625,	0.799109,	0.801968,	0.804826,	0.807684,	0.810541,	0.813398,	0.816255,	0.819111,	0.821967,	0.824822,	0.827677,	0.830531,	0.833385,	0.836239,	0.839092,	0.841944,	0.844796,	0.847648,	0.850499,	0.853349,	0.856199,	0.859049,	0.861897,	0.864746,	0.867594,	0.870441,	0.873288,	0.876134,	0.878979,	0.881824,	0.884669,	0.887513,	0.890356,	0.893198,	0.89604,	0.898882,	0.901723,	0.904563,	0.907402,	0.910241,	0.913079,	0.915917,	0.918754,	0.92159,	0.924426,	0.927261,	0.930095,	0.932928,	0.935761,	0.938593,	0.941425,	0.944255,	0.947085,	0.949915,	0.952743,	0.955571,	0.958398,	0.961224,	0.96405,	0.966874,	0.969698,	0.972522,	0.975344,	0.978166,	0.980986,	0.983806,	0.986626,	0.989444,	0.992262,	0.995078,	0.997894,	1.00071,	1.00352,	1.00634,	1.00915,	1.01196,	1.01477,	1.01758,	1.02039,	1.0232,	1.02601,	1.02881,	1.03162,	1.03442,	1.03723,	1.04003,	1.04283,	1.04563,	1.04843,	1.05123,	1.05403,	1.05683,	1.05962,	1.06242,	1.06521,	1.068,	1.0708,	1.07359,	1.07638,	1.07917,	1.08196,	1.08474,	1.08753,	1.09031,	1.0931,	1.09588,	1.09866,	1.10144,	1.10422,	1.107,	1.10978,	1.11256,	1.11533,	1.11811,	1.12088,	1.12365,	1.12643,	1.1292,	1.13197,	1.13473,	1.1375,	1.14027,	1.14303,	1.14579,	1.14856,	1.15132,	1.15408,	1.15684,	1.15959,	1.16235,	1.16511,	1.16786,	1.17061,	1.17337,	1.17612,	1.17887,	1.18161,	1.18436,	1.18711,	1.18985,	1.1926,	1.19534,	1.19808,	1.20082,	1.20356,	1.20629,	1.20903,	1.21176,	1.2145,	1.21723,	1.21996,	1.22269,	1.22542,	1.22815,	1.23087,	1.2336,	1.23632,	1.23904,	1.24176,	1.24448,	1.2472,	1.24992,	1.25263,	1.25534,	1.25806,	1.26077,	1.26348,	1.26619,	1.26889,	1.2716,	1.2743,	1.27701,	1.27971,	1.28241,	1.28511,	1.2878,	1.2905,	1.29319,	1.29589,	1.29858,	1.30127,	1.30396,	1.30664,	1.30933,	1.31202,	1.3147,	1.31738,	1.32006,	1.32274,	1.32542,	1.32809,	1.33077,	1.33344,	1.33611,	1.33878,	1.34145,	1.34411,	1.34678,	1.34944,	1.35211,	1.35477,	1.35743,	1.36008,	1.36274,	1.36539,	1.36805,	1.3707,	1.37335,	1.376,	1.37864,	1.38129,	1.38393,	1.38658,	1.38922,	1.39185,	1.39449,	1.39713,	1.39976,	1.40239,	1.40503,	1.40765,	1.41028,	1.41291,	1.41553,	1.41816,	1.42078,	1.4234,	1.42602,	1.42863,	1.43125,	1.43386,	1.43647,	1.43908,	1.44169,	1.44429,	1.4469,	1.4495,	1.4521,	1.4547,	1.4573,	1.4599,	1.46249,	1.46509,	1.46768,	1.47027,	1.47285,	1.47544,	1.47802,	1.48061,	1.48319,	1.48577,	1.48834,	1.49092,	1.49349,	1.49607,	1.49864,	1.5012,	1.50377,	1.50634,	1.5089,	1.51146,	1.51402,	1.51658,	1.51914,	1.52169,	1.52424,	1.52679,	1.52934,	1.53189,	1.53443,	1.53698,	1.53952,	1.54206,	1.5446,	1.54713,	1.54967,	1.5522,	1.55473,	1.55726,	1.55979,	1.56231,	1.56484,	1.56736,	1.56988,	1.5724,	1.57491,	1.57743,	1.57994,	1.58245,	1.58496,	1.58746,	1.58997,	1.59247,	1.59497,	1.59747,	1.59997,	1.60246,	1.60496,	1.60745,	1.60994,	1.61242,	1.61491,	1.61739,	1.61987,	1.62235,	1.62483,	1.62731,	1.62978,	1.63225,	1.63472,	1.63719,	1.63966,	1.64212,	1.64458,	1.64704,	1.6495,	1.65196,	1.65441,	1.65686,	1.65931,	1.66176,	1.66421,	1.66665,	1.66909,	1.67153,	1.67397,	1.67641,	1.67884,	1.68128,	1.68371,	1.68613,	1.68856,	1.69098,	1.69341,	1.69583,	1.69824,	1.70066,	1.70307,	1.70549,	1.7079,	1.7103,	1.71271,	1.71511,	1.71751,	1.71991,	1.72231,	1.72471,	1.7271,	1.72949,	1.73188,	1.73427,	1.73665,	1.73903,	1.74141,	1.74379,	1.74617,	1.74854,	1.75092,	1.75329,	1.75565,	1.75802,	1.76038,	1.76275,	1.76511,	1.76746,	1.76982,	1.77217,	1.77452,	1.77687,	1.77922,	1.78156,	1.78391,	1.78625,	1.78858,	1.79092,	1.79325,	1.79559,	1.79791,	1.80024,	1.80257,	1.80489,	1.80721,	1.80953,	1.81185,	1.81416,	1.81647,	1.81878,	1.82109,	1.8234,	1.8257,	1.828,	1.8303,	1.8326,	1.83489,	1.83718,	1.83947,	1.84176,	1.84405,	1.84633,	1.84861,	1.85089,	1.85317,	1.85544,	1.85771,	1.85998,	1.86225,	1.86452,	1.86678,	1.86904,	1.8713,	1.87356,	1.87581,	1.87807,	1.88031,	1.88256,	1.88481,	1.88705,	1.88929,	1.89153,	1.89377,	1.896,	1.89823,	1.90046,	1.90269,	1.90491,	1.90714,	1.90936,	1.91158,	1.91379,	1.91601,	1.91822,	1.92043,	1.92263,	1.92484,	1.92704,	1.92924,	1.93144,	1.93363,	1.93582,	1.93801,	1.9402,	1.94239,	1.94457,	1.94675,	1.94893,	1.95111,	1.95328,	1.95545,	1.95762,	1.95979,	1.96196,	1.96412,	1.96628,	1.96844,	1.97059,	1.97275,	1.9749,	1.97705,	1.97919,	1.98134,	1.98348,	1.98562,	1.98775,	1.98989,	1.99202,	1.99415,	1.99628,	1.9984,	2.00052,	2.00264,	2.00476,	2.00688,	2.00899,	2.0111,	2.01321,	2.01531,	2.01742,	2.01952,	2.02162,	2.02371,	2.02581,	2.0279,	2.02999,	2.03208,	2.03416,	2.03624,	2.03832,	2.0404,	2.04247,	2.04455,	2.04662,	2.04868,	2.05075,	2.05281,	2.05487,	2.05693,	2.05899,	2.06104,	2.06309,	2.06514,	2.06718,	2.06923,	2.07127,	2.07331,	2.07534,	2.07738,	2.07941,	2.08144,	2.08346,	2.08549,	2.08751,	2.08953,	2.09154,	2.09356,	2.09557,	2.09758,	2.09959,	2.10159,	2.10359,	2.10559,	2.10759,	2.10958,	2.11157,	2.11356,	2.11555,	2.11754,	2.11952,	2.1215,	2.12348,	2.12545,	2.12742,	2.12939,	2.13136,	2.13333,	2.13529,	2.13725,	2.13921,	2.14116,	2.14311,	2.14506,	2.14701,	2.14896,	2.1509,	2.15284,	2.15478,	2.15671,	2.15865,	2.16058,	2.1625,	2.16443,	2.16635,	2.16827,	2.17019,	2.17211,	2.17402,	2.17593,	2.17784,	2.17974,	2.18164,	2.18354,	2.18544,	2.18734,	2.18923,	2.19112,	2.19301,	2.19489,	2.19678,	2.19866,	2.20054,	2.20241,	2.20428,	2.20615,	2.20802,	2.20989,	2.21175,	2.21361,	2.21547,	2.21732,	2.21918,	2.22103,	2.22287,	2.22472,	2.22656,	2.2284,	2.23024,	2.23207,	2.23391,	2.23574,	2.23756,	2.23939,	2.24121,	2.24303,	2.24485,	2.24666,	2.24848,	2.25029,	2.25209,	2.2539,	2.2557,	2.2575,	2.2593,	2.26109,	2.26288,	2.26467,	2.26646,	2.26824,	2.27003,	2.2718,	2.27358,	2.27536,	2.27713,	2.2789,	2.28066,	2.28243,	2.28419,	2.28595,	2.2877,	2.28946,	2.29121,	2.29296,	2.2947,	2.29645,	2.29819,	2.29993,	2.30166,	2.3034,	2.30513,	2.30686,	2.30858,	2.31031,	2.31203,	2.31374,	2.31546,	2.31717,	2.31888,	2.32059,	2.3223,	2.324,	2.3257,	2.3274,	2.32909,	2.33079,	2.33248,	2.33416,	2.33585,	2.33753,	2.33921,	2.34089,	2.34256,	2.34424,	2.34591,	2.34757,	2.34924,	2.3509,	2.35256,	2.35421,	2.35587,	2.35752,	2.35917,	2.36082,	2.36246,	2.3641,	2.36574,	2.36738,	2.36901,	2.37064,	2.37227,	2.3739,	2.37552,	2.37714,	2.37876,	2.38037,	2.38199,	2.3836,	2.38521,	2.38681,	2.38842,	2.39002,	2.39161,	2.39321,	2.3948,	2.39639,	2.39798,	2.39956,	2.40115,	2.40273,	2.4043,	2.40588,	2.40745,	2.40902,	2.41059,	2.41215,	2.41371,	2.41527,	2.41683,	2.41838,	2.41994,	2.42148,	2.42303,	2.42457,	2.42612,	2.42765,	2.42919,	2.43072,	2.43226,	2.43378,	2.43531,	2.43683,	2.43835,	2.43987,	2.44139,	2.4429,	2.44441,	2.44592,	2.44743,	2.44893,	2.45043,	2.45193,	2.45342,	2.45491,	2.4564,	2.45789,	2.45938,	2.46086,	2.46234,	2.46382,	2.46529,	2.46676,	2.46823,	2.4697,	2.47116,	2.47262,	2.47408,	2.47554,	2.47699,	2.47845,	2.47989,	2.48134,	2.48279,	2.48423,	2.48567,	2.4871,	2.48854,	2.48997,	2.49139,	2.49282,	2.49424,	2.49566,	2.49708,	2.4985,	2.49991,	2.50132,	2.50273,	2.50414,	2.50554,	2.50694,	2.50834,	2.50973,	2.51113,	2.51252,	2.5139,	2.51529,	2.51667,	2.51805,	2.51943,	2.5208,	2.52217,	2.52354,	2.52491,	2.52628,	2.52764,	2.529,	2.53036,	2.53171,	2.53306,	2.53441,	2.53576,	2.5371,	2.53844,	2.53978,	2.54112,	2.54245,	2.54379,	2.54511,	2.54644,	2.54776,	2.54909,	2.5504,	2.55172,	2.55303,	2.55435,	2.55565,	2.55696,	2.55826,	2.55957,	2.56086,	2.56216,	2.56345,	2.56474,	2.56603,	2.56732,	2.5686,	2.56988,	2.57116,	2.57244,	2.57371,	2.57498,	2.57625,	2.57751,	2.57878,	2.58004,	2.5813,	2.58255,	2.58381,	2.58506,	2.5863,	2.58755,	2.58879,	2.59003,	2.59127,	2.59251,	2.59374,	2.59497,	2.5962,	2.59742,	2.59865,	2.59987,	2.60108,	2.6023,	2.60351,	2.60472,	2.60593,	2.60713,	2.60834,	2.60954,	2.61074,	2.61193,	2.61312,	2.61431,	2.6155,	2.61669,	2.61787,	2.61905,	2.62023,	2.6214,	2.62258,	2.62375,	2.62491,	2.62608,	2.62724,	2.6284,	2.62956,	2.63071,	2.63187,	2.63302,	2.63417,	2.63531,	2.63645,	2.63759,	2.63873,	2.63987,	2.641,	2.64213,	2.64326,	2.64438,	2.64551,	2.64663,	2.64775,	2.64886,	2.64997,	2.65108,	2.65219,	2.6533,	2.6544,	2.6555,	2.6566,	2.6577,	2.65879,	2.65988,	2.66097,	2.66206,	2.66314,	2.66422,	2.6653,	2.66637,	2.66745,	2.66852,	2.66959,	2.67065,	2.67172,	2.67278,	2.67384,	2.6749,	2.67595,	2.677,	2.67805,	2.6791,	2.68014,	2.68118,	2.68222,	2.68326,	2.68429,	2.68533,	2.68636,	2.68738,	2.68841,	2.68943,	2.69045,	2.69147,	2.69248,	2.69349,	2.6945,	2.69551,	2.69652,	2.69752,	2.69852,	2.69952,	2.70052,	2.70151,	2.7025,	2.70349,	2.70447,	2.70546,	2.70644,	2.70742,	2.70839,	2.70937,	2.71034,	2.71131,	2.71228,	2.71324,	2.7142,	2.71516,	2.71612,	2.71707,	2.71803,	2.71898,	2.71992,	2.72087,	2.72181,	2.72275,	2.72369,	2.72462,	2.72556,	2.72649,	2.72742,	2.72834,	2.72927,	2.73019,	2.73111,	2.73202,	2.73294,	2.73385,	2.73476,	2.73567,	2.73657,	2.73747,	2.73837,	2.73927,	2.74017,	2.74106,	2.74195,	2.74284,	2.74372,	2.74461,	2.74549,	2.74637,	2.74724,	2.74812,	2.74899,	2.74986,	2.75073,	2.75159,	2.75245,	2.75331,	2.75417,	2.75503,	2.75588,	2.75673,	2.75758,	2.75842,	2.75927,	2.76011,	2.76095,	2.76178,	2.76262,	2.76345,	2.76428,	2.76511,	2.76593,	2.76676,	2.76758,	2.76839,	2.76921,	2.77002,	2.77083,	2.77164,	2.77245,	2.77325,	2.77406,	2.77486,	2.77565,	2.77645,	2.77724,	2.77803,	2.77882,	2.77961,	2.78039,	2.78117,	2.78195,	2.78273,	2.7835,	2.78427,	2.78504,	2.78581,	2.78658,	2.78734,	2.7881,	2.78886,	2.78961,	2.79037,	2.79112,	2.79187,	2.79262,	2.79336,	2.7941,	2.79484,	2.79558,	2.79632,	2.79705,	2.79778,	2.79851,	2.79924,	2.79996,	2.80069,	2.80141,	2.80212,	2.80284,	2.80355,	2.80427,	2.80497,	2.80568,	2.80639,	2.80709,	2.80779,	2.80849,	2.80918,	2.80987,	2.81057,	2.81125,	2.81194,	2.81263,	2.81331,	2.81399,	2.81467,	2.81534,	2.81601,	2.81669,	2.81735,	2.81802,	2.81869,	2.81935,	2.82001,	2.82067,	2.82132,	2.82198,	2.82263,	2.82328,	2.82392,	2.82457,	2.82521,	2.82585,	2.82649,	2.82713,	2.82776,	2.82839,	2.82902,	2.82965,	2.83027,	2.8309,	2.83152,	2.83214,	2.83275,	2.83337,	2.83398,	2.83459,	2.8352,	2.8358,	2.83641,	2.83701,	2.83761,	2.83821,	2.8388,	2.83939,	2.83999,	2.84057,	2.84116,	2.84174,	2.84233,	2.84291,	2.84349,	2.84406,	2.84463,	2.84521,	2.84578,	2.84634,	2.84691,	2.84747,	2.84803,	2.84859,	2.84915,	2.8497,	2.85026,	2.85081,	2.85136,	2.8519,	2.85245,	2.85299,	2.85353,	2.85407,	2.8546,	2.85514,	2.85567,	2.8562,	2.85672,	2.85725,	2.85777,	2.85829,	2.85881,	2.85933,	2.85985,	2.86036,	2.86087,	2.86138,	2.86189,	2.86239,	2.86289,	2.86339,	2.86389,	2.86439,	2.86488,	2.86538,	2.86587,	2.86635,	2.86684,	2.86732,	2.86781,	2.86829,	2.86877,	2.86924,	2.86972,	2.87019,	2.87066,	2.87113,	2.87159,	2.87206,	2.87252,	2.87298,	2.87344,	2.87389,	2.87434,	2.8748,	2.87525,	2.87569,	2.87614,	2.87658,	2.87703,	2.87747,	2.8779,	2.87834,	2.87877,	2.87921,	2.87964,	2.88006,	2.88049,	2.88091,	2.88133,	2.88175,	2.88217,	2.88259,	2.883,	2.88341,	2.88383,	2.88423,	2.88464,	2.88504,	2.88545,	2.88585,	2.88624,	2.88664,	2.88704,	2.88743,	2.88782,	2.88821,	2.88859,	2.88898,	2.88936,	2.88974,	2.89012,	2.8905,	2.89087,	2.89125,	2.89162,	2.89199,	2.89235,	2.89272,	2.89308,	2.89345,	2.8938,	2.89416,	2.89452,	2.89487,	2.89522,	2.89557,	2.89592,	2.89627,	2.89661,	2.89696,	2.8973,	2.89764,	2.89797,	2.89831,	2.89864,	2.89897,	2.8993,	2.89963,	2.89996,	2.90028,	2.9006,	2.90092,	2.90124,	2.90156,	2.90187,	2.90218,	2.90249,	2.9028,	2.90311,	2.90341,	2.90372,	2.90402,	2.90432,	2.90462,	2.90491,	2.90521,	2.9055,	2.90579,	2.90608,	2.90636,	2.90665,	2.90693,	2.90721,	2.90749,	2.90777,	2.90805,	2.90832,	2.90859,	2.90886,	2.90913,	2.9094,	2.90966,	2.90993,	2.91019,	2.91045,	2.91071,	2.91096,	2.91122,	2.91147,	2.91172,	2.91197,	2.91222,	2.91246,	2.9127,	2.91295,	2.91319,	2.91342,	2.91366,	2.9139,	2.91413,	2.91436,	2.91459,	2.91482,	2.91504,	2.91527,	2.91549,	2.91571,	2.91593,	2.91615,	2.91636,	2.91657,	2.91679,	2.917,	2.91721,	2.91741,	2.91762,	2.91782,	2.91802,	2.91822,	2.91842,	2.91862,	2.91881,	2.919,	2.91919,	2.91938,	2.91957,	2.91976,	2.91994,	2.92013,	2.92031,	2.92049,	2.92066,	2.92084,	2.92101,	2.92119,	2.92136,	2.92153,	2.92169,	2.92186,	2.92202,	2.92219,	2.92235,	2.92251,	2.92266,	2.92282,	2.92297,	2.92313,	2.92328,	2.92343,	2.92357,	2.92372,	2.92386,	2.92401,	2.92415,	2.92429,	2.92442,	2.92456,	2.92469,	2.92483,	2.92496,	2.92509,	2.92522,	2.92534,	2.92547,	2.92559,	2.92571,	2.92583,	2.92595,	2.92607,	2.92618,	2.92629,	2.92641,	2.92652,	2.92662,	2.92673,	2.92684,	2.92694,	2.92704,	2.92714,	2.92724,	2.92734,	2.92743,	2.92753,	2.92762,	2.92771,	2.9278,	2.92789,	2.92798,	2.92806,	2.92814,	2.92823,	2.92831,	2.92838,	2.92846,	2.92854,	2.92861,	2.92868,	2.92875,	2.92882,	2.92889,	2.92896,	2.92902,	2.92909,	2.92915,	2.92921,	2.92927,	2.92932,	2.92938,	2.92943,	2.92948,	2.92954,	2.92958,	2.92963,	2.92968,	2.92972,	2.92977,	2.92981,	2.92985,	2.92989,	2.92993,	2.92996,	2.93,	2.93003,	2.93006,	2.93009,	2.93012,	2.93015,	2.93017,	2.9302,	2.93022,	2.93024,	2.93026,	2.93028,	2.93029,	2.93031,	2.93032,	2.93034,	2.93035,	2.93036,	2.93036,	2.93037,	2.93038,	2.93038,	2.93038,	2.93038,	2.93038,	2.93038,	2.93038,	2.93037,	2.93036,	2.93036,	2.93035,	2.93034,	2.93032,	2.93031,	2.9303,	2.93028,	2.93026,	2.93024,	2.93022,	2.9302,	2.93018,	2.93015,	2.93013,	2.9301,	2.93007,	2.93004,	2.93001,	2.92998,	2.92994,	2.92991,	2.92987,	2.92983,	2.92979,	2.92975,	2.92971,	2.92966,	2.92962,	2.92957,	2.92952,	2.92947,	2.92942,	2.92937,	2.92932,	2.92926,	2.9292,	2.92915,	2.92909,	2.92903,	2.92897,	2.9289,	2.92884,	2.92877,	2.92871,	2.92864,	2.92857,	2.9285,	2.92843,	2.92835,	2.92828,	2.9282,	2.92812,	2.92805,	2.92797,	2.92788,	2.9278,	2.92772,	2.92763,	2.92755,	2.92746,	2.92737,	2.92728,	2.92719,	2.92709,	2.927,	2.9269,	2.92681,	2.92671,	2.92661,	2.92651,	2.92641,	2.92631,	2.9262,	2.9261,	2.92599,	2.92588,	2.92577,	2.92566,	2.92555,	2.92544,	2.92532,	2.92521,	2.92509,	2.92497,	2.92485,	2.92473,	2.92461,	2.92449,	2.92436,	2.92424,	2.92411,	2.92398,	2.92385,	2.92372,	2.92359,	2.92346,	2.92333,	2.92319,	2.92305,	2.92292,	2.92278,	2.92264,	2.9225,	2.92235,	2.92221,	2.92207,	2.92192,	2.92177,	2.92163,	2.92148,	2.92133,	2.92117,	2.92102,	2.92087,	2.92071,	2.92056,	2.9204,	2.92024,	2.92008,	2.91992,	2.91976,	2.91959,	2.91943,	2.91926,	2.9191,	2.91893,	2.91876,	2.91859,	2.91842,	2.91825,	2.91807,	2.9179,	2.91772,	2.91755,	2.91737,	2.91719,	2.91701,	2.91683,	2.91665,	2.91646,	2.91628,	2.91609,	2.91591,	2.91572,	2.91553,	2.91534,	2.91515,	2.91495,	2.91476,	2.91457,	2.91437,	2.91417,	2.91398,	2.91378,	2.91358,	2.91338,	2.91318,	2.91297,	2.91277,	2.91256,	2.91236,	2.91215,	2.91194,	2.91173,	2.91152,	2.91131,	2.9111,	2.91088,	2.91067,	2.91045,	2.91024,	2.91002,	2.9098,	2.90958,	2.90936,	2.90914,	2.90892,	2.90869,	2.90847,	2.90824,	2.90801,	2.90779,	2.90756,	2.90733,	2.9071,	2.90686,	2.90663,	2.9064,	2.90616,	2.90593,	2.90569,	2.90545,	2.90521,	2.90497,	2.90473,	2.90449,	2.90425,	2.904,	2.90376,	2.90351,	2.90327,	2.90302,	2.90277,	2.90252,	2.90227,	2.90202,	2.90176,	2.90151,	2.90126,	2.901,	2.90074,	2.90049,	2.90023,	2.89997,	2.89971,	2.89945,	2.89919,	2.89892,	2.89866,	2.8984,	2.89813,	2.89786,	2.8976,	2.89733,	2.89706,	2.89679,	2.89652,	2.89624,	2.89597,	2.8957,	2.89542,	2.89515,	2.89487,	2.89459,	2.89431,	2.89403,	2.89375,	2.89347,	2.89319,	2.89291,	2.89262,	2.89234,	2.89205,	2.89177,	2.89148,	2.89119,	2.8909,	2.89061,	2.89032,	2.89003,	2.88974,	2.88945,	2.88915,	2.88886,	2.88856,	2.88826,	2.88797,	2.88767,	2.88737,	2.88707,	2.88677,	2.88647,	2.88616,	2.88586,	2.88556,	2.88525,	2.88495,	2.88464,	2.88433,	2.88402,	2.88371,	2.8834,	2.88309,	2.88278,	2.88247,	2.88216,	2.88184,	2.88153,	2.88121,	2.88089,	2.88058,	2.88026,	2.87994,	2.87962,	2.8793,	2.87898,	2.87866,	2.87833,	2.87801,	2.87769,	2.87736,	2.87704,	2.87671,	2.87638,	2.87605,	2.87573,	2.8754,	2.87506,	2.87473,	2.8744,	2.87407,	2.87374,	2.8734,	2.87307,	2.87273,	2.87239,	2.87206,	2.87172,	2.87138,	2.87104,	2.8707,	2.87036,	2.87002,	2.86968,	2.86933,	2.86899,	2.86865,	2.8683,	2.86796,	2.86761,	2.86726,	2.86691,	2.86656,	2.86622,	2.86587,	2.86551,	2.86516,	2.86481,	2.86446,	2.8641,	2.86375,	2.8634,	2.86304,	2.86268,	2.86233,	2.86197,	2.86161,	2.86125,	2.86089,	2.86053,	2.86017,	2.85981,	2.85945,	2.85908,	2.85872,	2.85836,	2.85799,	2.85763,	2.85726,	2.85689,	2.85652,	2.85616,	2.85579,	2.85542,	2.85505,	2.85468,	2.85431,	2.85393,	2.85356,	2.85319,	2.85281,	2.85244,	2.85206,	2.85169,	2.85131,	2.85094,	2.85056,	2.85018,	2.8498,	2.84942,	2.84904,	2.84866,	2.84828,	2.8479,	2.84752,	2.84713,	2.84675,	2.84636,	2.84598,	2.84559,	2.84521,	2.84482,	2.84443,	2.84405,	2.84366,	2.84327,	2.84288,	2.84249,	2.8421,	2.84171,	2.84132,	2.84092,	2.84053,	2.84014,	2.83974,	2.83935,	2.83896,	2.83856,	2.83816,	2.83777,	2.83737,	2.83697,	2.83657,	2.83617,	2.83578,	2.83538,	2.83497,	2.83457,	2.83417,	2.83377,	2.83337,	2.83296,	2.83256,	2.83216,	2.83175,	2.83135,	2.83094,	2.83054,	2.83013,	2.82972,	2.82931,	2.82891,	2.8285,	2.82809,	2.82768,	2.82727,	2.82686,	2.82645,	2.82604,	2.82562,	2.82521,	2.8248,	2.82438,	2.82397,	2.82356,	2.82314,	2.82272,	2.82231,	2.82189,	2.82148,	2.82106,	2.82064,	2.82022,	2.8198,	2.81938,	2.81897,	2.81855,	2.81812,	2.8177,	2.81728,	2.81686,	2.81644,	2.81602,	2.81559,	2.81517,	2.81474,	2.81432,	2.8139,	2.81347,	2.81304,	2.81262,	2.81219,	2.81176,	2.81134,	2.81091,	2.81048,	2.81005,	2.80962,	2.80919,	2.80876,	2.80833,	2.8079,	2.80747,	2.80704,	2.80661,	2.80618,	2.80574,	2.80531,	2.80488,	2.80444,	2.80401,	2.80357,	2.80314,	2.8027,	2.80227,	2.80183,	2.8014,	2.80096,	2.80052,	2.80008,	2.79965,	2.79921,	2.79877,	2.79833,	2.79789,	2.79745,	2.79701,	2.79657,	2.79613,	2.79569,	2.79525,	2.79481,	2.79436,	2.79392,	2.79348,	2.79303,	2.79259,	2.79215,	2.7917,	2.79126,	2.79081,	2.79037,	2.78992,	2.78948,	2.78903,	2.78858,	2.78814,	2.78769,	2.78724,	2.78679,	2.78635,	2.7859,	2.78545,	2.785,	2.78455,	2.7841,	2.78365,	2.7832,	2.78275,	2.7823,	2.78185,	2.7814,	2.78095,	2.78049,	2.78004,	2.77959,	2.77914,	2.77868,	2.77823,	2.77778,	2.77732,	2.77687,	2.77641,	2.77596,	2.77551,	2.77505,	2.77459,	2.77414,	2.77368,	2.77323,	2.77277,	2.77231,	2.77186,	2.7714,	2.77094,	2.77048,	2.77003,	2.76957,	2.76911,	2.76865,	2.76819,	2.76773,	2.76727,	2.76681,	2.76635,	2.76589,	2.76543,	2.76497,	2.76451,	2.76405,	2.76359,	2.76313,	2.76267,	2.76221,	2.76174,	2.76128,	2.76082,	2.76036,	2.75989,	2.75943,	2.75897,	2.7585,	2.75804,	2.75758,	2.75711,	2.75665,	2.75618,	2.75572,	2.75525,	2.75479,	2.75432,	2.75386,	2.75339,	2.75293,	2.75246,	2.752,	2.75153,	2.75106,	2.7506,	2.75013,	2.74966,	2.7492,	2.74873,	2.74826,	2.74779,	2.74733,	2.74686,	2.74639,	2.74592,	2.74545,	2.74499,	2.74452,	2.74405,	2.74358,	2.74311,	2.74264,	2.74217,	2.7417,	2.74123,	2.74076,	2.74029,	2.73982,	2.73935,	2.73888,	2.73841,	2.73794,	2.73747,	2.737,	2.73653,	2.73606,	2.73559,	2.73512,	2.73465,	2.73418,	2.73371,	2.73323,	2.73276,	2.73229,	2.73182,	2.73135,	2.73088,	2.7304,	2.72993,	2.72946,	2.72899,	2.72851,	2.72804,	2.72757,	2.7271,	2.72662,	2.72615,	2.72568,	2.7252,	2.72473,	2.72426,	2.72379,	2.72331,	2.72284,	2.72237,	2.72189,	2.72142,	2.72095,	2.72047,	2.72,	2.71952,	2.71905,	2.71858,	2.7181,	2.71763,	2.71715,	2.71668,	2.71621,	2.71573,	2.71526,	2.71478,	2.71431,	2.71384,	2.71336,	2.71289,	2.71241,	2.71194,	2.71146,	2.71099,	2.71052,	2.71004,	2.70957,	2.70909,	2.70862,	2.70814,	2.70767,	2.70719,	2.70672,	2.70625,	2.70577,	2.7053,	2.70482,	2.70435,	2.70387,	2.7034,	2.70292,	2.70245,	2.70197,	2.7015,	2.70103,	2.70055,	2.70008,	2.6996,	2.69913,	2.69865,	2.69818,	2.6977,	2.69723,	2.69676,	2.69628,	2.69581,	2.69533,	2.69486,	2.69438,	2.69391,	2.69344,	2.69296,	2.69249,	2.69201,	2.69154,	2.69107,	2.69059,	2.69012,	2.68964,	2.68917,	2.6887,	2.68822,	2.68775,	2.68728,	2.6868,	2.68633,	2.68586,	2.68538,	2.68491,	2.68444,	2.68396,	2.68349,	2.68302,	2.68254,	2.68207,	2.6816,	2.68113,	2.68065,	2.68018,	2.67971,	2.67924,	2.67876,	2.67829,	2.67782,	2.67735,	2.67688,	2.6764,	2.67593,	2.67546,	2.67499,	2.67452,	2.67405,	2.67358,	2.67311,	2.67263,	2.67216,	2.67169,	2.67122,	2.67075,	2.67028,	2.66981,	2.66934,	2.66887,	2.6684,	2.66793,	2.66746,	2.66699,	2.66652,	2.66605,	2.66558,	2.66511,	2.66465,	2.66418,	2.66371,	2.66324,	2.66277,	2.6623,	2.66183,	2.66137,	2.6609,	2.66043,	2.65996,	2.6595,	2.65903,	2.65856,	2.6581,	2.65763,	2.65716,	2.6567,	2.65623,	2.65576,	2.6553,	2.65483,	2.65437,	2.6539,	2.65343,	2.65297,	2.6525,	2.65204,	2.65158,	2.65111,	2.65065,	2.65018,	2.64972,	2.64925,	2.64879,	2.64833,	2.64786,	2.6474,	2.64694,	2.64648,	2.64601,	2.64555,	2.64509,	2.64463,	2.64417,	2.6437,	2.64324,	2.64278,	2.64232,	2.64186,	2.6414,	2.64094,	2.64048,	2.64002,	2.63956,	2.6391,	2.63864,	2.63818,	2.63772,	2.63727,	2.63681,	2.63635,	2.63589,	2.63543,	2.63498,	2.63452,	2.63406,	2.63361,	2.63315,	2.63269,	2.63224,	2.63178,	2.63133,	2.63087,	2.63042,	2.62996,	2.62951,	2.62905,	2.6286,	2.62814,	2.62769,	2.62724,	2.62678,	2.62633,	2.62588,	2.62543,	2.62497,	2.62452,	2.62407,	2.62362,	2.62317,	2.62272,	2.62227,	2.62182,	2.62137,	2.62092,	2.62047,	2.62002,	2.61957,	2.61912,	2.61867,	2.61822,	2.61778,	2.61733,	2.61688,	2.61643,	2.61599,	2.61554,	2.6151,	2.61465,	2.6142,	2.61376,	2.61331,	2.61287,	2.61243,	2.61198,	2.61154,	2.61109,	2.61065,	2.61021,	2.60977,	2.60932,	2.60888,	2.60844,	2.608,	2.60756,	2.60712,	2.60668,	2.60624,	2.6058,	2.60536,	2.60492,	2.60448,	2.60404,	2.6036,	2.60317,	2.60273,	2.60229,	2.60185,	2.60142,	2.60098,	2.60055,	2.60011,	2.59968,	2.59924,	2.59881,	2.59837,	2.59794,	2.59751,	2.59707,	2.59664,	2.59621,	2.59577,	2.59534,	2.59491,	2.59448,	2.59405,	2.59362,	2.59319,	2.59276,	2.59233,	2.5919,	2.59147,	2.59105,	2.59062,	2.59019,	2.58976,	2.58934,	2.58891,	2.58848,	2.58806,	2.58763,	2.58721,	2.58678,	2.58636,	2.58594,	2.58551,	2.58509,	2.58467,	2.58425,	2.58382,	2.5834,	2.58298,	2.58256,	2.58214,	2.58172,	2.5813,	2.58088,	2.58046,	2.58005,	2.57963,	2.57921,	2.57879,	2.57838,	2.57796,	2.57754,	2.57713,	2.57671,	2.5763,	2.57588,	2.57547,	2.57506,	2.57464,	2.57423,	2.57382,	2.57341,	2.573,	2.57259,	2.57217,	2.57176,	2.57135,	2.57095,	2.57054,	2.57013,	2.56972,	2.56931,	2.56891,	2.5685,	2.56809,	2.56769,	2.56728,	2.56688,	2.56647,	2.56607,	2.56566,	2.56526,	2.56486,	2.56446,	2.56405,	2.56365,	2.56325,	2.56285,	2.56245,	2.56205,	2.56165,	2.56125,	2.56086,	2.56046,	2.56006,	2.55966,	2.55927,	2.55887,	2.55848,	2.55808,	2.55769,	2.55729,	2.5569,	2.5565,	2.55611,	2.55572,	2.55533,	2.55494,	2.55455,	2.55416,	2.55377,	2.55338,	2.55299,	2.5526,	2.55221,	2.55182,	2.55144,	2.55105,	2.55066,	2.55028,	2.54989,	2.54951,	2.54913,	2.54874,	2.54836,	2.54798,	2.54759,	2.54721,	2.54683,	2.54645,	2.54607,	2.54569,	2.54531,	2.54493,	2.54456,	2.54418,	2.5438,	2.54342,	2.54305,	2.54267,	2.5423,	2.54192,	2.54155,	2.54118,	2.5408,	2.54043,	2.54006,	2.53969,	2.53932,	2.53895,	2.53858,	2.53821,	2.53784,	2.53747,	2.5371,	2.53673,	2.53637,	2.536,	2.53564,	2.53527,	2.53491,	2.53454,	2.53418,	2.53382,	2.53345,	2.53309,	2.53273,	2.53237,	2.53201,	2.53165,	2.53129,	2.53093,	2.53057,	2.53022,	2.52986,	2.5295,	2.52915,	2.52879,	2.52844,	2.52808,	2.52773,	2.52738,	2.52702,	2.52667,	2.52632,	2.52597,	2.52562,	2.52527,	2.52492,	2.52457,	2.52422,	2.52388,	2.52353,	2.52318,	2.52284,	2.52249,	2.52215,	2.52181,	2.52146,	2.52112,	2.52078,	2.52044,	2.52009,	2.51975,	2.51941,	2.51908,	2.51874,	2.5184,	2.51806,	2.51772,	2.51739,	2.51705,	2.51672,	2.51638,	2.51605,	2.51572,	2.51538,	2.51505,	2.51472,	2.51439,	2.51406,	2.51373,	2.5134,	2.51307,	2.51274,	2.51242,	2.51209,	2.51176,	2.51144,	2.51111,	2.51079,	2.51046,	2.51014,	2.50982,	2.5095,	2.50918,	2.50886,	2.50854,	2.50822,	2.5079,	2.50758,	2.50726,	2.50695,	2.50663,	2.50631,	2.506,	2.50568,	2.50537,	2.50506,	2.50475,	2.50443,	2.50412,	2.50381,	2.5035,	2.50319,	2.50289,	2.50258,	2.50227,	2.50196,	2.50166,	2.50135,	2.50105,	2.50074,	2.50044,	2.50014,	2.49984,	2.49953,	2.49923,	2.49893,	2.49863,	2.49834,	2.49804,	2.49774,	2.49744,	2.49715,	2.49685,	2.49656,	2.49626,	2.49597,	2.49568,	2.49538,	2.49509,	2.4948,	2.49451,	2.49422,	2.49393,	2.49365,	2.49336,	2.49307,	2.49278,	2.4925,	2.49221,	2.49193,	2.49165,	2.49136,	2.49108,	2.4908,	2.49052,	2.49024,	2.48996,	2.48968,	2.48941,	2.48913,	2.48885,	2.48858,	2.4883,	2.48803,	2.48775,	2.48748,	2.48721,	2.48694,	2.48666,	2.48639,	2.48612,	2.48586,	2.48559,	2.48532,	2.48505,	2.48479,	2.48452,	2.48426,	2.48399,	2.48373,	2.48347,	2.48321,	2.48295,	2.48269,	2.48243,	2.48217,	2.48191,	2.48165,	2.48139,	2.48114,	2.48088,	2.48063,	2.48038,	2.48012,	2.47987,	2.47962,	2.47937,	2.47912,	2.47887,	2.47862,	2.47837,	2.47812,	2.47788,	2.47763,	2.47739,	2.47714,	2.4769,	2.47666,	2.47641,	2.47617,	2.47593,	2.47569,	2.47545,	2.47521,	2.47498,	2.47474,	2.4745,	2.47427,	2.47403,	2.4738,	2.47357,	2.47333,	2.4731,	2.47287,	2.47264,	2.47241,	2.47218,	2.47196,	2.47173,	2.4715,	2.47128,	2.47105,	2.47083,	2.4706,	2.47038,	2.47016,	2.46994,	2.46972,	2.4695,	2.46928,	2.46906,	2.46885,	2.46863,	2.46841,	2.4682,	2.46799,	2.46777,	2.46756,	2.46735,	2.46714,	2.46693,	2.46672,	2.46651,	2.4663,	2.46609,	2.46589,	2.46568,	2.46548,	2.46527,	2.46507,	2.46487,	2.46467,	2.46447,	2.46427,	2.46407,	2.46387,	2.46367,	2.46348,	2.46328,	2.46309,	2.46289,	2.4627,	2.4625,	2.46231,	2.46212,	2.46193,	2.46174,	2.46155,	2.46137,	2.46118,	2.46099,	2.46081,	2.46062,	2.46044,	2.46026,	2.46007,	2.45989,	2.45971,	2.45953,	2.45935,	2.45918,	2.459,	2.45882,	2.45865,	2.45847,	2.4583,	2.45812,	2.45795,	2.45778,	2.45761,	2.45744,	2.45727,	2.4571,	2.45694,	2.45677,	2.4566,	2.45644,	2.45627,	2.45611,	2.45595,	2.45579,	2.45563,	2.45547,	2.45531,	2.45515,	2.45499,	2.45484,	2.45468,	2.45453,	2.45437,	2.45422,	2.45407,	2.45392,	2.45377,	2.45362,	2.45347,	2.45332,	2.45317,	2.45303,	2.45288,	2.45274,	2.45259,	2.45245,	2.45231,	2.45217,	2.45203,	2.45189,	2.45175,	2.45161,	2.45147,	2.45134,	2.4512,	2.45107,	2.45094,	2.4508,	2.45067,	2.45054,	2.45041,	2.45028,	2.45015,	2.45003,	2.4499,	2.44978,	2.44965,	2.44953,	2.4494,	2.44928,	2.44916,	2.44904,	2.44892,	2.4488,	2.44869,	2.44857,	2.44845,	2.44834,	2.44823,	2.44811,	2.448,	2.44789,	2.44778,	2.44767,	2.44756,	2.44745,	2.44735,	2.44724,	2.44713,	2.44703,	2.44693,	2.44683,	2.44672,	2.44662,	2.44652,	2.44643,	2.44633,	2.44623,	2.44613,	2.44604,	2.44595,	2.44585,	2.44576,	2.44567,	2.44558,	2.44549,	2.4454,	2.44531,	2.44523,	2.44514,	2.44505,	2.44497,	2.44489,	2.4448,	2.44472,	2.44464,	2.44456,	2.44449,	2.44441,	2.44433,	2.44426,	2.44418,	2.44411,	2.44403,	2.44396,	2.44389,	2.44382,	2.44375,	2.44368,	2.44361,	2.44355,	2.44348,	2.44342,	2.44335,	2.44329,	2.44323,	2.44317,	2.44311,	2.44305,	2.44299,	2.44294,	2.44288,	2.44282,	2.44277,	2.44272,	2.44266,	2.44261,	2.44256,	2.44251,	2.44246,	2.44242,	2.44237,	2.44232,	2.44228,	2.44224,	2.44219,	2.44215,	2.44211,	2.44207,	2.44203,	2.44199,	2.44196,	2.44192,	2.44189,	2.44185,	2.44182,	2.44179,	2.44176,	2.44173,	2.4417,	2.44167,	2.44164,	2.44161,	2.44159,	2.44156,	2.44154,	2.44152,	2.4415,	2.44148,	2.44146,	2.44144,	2.44142,	2.4414,	2.44139,	2.44137,	2.44136,	2.44135,	2.44134,	2.44133,	2.44132,	2.44131,	2.4413,	2.44129,	2.44129,	2.44128,	2.44128,	2.44128,	2.44127,	2.44127,	2.44127,	2.44127,	2.44128,	2.44128,	2.44128,	2.44129,	2.4413,	2.4413,	2.44131,	2.44132,	2.44133,	2.44134,	2.44135,	2.44137,	2.44138,	2.4414,	2.44141,	2.44143,	2.44145,	2.44147,	2.44149,	2.44151,	2.44153,	2.44156,	2.44158,	2.44161,	2.44163,	2.44166,	2.44169,	2.44172,	2.44175,	2.44178,	2.44181,	2.44185,	2.44188,	2.44192,	2.44195,	2.44199,	2.44203,	2.44207,	2.44211,	2.44215,	2.44219,	2.44224,	2.44228,	2.44233,	2.44238,	2.44242,	2.44247,	2.44252,	2.44257,	2.44263,	2.44268,	2.44273,	2.44279,	2.44285,	2.4429,	2.44296,	2.44302,	2.44308,	2.44314,	2.44321,	2.44327,	2.44333,	2.4434,	2.44347,	2.44353,	2.4436,	2.44367,	2.44374,	2.44382,	2.44389,	2.44396,	2.44404,	2.44412,	2.44419,	2.44427,	2.44435,	2.44443,	2.44451,	2.4446,	2.44468,	2.44476,	2.44485,	2.44494,	2.44502,	2.44511,	2.4452,	2.4453,	2.44539,	2.44548,	2.44558,	2.44567,	2.44577,	2.44587,	2.44596,	2.44606,	2.44617,	2.44627,	2.44637,	2.44647,	2.44658,	2.44669,	2.44679,	2.4469,	2.44701,	2.44712,	2.44723,	2.44735,	2.44746,	2.44758,	2.44769,	2.44781,	2.44793,	2.44805,	2.44817,	2.44829,	2.44841,	2.44854,	2.44866,	2.44879,	2.44891,	2.44904,	2.44917,	2.4493,	2.44943,	2.44957,	2.4497,	2.44983,	2.44997,	2.45011,	2.45025,	2.45038,	2.45053,	2.45067,	2.45081,	2.45095,	2.4511,	2.45124,	2.45139,	2.45154,	2.45169,	2.45184,	2.45199,	2.45214,	2.4523,	2.45245,	2.45261,	2.45276,	2.45292,	2.45308,	2.45324,	2.4534,	2.45357,	2.45373,	2.4539,	2.45406,	2.45423,	2.4544,	2.45457,	2.45474,	2.45491,	2.45508,	2.45526,	2.45543,	2.45561,	2.45579,	2.45596,	2.45614,	2.45632,	2.45651,	2.45669,	2.45687,	2.45706,	2.45725,	2.45743,	2.45762,	2.45781,	2.458,	2.4582,	2.45839,	2.45858,	2.45878,	2.45898,	2.45918,	2.45938,	2.45958,	2.45978,	2.45998,	2.46018,	2.46039,	2.46059,	2.4608,	2.46101,	2.46122,	2.46143,	2.46164,	2.46186,	2.46207,	2.46229,	2.4625,	2.46272,	2.46294,	2.46316,	2.46338,	2.4636,	2.46383,	2.46405,	2.46428,	2.46451,	2.46473,	2.46496,	2.46519,	2.46543,	2.46566,	2.46589,	2.46613,	2.46637,	2.4666,	2.46684,	2.46708,	2.46732,	2.46757,	2.46781,	2.46806,	2.4683,	2.46855,	2.4688,	2.46905,	2.4693,	2.46955,	2.4698,	2.47006,	2.47031,	2.47057,	2.47083,	2.47109,	2.47135,	2.47161,	2.47187,	2.47214,	2.4724,	2.47267,	2.47294,	2.4732,	2.47347,	2.47375,	2.47402,	2.47429,	2.47457,	2.47484,	2.47512,	2.4754,	2.47568,	2.47596,	2.47624,	2.47653,	2.47681,	2.4771,	2.47738,	2.47767,	2.47796,	2.47825,	2.47854,	2.47884,	2.47913,	2.47943,	2.47972,	2.48002,	2.48032,	2.48062,	2.48092,	2.48123,	2.48153,	2.48184,	2.48214,	2.48245,	2.48276,	2.48307,	2.48338,	2.48369,	2.48401,	2.48432,	2.48464,	2.48496,	2.48528,	2.4856,	2.48592,	2.48624,	2.48656,	2.48689,	2.48722,	2.48754,	2.48787,	2.4882,	2.48853,	2.48887,	2.4892,	2.48954,	2.48987,	2.49021,	2.49055,	2.49089,	2.49123,	2.49157,	2.49192,	2.49226,	2.49261,	2.49296,	2.49331,	2.49366,	2.49401,	2.49436,	2.49471,	2.49507,	2.49543,	2.49578,	2.49614,	2.4965,	2.49687,	2.49723,	2.49759,	2.49796,	2.49832,	2.49869,	2.49906,	2.49943,	2.4998,	2.50018,	2.50055,	2.50093,	2.5013,	2.50168,	2.50206,	2.50244,	2.50283,	2.50321,	2.50359,	2.50398,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	1.65931,	


Input > Layer1 > Layer2 > Layer3 > Layer4   time = 453847 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5  
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 1: i = 32
Thread 0: i = 0
Thread 2: i = 64
Thread 3: i = 96
Thread 1: i = 33
Thread 0: i = 1
Thread 2: i = 65
Thread 3: i = 97
Thread 1: i = 34
Thread 0: i = 2
Thread 2: i = 66
Thread 3: i = 98
Thread 1: i = 35
Thread 0: i = 3
Thread 2: i = 67
Thread 3: i = 99
Thread 1: i = 36
Thread 0: i = 4
Thread 2: i = 68
Thread 3: i = 100
Thread 1: i = 37
Thread 0: i = 5
Thread 2: i = 69
Thread 3: i = 101
Thread 1: i = 38
Thread 0: i = 6
Thread 2: i = 70
Thread 3: i = 102
Thread 1: i = 39
Thread 0: i = 7
Thread 2: i = 71
Thread 3: i = 103
Thread 1: i = 40
Thread 0: i = 8
Thread 2: i = 72
Thread 3: i = 104
Thread 1: i = 41
Thread 0: i = 9
Thread 2: i = 73
Thread 3: i = 105
Thread 1: i = 42
Thread 0: i = 10
Thread 2: i = 74
Thread 3: i = 106
Thread 1: i = 43
Thread 0: i = 11
Thread 2: i = 75
Thread 3: i = 107
Thread 1: i = 44
Thread 0: i = 12
Thread 2: i = 76
Thread 3: i = 108
Thread 1: i = 45
Thread 0: i = 13
Thread 2: i = 77
Thread 3: i = 109
Thread 1: i = 46
Thread 0: i = 14
Thread 2: i = 78
Thread 3: i = 110
Thread 1: i = 47
Thread 0: i = 15
Thread 2: i = 79
Thread 3: i = 111
Thread 1: i = 48
Thread 0: i = 16
Thread 2: i = 80
Thread 3: i = 112
Thread 1: i = 49
Thread 0: i = 17
Thread 2: i = 81
Thread 3: i = 113
Thread 1: i = 50
Thread 0: i = 18
Thread 2: i = 82
Thread 3: i = 114
Thread 1: i = 51
Thread 0: i = 19
Thread 2: i = 83
Thread 3: i = 115
Thread 1: i = 52
Thread 0: i = 20
Thread 2: i = 84
Thread 3: i = 116
Thread 1: i = 53
Thread 0: i = 21
Thread 2: i = 85
Thread 3: i = 117
Thread 1: i = 54
Thread 0: i = 22
Thread 2: i = 86
Thread 3: i = 118
Thread 1: i = 55
Thread 0: i = 23
Thread 2: i = 87
Thread 3: i = 119
Thread 1: i = 56
Thread 0: i = 24
Thread 2: i = 88
Thread 3: i = 120
Thread 1: i = 57
Thread 0: i = 25
Thread 2: i = 89
Thread 3: i = 121
Thread 1: i = 58
Thread 0: i = 26
Thread 2: i = 90
Thread 3: i = 122
Thread 1: i = 59
Thread 0: i = 27
Thread 2: i = 91
Thread 3: i = 123
Thread 1: i = 60
Thread 0: i = 28
Thread 2: i = 92
Thread 3: i = 124
Thread 1: i = 61
Thread 0: i = 29
Thread 2: i = 93
Thread 3: i = 125
Thread 1: i = 62
Thread 0: i = 30
Thread 2: i = 94
Thread 3: i = 126
Thread 1: i = 63
Thread 0: i = 31
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 1: i = 32
Thread 0: i = 0
Thread 2: i = 64
Thread 3: i = 96
Thread 1: i = 33
Thread 0: i = 1
Thread 2: i = 65
Thread 3: i = 97
Thread 1: i = 34
Thread 0: i = 2
Thread 2: i = 66
Thread 3: i = 98
Thread 1: i = 35
Thread 0: i = 3
Thread 2: i = 67
Thread 3: i = 99
Thread 1: i = 36
Thread 0: i = 4
Thread 2: i = 68
Thread 3: i = 100
Thread 1: i = 37
Thread 0: i = 5
Thread 2: i = 69
Thread 3: i = 101
Thread 1: i = 38
Thread 0: i = 6
Thread 2: i = 70
Thread 3: i = 102
Thread 1: i = 39
Thread 0: i = 7
Thread 2: i = 71
Thread 3: i = 103
Thread 1: i = 40
Thread 0: i = 8
Thread 2: i = 72
Thread 3: i = 104
Thread 1: i = 41
Thread 0: i = 9
Thread 2: i = 73
Thread 3: i = 105
Thread 1: i = 42
Thread 0: i = 10
Thread 2: i = 74
Thread 3: i = 106
Thread 1: i = 43
Thread 0: i = 11
Thread 2: i = 75
Thread 3: i = 107
Thread 1: i = 44
Thread 0: i = 12
Thread 2: i = 76
Thread 3: i = 108
Thread 1: i = 45
Thread 0: i = 13
Thread 2: i = 77
Thread 3: i = 109
Thread 1: i = 46
Thread 0: i = 14
Thread 2: i = 78
Thread 3: i = 110
Thread 1: i = 47
Thread 0: i = 15
Thread 2: i = 79
Thread 3: i = 111
Thread 1: i = 48
Thread 0: i = 16
Thread 2: i = 80
Thread 3: i = 112
Thread 1: i = 49
Thread 0: i = 17
Thread 2: i = 81
Thread 3: i = 113
Thread 1: i = 50
Thread 0: i = 18
Thread 2: i = 82
Thread 3: i = 114
Thread 1: i = 51
Thread 0: i = 19
Thread 2: i = 83
Thread 3: i = 115
Thread 1: i = 52
Thread 0: i = 20
Thread 2: i = 84
Thread 3: i = 116
Thread 1: i = 53
Thread 0: i = 21
Thread 2: i = 85
Thread 3: i = 117
Thread 1: i = 54
Thread 0: i = 22
Thread 2: i = 86
Thread 3: i = 118
Thread 1: i = 55
Thread 0: i = 23
Thread 2: i = 87
Thread 3: i = 119
Thread 1: i = 56
Thread 0: i = 24
Thread 2: i = 88
Thread 3: i = 120
Thread 1: i = 57
Thread 0: i = 25
Thread 2: i = 89
Thread 3: i = 121
Thread 1: i = 58
Thread 0: i = 26
Thread 2: i = 90
Thread 3: i = 122
Thread 1: i = 59
Thread 0: i = 27
Thread 2: i = 91
Thread 3: i = 123
Thread 1: i = 60
Thread 0: i = 28
Thread 2: i = 92
Thread 3: i = 124
Thread 1: i = 61
Thread 0: i = 29
Thread 2: i = 93
Thread 3: i = 125
Thread 1: i = 62
Thread 0: i = 30
Thread 2: i = 94
Thread 3: i = 126
Thread 1: i = 63
Thread 0: i = 31
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 3: i = 96
Thread 2: i = 64
Thread 0: i = 1
Thread 1: i = 33
Thread 3: i = 97
Thread 2: i = 65
Thread 0: i = 2
Thread 1: i = 34
Thread 3: i = 98
Thread 2: i = 66
Thread 0: i = 3
Thread 1: i = 35
Thread 3: i = 99
Thread 2: i = 67
Thread 0: i = 4
Thread 1: i = 36
Thread 3: i = 100
Thread 2: i = 68
Thread 0: i = 5
Thread 1: i = 37
Thread 3: i = 101
Thread 2: i = 69
Thread 0: i = 6
Thread 1: i = 38
Thread 3: i = 102
Thread 2: i = 70
Thread 0: i = 7
Thread 1: i = 39
Thread 3: i = 103
Thread 2: i = 71
Thread 0: i = 8
Thread 1: i = 40
Thread 3: i = 104
Thread 2: i = 72
Thread 0: i = 9
Thread 1: i = 41
Thread 3: i = 105
Thread 2: i = 73
Thread 0: i = 10
Thread 1: i = 42
Thread 3: i = 106
Thread 2: i = 74
Thread 0: i = 11
Thread 1: i = 43
Thread 3: i = 107
Thread 2: i = 75
Thread 0: i = 12
Thread 1: i = 44
Thread 3: i = 108
Thread 2: i = 76
Thread 0: i = 13
Thread 1: i = 45
Thread 3: i = 109
Thread 2: i = 77
Thread 0: i = 14
Thread 1: i = 46
Thread 3: i = 110
Thread 2: i = 78
Thread 0: i = 15
Thread 1: i = 47
Thread 3: i = 111
Thread 2: i = 79
Thread 0: i = 16
Thread 1: i = 48
Thread 3: i = 112
Thread 2: i = 80
Thread 0: i = 17
Thread 1: i = 49
Thread 3: i = 113
Thread 2: i = 81
Thread 0: i = 18
Thread 1: i = 50
Thread 3: i = 114
Thread 2: i = 82
Thread 0: i = 19
Thread 1: i = 51
Thread 3: i = 115
Thread 2: i = 83
Thread 0: i = 20
Thread 1: i = 52
Thread 3: i = 116
Thread 2: i = 84
Thread 0: i = 21
Thread 1: i = 53
Thread 3: i = 117
Thread 2: i = 85
Thread 0: i = 22
Thread 1: i = 54
Thread 3: i = 118
Thread 2: i = 86
Thread 0: i = 23
Thread 1: i = 55
Thread 3: i = 119
Thread 2: i = 87
Thread 0: i = 24
Thread 1: i = 56
Thread 3: i = 120
Thread 2: i = 88
Thread 0: i = 25
Thread 1: i = 57
Thread 3: i = 121
Thread 2: i = 89
Thread 0: i = 26
Thread 1: i = 58
Thread 3: i = 122
Thread 2: i = 90
Thread 0: i = 27
Thread 1: i = 59
Thread 3: i = 123
Thread 2: i = 91
Thread 0: i = 28
Thread 1: i = 60
Thread 3: i = 124
Thread 2: i = 92
Thread 0: i = 29
Thread 1: i = 61
Thread 3: i = 125
Thread 2: i = 93
Thread 0: i = 30
Thread 1: i = 62
Thread 3: i = 126
Thread 2: i = 94
Thread 0: i = 31
Thread 1: i = 63
Thread 3: i = 127
Thread 2: i = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5
Thread 0: i = 0
Thread 1: i = 32
Thread 2: i = 64
Thread 3: i = 96
Thread 0: i = 1
Thread 1: i = 33
Thread 2: i = 65
Thread 3: i = 97
Thread 0: i = 2
Thread 1: i = 34
Thread 2: i = 66
Thread 3: i = 98
Thread 0: i = 3
Thread 1: i = 35
Thread 2: i = 67
Thread 3: i = 99
Thread 0: i = 4
Thread 1: i = 36
Thread 2: i = 68
Thread 3: i = 100
Thread 0: i = 5
Thread 1: i = 37
Thread 2: i = 69
Thread 3: i = 101
Thread 0: i = 6
Thread 1: i = 38
Thread 2: i = 70
Thread 3: i = 102
Thread 0: i = 7
Thread 1: i = 39
Thread 2: i = 71
Thread 3: i = 103
Thread 0: i = 8
Thread 1: i = 40
Thread 2: i = 72
Thread 3: i = 104
Thread 0: i = 9
Thread 1: i = 41
Thread 2: i = 73
Thread 3: i = 105
Thread 0: i = 10
Thread 1: i = 42
Thread 2: i = 74
Thread 3: i = 106
Thread 0: i = 11
Thread 1: i = 43
Thread 2: i = 75
Thread 3: i = 107
Thread 0: i = 12
Thread 1: i = 44
Thread 2: i = 76
Thread 3: i = 108
Thread 0: i = 13
Thread 1: i = 45
Thread 2: i = 77
Thread 3: i = 109
Thread 0: i = 14
Thread 1: i = 46
Thread 2: i = 78
Thread 3: i = 110
Thread 0: i = 15
Thread 1: i = 47
Thread 2: i = 79
Thread 3: i = 111
Thread 0: i = 16
Thread 1: i = 48
Thread 2: i = 80
Thread 3: i = 112
Thread 0: i = 17
Thread 1: i = 49
Thread 2: i = 81
Thread 3: i = 113
Thread 0: i = 18
Thread 1: i = 50
Thread 2: i = 82
Thread 3: i = 114
Thread 0: i = 19
Thread 1: i = 51
Thread 2: i = 83
Thread 3: i = 115
Thread 0: i = 20
Thread 1: i = 52
Thread 2: i = 84
Thread 3: i = 116
Thread 0: i = 21
Thread 1: i = 53
Thread 2: i = 85
Thread 3: i = 117
Thread 0: i = 22
Thread 1: i = 54
Thread 2: i = 86
Thread 3: i = 118
Thread 0: i = 23
Thread 1: i = 55
Thread 2: i = 87
Thread 3: i = 119
Thread 0: i = 24
Thread 1: i = 56
Thread 2: i = 88
Thread 3: i = 120
Thread 0: i = 25
Thread 1: i = 57
Thread 2: i = 89
Thread 3: i = 121
Thread 0: i = 26
Thread 1: i = 58
Thread 2: i = 90
Thread 3: i = 122
Thread 0: i = 27
Thread 1: i = 59
Thread 2: i = 91
Thread 3: i = 123
Thread 0: i = 28
Thread 1: i = 60
Thread 2: i = 92
Thread 3: i = 124
Thread 0: i = 29
Thread 1: i = 61
Thread 2: i = 93
Thread 3: i = 125
Thread 0: i = 30
Thread 1: i = 62
Thread 2: i = 94
Thread 3: i = 126
Thread 0: i = 31
Thread 1: i = 63
Thread 2: i = 95
Thread 3: i = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5

// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5



SDFS:
3.4967,	3.41313,	3.3314,	3.25147,	3.17332,	3.09691,	3.02221,	2.94919,	2.87783,	2.80809,	2.73994,	2.67336,	2.60832,	2.5448,	2.48276,	2.42217,	2.36302,	2.30528,	2.24891,	2.1939,	2.14022,	2.08785,	2.03675,	1.98692,	1.93832,	1.89093,	1.84473,	1.79969,	1.7558,	1.71303,	1.67136,	1.63077,	1.59124,	1.55275,	1.51527,	1.47879,	1.44329,	1.40875,	1.37514,	1.34246,	1.31068,	1.27978,	1.24975,	1.22056,	1.19221,	1.16467,	1.13792,	1.11196,	1.08676,	1.0623,	1.03858,	1.01557,	0.993263,	0.971641,	0.950689,	0.930392,	0.910737,	0.891709,	0.873293,	0.855476,	0.838245,	0.821587,	0.805487,	0.789934,	0.774914,	0.760416,	0.746426,	0.732934,	0.719926,	0.707392,	0.695319,	0.683698,	0.672515,	0.661762,	0.651426,	0.641499,	0.631968,	0.622824,	0.614057,	0.605658,	0.597616,	0.589923,	0.582568,	0.575544,	0.56884,	0.562448,	0.55636,	0.550567,	0.54506,	0.539832,	0.534875,	0.53018,	0.525741,	0.521549,	0.517597,	0.513877,	0.510383,	0.507108,	0.504045,	0.501187,	0.498527,	0.496059,	0.493777,	0.491674,	0.489745,	0.487983,	0.486383,	0.484939,	0.483645,	0.482496,	0.481487,	0.480611,	0.479865,	0.479243,	0.47874,	0.478352,	0.478073,	0.477899,	0.477826,	0.477849,	0.477964,	0.478167,	0.478453,	0.478819,	0.479261,	0.479775,	0.480357,	0.481003,	0.481711,	0.482476,	0.483295,	0.484165,	0.485083,	0.486046,	0.48705,	0.488093,	0.489171,	0.490283,	0.491425,	0.492594,	0.493788,	0.495005,	0.496242,	0.497497,	0.498767,	0.50005,	0.501344,	0.502647,	0.503957,	0.505272,	0.50659,	0.507909,	0.509228,	0.510544,	0.511857,	0.513163,	0.514463,	0.515754,	0.517035,	0.518304,	0.519561,	0.520803,	0.522031,	0.523242,	0.524435,	0.525609,	0.526764,	0.527898,	0.52901,	0.5301,	0.531167,	0.532209,	0.533226,	0.534217,	0.535182,	0.53612,	0.53703,	0.537911,	0.538764,	0.539588,	0.540382,	0.541146,	0.541879,	0.542581,	0.543251,	0.543891,	0.544498,	0.545073,	0.545616,	0.546127,	0.546605,	0.54705,	0.547462,	0.547842,	0.548188,	0.548502,	0.548783,	0.549031,	0.549246,	0.549429,	0.549579,	0.549697,	0.549782,	0.549835,	0.549857,	0.549846,	0.549805,	0.549732,	0.549628,	0.549494,	0.549329,	0.549135,	0.548911,	0.548658,	0.548375,	0.548065,	0.547727,	0.54736,	0.546967,	0.546547,	0.546101,	0.54563,	0.545133,	0.544611,	0.544065,	0.543495,	0.542903,	0.542287,	0.54165,	0.540991,	0.540312,	0.539612,	0.538892,	0.538154,	0.537396,	0.536622,	0.53583,	0.535021,	0.534196,	0.533357,	0.532502,	0.531634,	0.530752,	0.529858,	0.528952,	0.528035,	0.527107,	0.526169,	0.525222,	0.524267,	0.523304,	0.522334,	0.521357,	0.520375,	0.519388,	0.518397,	0.517402,	0.516404,	0.515405,	0.514404,	0.513402,	0.512401,	0.5114,	0.510401,	0.509404,	0.50841,	0.50742,	0.506434,	0.505454,	0.504479,	0.503511,	0.50255,	0.501597,	0.500653,	0.499718,	0.498793,	0.49788,	0.496977,	0.496087,	0.49521,	0.494347,	0.493498,	0.492664,	0.491846,	0.491044,	0.490259,	0.489492,	0.488743,	0.488013,	0.487304,	0.486614,	0.485946,	0.485299,	0.484675,	0.484073,	0.483496,	0.482942,	0.482414,	0.481911,	0.481434,	0.480984,	0.480562,	0.480167,	0.479801,	0.479464,	0.479157,	0.47888,	0.478634,	0.478419,	0.478236,	0.478086,	0.47797,	0.477886,	0.477837,	0.477823,	0.477844,	0.477901,	0.477994,	0.478124,	0.478291,	0.478496,	0.478739,	0.479021,	0.479343,	0.479704,	0.480105,	0.480546,	0.481029,	0.481554,	0.48212,	0.482728,	0.48338,	0.484074,	0.484812,	0.485594,	0.486421,	0.487292,	0.488208,	0.48917,	0.490178,	0.491232,	0.492332,	0.49348,	0.494674,	0.495917,	0.497207,	0.498545,	0.499932,	0.501367,	0.502852,	0.504386,	0.50597,	0.507603,	0.509287,	0.511021,	0.512806,	0.514642,	0.516529,	0.518468,	0.520458,	0.522499,	0.524593,	0.526739,	0.528937,	0.531188,	0.533492,	0.535849,	0.538258,	0.540721,	0.543238,	0.545807,	0.548431,	0.551108,	0.553839,	0.556625,	0.559464,	0.562357,	0.565305,	0.568308,	0.571364,	0.574476,	0.577641,	0.580862,	0.584137,	0.587467,	0.590852,	0.594292,	0.597786,	0.601336,	0.60494,	0.608599,	0.612313,	0.616082,	0.619906,	0.623785,	0.627718,	0.631707,	0.63575,	0.639847,	0.644,	0.648207,	0.652468,	0.656785,	0.661155,	0.66558,	0.670059,	0.674592,	0.679179,	0.68382,	0.688515,	0.693263,	0.698066,	0.702921,	0.70783,	0.712792,	0.717807,	0.722875,	0.727996,	0.73317,	0.738395,	0.743673,	0.749003,	0.754385,	0.759819,	0.765304,	0.77084,	0.776428,	0.782067,	0.787756,	0.793495,	0.799285,	0.805125,	0.811015,	0.816954,	0.822943,	0.82898,	0.835067,	0.841202,	0.847385,	0.853617,	0.859896,	0.866223,	0.872597,	0.879018,	0.885486,	0.892,	0.89856,	0.905166,	0.911818,	0.918515,	0.925257,	0.932043,	0.938874,	0.945748,	0.952667,	0.959628,	0.966633,	0.97368,	0.98077,	0.987902,	0.995075,	1.00229,	1.00955,	1.01684,	1.02418,	1.03155,	1.03897,	1.04643,	1.05392,	1.06145,	1.06902,	1.07663,	1.08428,	1.09196,	1.09968,	1.10743,	1.11522,	1.12305,	1.13091,	1.13881,	1.14674,	1.1547,	1.1627,	1.17073,	1.17879,	1.18689,	1.19502,	1.20317,	1.21136,	1.21958,	1.22783,	1.23611,	1.24442,	1.25276,	1.26113,	1.26952,	1.27794,	1.28639,	1.29487,	1.30337,	1.3119,	1.32045,	1.32903,	1.33763,	1.34626,	1.35491,	1.36358,	1.37228,	1.381,	1.38974,	1.3985,	1.40728,	1.41609,	1.42491,	1.43375,	1.44262,	1.4515,	1.4604,	1.46931,	1.47825,	1.4872,	1.49617,	1.50515,	1.51415,	1.52317,	1.5322,	1.54124,	1.5503,	1.55937,	1.56845,	1.57755,	1.58665,	1.59577,	1.6049,	1.61404,	1.62319,	1.63235,	1.64152,	1.6507,	1.65989,	1.66908,	1.67828,	1.68749,	1.6967,	1.70592,	1.71515,	1.72438,	1.73362,	1.74286,	1.7521,	1.76135,	1.77059,	1.77985,	1.7891,	1.79835,	1.80761,	1.81686,	1.82612,	1.83538,	1.84463,	1.85388,	1.86314,	1.87239,	1.88163,	1.89088,	1.90012,	1.90935,	1.91858,	1.92781,	1.93703,	1.94625,	1.95546,	1.96466,	1.97385,	1.98304,	1.99222,	2.0014,	2.01056,	2.01971,	2.02886,	2.03799,	2.04711,	2.05623,	2.06533,	2.07442,	2.0835,	2.09256,	2.10161,	2.11065,	2.11968,	2.12869,	2.13768,	2.14666,	2.15563,	2.16458,	2.17351,	2.18243,	2.19132,	2.20021,	2.20907,	2.21792,	2.22674,	2.23555,	2.24434,	2.25311,	2.26186,	2.27058,	2.27929,	2.28797,	2.29664,	2.30528,	2.3139,	2.32249,	2.33107,	2.33962,	2.34814,	2.35664,	2.36512,	2.37357,	2.38199,	2.39039,	2.39877,	2.40712,	2.41544,	2.42373,	2.43199,	2.44023,	2.44844,	2.45662,	2.46478,	2.4729,	2.48099,	2.48906,	2.49709,	2.50509,	2.51306,	2.52101,	2.52891,	2.53679,	2.54464,	2.55245,	2.56023,	2.56798,	2.57569,	2.58337,	2.59102,	2.59863,	2.60621,	2.61375,	2.62126,	2.62873,	2.63617,	2.64357,	2.65094,	2.65827,	2.66556,	2.67281,	2.68003,	2.68721,	2.69435,	2.70145,	2.70852,	2.71555,	2.72253,	2.72948,	2.73639,	2.74326,	2.75009,	2.75688,	2.76363,	2.77034,	2.77701,	2.78364,	2.79022,	2.79677,	2.80327,	2.80973,	2.81615,	2.82252,	2.82886,	2.83515,	2.8414,	2.8476,	2.85376,	2.85988,	2.86595,	2.87198,	2.87797,	2.88391,	2.88981,	2.89566,	2.90147,	2.90723,	2.91295,	2.91862,	2.92424,	2.92982,	2.93536,	2.94085,	2.94629,	2.95168,	2.95703,	2.96233,	2.96759,	2.9728,	2.97796,	2.98307,	2.98814,	2.99316,	2.99813,	3.00305,	3.00793,	3.01275,	3.01753,	3.02226,	3.02694,	3.03158,	3.03616,	3.0407,	3.04518,	3.04962,	3.05401,	3.05835,	3.06264,	3.06688,	3.07107,	3.07521,	3.0793,	3.08335,	3.08734,	3.09128,	3.09517,	3.09901,	3.1028,	3.10655,	3.11024,	3.11388,	3.11747,	3.12101,	3.1245,	3.12794,	3.13132,	3.13466,	3.13795,	3.14118,	3.14437,	3.1475,	3.15058,	3.15362,	3.1566,	3.15953,	3.1624,	3.16523,	3.16801,	3.17073,	3.17341,	3.17603,	3.1786,	3.18112,	3.18359,	3.18601,	3.18837,	3.19069,	3.19295,	3.19517,	3.19733,	3.19944,	3.2015,	3.2035,	3.20546,	3.20736,	3.20922,	3.21102,	3.21277,	3.21447,	3.21612,	3.21772,	3.21927,	3.22076,	3.22221,	3.2236,	3.22494,	3.22623,	3.22747,	3.22867,	3.2298,	3.23089,	3.23193,	3.23292,	3.23385,	3.23474,	3.23558,	3.23636,	3.2371,	3.23778,	3.23842,	3.239,	3.23953,	3.24002,	3.24045,	3.24084,	3.24117,	3.24145,	3.24169,	3.24188,	3.24201,	3.2421,	3.24213,	3.24212,	3.24206,	3.24195,	3.24179,	3.24158,	3.24133,	3.24102,	3.24067,	3.24026,	3.23981,	3.23931,	3.23877,	3.23817,	3.23753,	3.23684,	3.2361,	3.23531,	3.23448,	3.2336,	3.23267,	3.23169,	3.23067,	3.2296,	3.22849,	3.22732,	3.22611,	3.22486,	3.22356,	3.22221,	3.22082,	3.21938,	3.21789,	3.21636,	3.21478,	3.21316,	3.2115,	3.20978,	3.20803,	3.20623,	3.20438,	3.20249,	3.20056,	3.19858,	3.19656,	3.19449,	3.19238,	3.19023,	3.18804,	3.1858,	3.18351,	3.18119,	3.17882,	3.17641,	3.17396,	3.17147,	3.16893,	3.16635,	3.16373,	3.16107,	3.15837,	3.15563,	3.15284,	3.15002,	3.14715,	3.14425,	3.1413,	3.13831,	3.13529,	3.13222,	3.12912,	3.12597,	3.12279,	3.11957,	3.11631,	3.11301,	3.10967,	3.10629,	3.10288,	3.09943,	3.09594,	3.09241,	3.08884,	3.08524,	3.08161,	3.07793,	3.07422,	3.07047,	3.06669,	3.06287,	3.05902,	3.05513,	3.0512,	3.04724,	3.04324,	3.03921,	3.03515,	3.03105,	3.02692,	3.02275,	3.01855,	3.01432,	3.01006,	3.00576,	3.00142,	2.99706,	2.99266,	2.98823,	2.98377,	2.97928,	2.97476,	2.9702,	2.96562,	2.961,	2.95635,	2.95167,	2.94696,	2.94223,	2.93746,	2.93266,	2.92783,	2.92298,	2.91809,	2.91318,	2.90824,	2.90327,	2.89827,	2.89324,	2.88819,	2.88311,	2.878,	2.87286,	2.8677,	2.86251,	2.8573,	2.85206,	2.84679,	2.8415,	2.83618,	2.83084,	2.82547,	2.82008,	2.81467,	2.80922,	2.80376,	2.79827,	2.79276,	2.78722,	2.78166,	2.77608,	2.77048,	2.76485,	2.7592,	2.75353,	2.74784,	2.74213,	2.73639,	2.73063,	2.72486,	2.71906,	2.71324,	2.7074,	2.70154,	2.69566,	2.68976,	2.68385,	2.67791,	2.67195,	2.66598,	2.65999,	2.65398,	2.64795,	2.6419,	2.63584,	2.62975,	2.62366,	2.61754,	2.61141,	2.60526,	2.5991,	2.59291,	2.58672,	2.58051,	2.57428,	2.56804,	2.56178,	2.55551,	2.54922,	2.54292,	2.53661,	2.53028,	2.52394,	2.51758,	2.51121,	2.50483,	2.49844,	2.49203,	2.48561,	2.47918,	2.47274,	2.46629,	2.45982,	2.45335,	2.44686,	2.44036,	2.43385,	2.42733,	2.4208,	2.41427,	2.40772,	2.40116,	2.39459,	2.38802,	2.38143,	2.37484,	2.36824,	2.36163,	2.35501,	2.34838,	2.34175,	2.33511,	2.32846,	2.32181,	2.31514,	2.30848,	2.3018,	2.29512,	2.28844,	2.28174,	2.27505,	2.26834,	2.26164,	2.25492,	2.24821,	2.24149,	2.23476,	2.22803,	2.2213,	2.21456,	2.20782,	2.20107,	2.19433,	2.18758,	2.18082,	2.17407,	2.16731,	2.16055,	2.15379,	2.14703,	2.14026,	2.1335,	2.12673,	2.11996,	2.11319,	2.10642,	2.09965,	2.09288,	2.08611,	2.07934,	2.07257,	2.0658,	2.05903,	2.05227,	2.0455,	2.03873,	2.03197,	2.02521,	2.01845,	2.01169,	2.00493,	1.99818,	1.99143,	1.98468,	1.97794,	1.97119,	1.96445,	1.95772,	1.95098,	1.94426,	1.93753,	1.93081,	1.92409,	1.91738,	1.91068,	1.90397,	1.89728,	1.89058,	1.8839,	1.87721,	1.87054,	1.86387,	1.8572,	1.85054,	1.84389,	1.83725,	1.83061,	1.82397,	1.81735,	1.81073,	1.80412,	1.79751,	1.79091,	1.78433,	1.77774,	1.77117,	1.7646,	1.75805,	1.7515,	1.74496,	1.73843,	1.7319,	1.72539,	1.71888,	1.71239,	1.7059,	1.69942,	1.69296,	1.6865,	1.68005,	1.67361,	1.66719,	1.66077,	1.65436,	1.64797,	1.64158,	1.63521,	1.62884,	1.62249,	1.61615,	1.60982,	1.6035,	1.5972,	1.5909,	1.58462,	1.57835,	1.57209,	1.56585,	1.55961,	1.55339,	1.54718,	1.54099,	1.5348,	1.52863,	1.52248,	1.51633,	1.5102,	1.50409,	1.49798,	1.49189,	1.48582,	1.47975,	1.47371,	1.46767,	1.46165,	1.45565,	1.44966,	1.44368,	1.43772,	1.43177,	1.42584,	1.41992,	1.41402,	1.40813,	1.40226,	1.3964,	1.39056,	1.38474,	1.37893,	1.37313,	1.36735,	1.36159,	1.35584,	1.35011,	1.3444,	1.3387,	1.33302,	1.32735,	1.3217,	1.31607,	1.31046,	1.30486,	1.29927,	1.29371,	1.28816,	1.28263,	1.27712,	1.27162,	1.26614,	1.26068,	1.25523,	1.24981,	1.2444,	1.239,	1.23363,	1.22827,	1.22294,	1.21761,	1.21231,	1.20703,	1.20176,	1.19651,	1.19128,	1.18607,	1.18088,	1.17571,	1.17055,	1.16541,	1.16029,	1.15519,	1.15011,	1.14505,	1.14001,	1.13498,	1.12997,	1.12499,	1.12002,	1.11507,	1.11014,	1.10523,	1.10034,	1.09547,	1.09062,	1.08578,	1.08097,	1.07618,	1.0714,	1.06665,	1.06191,	1.0572,	1.0525,	1.04782,	1.04317,	1.03853,	1.03392,	1.02932,	1.02474,	1.02018,	1.01565,	1.01113,	1.00663,	1.00216,	0.997701,	0.993264,	0.988848,	0.984452,	0.980076,	0.97572,	0.971385,	0.96707,	0.962775,	0.9585,	0.954246,	0.950012,	0.945799,	0.941606,	0.937433,	0.933281,	0.92915,	0.925038,	0.920948,	0.916878,	0.912828,	0.908799,	0.90479,	0.900802,	0.896835,	0.892888,	0.888962,	0.885056,	0.881171,	0.877307,	0.873463,	0.86964,	0.865837,	0.862056,	0.858294,	0.854554,	0.850834,	0.847134,	0.843456,	0.839798,	0.83616,	0.832543,	0.828947,	0.825372,	0.821817,	0.818282,	0.814769,	0.811276,	0.807803,	0.804351,	0.80092,	0.797509,	0.794119,	0.790749,	0.7874,	0.784072,	0.780764,	0.777476,	0.774209,	0.770963,	0.767737,	0.764531,	0.761346,	0.758181,	0.755037,	0.751913,	0.74881,	0.745726,	0.742663,	0.739621,	0.736598,	0.733596,	0.730614,	0.727653,	0.724711,	0.72179,	0.718889,	0.716008,	0.713147,	0.710306,	0.707485,	0.704684,	0.701903,	0.699143,	0.696402,	0.69368,	0.690979,	0.688298,	0.685636,	0.682994,	0.680372,	0.67777,	0.675187,	0.672624,	0.67008,	0.667556,	0.665052,	0.662567,	0.660101,	0.657655,	0.655228,	0.65282,	0.650432,	0.648063,	0.645714,	0.643383,	0.641072,	0.638779,	0.636506,	0.634252,	0.632016,	0.6298,	0.627602,	0.625424,	0.623264,	0.621122,	0.619,	0.616896,	0.614811,	0.612744,	0.610695,	0.608666,	0.606654,	0.604661,	0.602686,	0.60073,	0.598791,	0.596871,	0.594969,	0.593085,	0.591219,	0.589371,	0.58754,	0.585728,	0.583933,	0.582156,	0.580397,	0.578655,	0.576931,	0.575225,	0.573536,	0.571864,	0.570209,	0.568572,	0.566952,	0.56535,	0.563764,	0.562195,	0.560644,	0.559109,	0.557591,	0.55609,	0.554605,	0.553138,	0.551687,	0.550252,	0.548834,	0.547433,	0.546047,	0.544679,	0.543326,	0.541989,	0.540669,	0.539365,	0.538076,	0.536804,	0.535547,	0.534307,	0.533082,	0.531872,	0.530679,	0.5295,	0.528338,	0.52719,	0.526058,	0.524941,	0.52384,	0.522753,	0.521682,	0.520625,	0.519584,	0.518557,	0.517545,	0.516548,	0.515566,	0.514598,	0.513644,	0.512705,	0.511781,	0.51087,	0.509974,	0.509092,	0.508224,	0.50737,	0.50653,	0.505704,	0.504892,	0.504093,	0.503309,	0.502537,	0.501779,	0.501035,	0.500304,	0.499586,	0.498882,	0.49819,	0.497512,	0.496846,	0.496194,	0.495554,	0.494927,	0.494313,	0.493712,	0.493123,	0.492546,	0.491982,	0.49143,	0.490891,	0.490364,	0.489848,	0.489345,	0.488854,	0.488374,	0.487907,	0.487451,	0.487006,	0.486574,	0.486152,	0.485743,	0.485344,	0.484957,	0.484581,	0.484216,	0.483862,	0.483519,	0.483187,	0.482866,	0.482555,	0.482256,	0.481966,	0.481688,	0.481419,	0.481161,	0.480913,	0.480676,	0.480448,	0.480231,	0.480024,	0.479826,	0.479638,	0.47946,	0.479292,	0.479133,	0.478984,	0.478844,	0.478713,	0.478592,	0.47848,	0.478377,	0.478283,	0.478198,	0.478122,	0.478055,	0.477996,	0.477946,	0.477905,	0.477872,	0.477848,	0.477832,	0.477824,	0.477824,	0.477833,	0.477849,	0.477874,	0.477906,	0.477946,	0.477994,	0.47805,	0.478113,	0.478184,	0.478262,	0.478347,	0.47844,	0.47854,	0.478647,	0.478761,	0.478883,	0.479011,	0.479145,	0.479287,	0.479435,	0.47959,	0.479751,	0.479919,	0.480094,	0.480274,	0.480461,	0.480654,	0.480853,	0.481058,	0.481269,	0.481485,	0.481708,	0.481936,	0.48217,	0.482409,	0.482654,	0.482905,	0.483161,	0.483421,	0.483688,	0.483959,	0.484235,	0.484517,	0.484803,	0.485094,	0.48539,	0.48569,	0.485996,	0.486305,	0.48662,	0.486938,	0.487261,	0.487588,	0.48792,	0.488255,	0.488595,	0.488939,	0.489286,	0.489637,	0.489993,	0.490351,	0.490714,	0.49108,	0.49145,	0.491823,	0.492199,	0.492579,	0.492962,	0.493348,	0.493737,	0.494129,	0.494525,	0.494923,	0.495324,	0.495727,	0.496134,	0.496543,	0.496954,	0.497369,	0.497785,	0.498204,	0.498625,	0.499049,	0.499475,	0.499902,	0.500332,	0.500764,	0.501198,	0.501634,	0.502071,	0.50251,	0.502951,	0.503394,	0.503838,	0.504284,	0.504731,	0.505179,	0.505629,	0.50608,	0.506532,	0.506985,	0.50744,	0.507895,	0.508351,	0.508809,	0.509267,	0.509726,	0.510185,	0.510645,	0.511106,	0.511568,	0.51203,	0.512492,	0.512955,	0.513418,	0.513881,	0.514345,	0.514809,	0.515272,	0.515736,	0.5162,	0.516664,	0.517128,	0.517591,	0.518055,	0.518518,	0.518981,	0.519443,	0.519905,	0.520367,	0.520828,	0.521288,	0.521748,	0.522207,	0.522665,	0.523123,	0.52358,	0.524036,	0.524491,	0.524945,	0.525398,	0.52585,	0.5263,	0.52675,	0.527199,	0.527646,	0.528092,	0.528536,	0.52898,	0.529421,	0.529862,	0.5303,	0.530737,	0.531173,	0.531607,	0.532039,	0.53247,	0.532898,	0.533325,	0.53375,	0.534173,	0.534594,	0.535014,	0.535431,	0.535846,	0.536259,	0.536669,	0.537078,	0.537484,	0.537888,	0.53829,	0.53869,	0.539087,	0.539482,	0.539874,	0.540263,	0.540651,	0.541035,	0.541417,	0.541797,	0.542173,	0.542548,	0.542919,	0.543287,	0.543653,	0.544016,	0.544376,	0.544733,	0.545087,	0.545439,	0.545787,	0.546132,	0.546474,	0.546814,	0.54715,	0.547482,	0.547812,	0.548139,	0.548462,	0.548782,	0.549099,	0.549412,	0.549722,	0.550029,	0.550332,	0.550632,	0.550929,	0.551222,	0.551511,	0.551797,	0.55208,	0.552359,	0.552634,	0.552906,	0.553174,	0.553438,	0.553699,	0.553956,	0.55421,	0.554459,	0.554705,	0.554947,	0.555186,	0.55542,	0.555651,	0.555878,	0.556101,	0.55632,	0.556535,	0.556746,	0.556953,	0.557157,	0.557356,	0.557551,	0.557743,	0.55793,	0.558113,	0.558293,	0.558468,	0.558639,	0.558806,	0.558969,	0.559128,	0.559283,	0.559434,	0.55958,	0.559722,	0.559861,	0.559995,	0.560124,	0.56025,	0.560371,	0.560489,	0.560602,	0.56071,	0.560815,	0.560915,	0.561011,	0.561103,	0.56119,	0.561274,	0.561353,	0.561427,	0.561498,	0.561564,	0.561626,	0.561683,	0.561736,	0.561785,	0.56183,	0.56187,	0.561906,	0.561938,	0.561966,	0.561989,	0.562007,	0.562022,	0.562032,	0.562038,	0.562039,	0.562037,	0.56203,	0.562018,	0.562003,	0.561983,	0.561958,	0.56193,	0.561897,	0.56186,	0.561818,	0.561773,	0.561723,	0.561669,	0.56161,	0.561547,	0.56148,	0.561409,	0.561334,	0.561254,	0.56117,	0.561082,	0.56099,	0.560893,	0.560793,	0.560688,	0.560579,	0.560466,	0.560349,	0.560227,	0.560102,	0.559972,	0.559839,	0.559701,	0.559559,	0.559413,	0.559263,	0.559109,	0.558951,	0.558789,	0.558623,	0.558453,	0.558279,	0.558102,	0.55792,	0.557734,	0.557545,	0.557351,	0.557154,	0.556953,	0.556748,	0.556539,	0.556327,	0.556111,	0.555891,	0.555667,	0.555439,	0.555208,	0.554974,	0.554735,	0.554493,	0.554247,	0.553998,	0.553746,	0.553489,	0.553229,	0.552966,	0.552699,	0.552429,	0.552156,	0.551879,	0.551598,	0.551314,	0.551027,	0.550737,	0.550443,	0.550147,	0.549847,	0.549543,	0.549237,	0.548927,	0.548615,	0.548299,	0.54798,	0.547659,	0.547334,	0.547006,	0.546675,	0.546342,	0.546005,	0.545666,	0.545324,	0.544979,	0.544631,	0.544281,	0.543928,	0.543572,	0.543214,	0.542853,	0.542489,	0.542123,	0.541755,	0.541384,	0.54101,	0.540635,	0.540257,	0.539876,	0.539493,	0.539108,	0.538721,	0.538332,	0.53794,	0.537546,	0.537151,	0.536753,	0.536353,	0.535951,	0.535547,	0.535142,	0.534734,	0.534325,	0.533914,	0.533501,	0.533087,	0.532671,	0.532253,	0.531834,	0.531413,	0.530991,	0.530567,	0.530142,	0.529715,	0.529287,	0.528858,	0.528427,	0.527996,	0.527563,	0.527129,	0.526694,	0.526258,	0.525821,	0.525383,	0.524944,	0.524504,	0.524063,	0.523622,	0.52318,	0.522737,	0.522293,	0.521849,	0.521405,	0.520959,	0.520514,	0.520068,	0.519621,	0.519175,	0.518728,	0.51828,	0.517833,	0.517385,	0.516938,	0.51649,	0.516042,	0.515595,	0.515147,	0.5147,	0.514253,	0.513806,	0.513359,	0.512913,	0.512467,	0.512021,	0.511576,	0.511132,	0.510688,	0.510245,	0.509802,	0.509361,	0.50892,	0.50848,	0.50804,	0.507602,	0.507165,	0.506729,	0.506294,	0.50586,	0.505427,	0.504995,	0.504565,	0.504136,	0.503709,	0.503283,	0.502859,	0.502436,	0.502015,	0.501595,	0.501178,	0.500762,	0.500348,	0.499935,	0.499525,	0.499117,	0.498711,	0.498307,	0.497905,	0.497505,	0.497108,	0.496713,	0.49632,	0.49593,	0.495542,	0.495157,	0.494775,	0.494395,	0.494018,	0.493644,	0.493272,	0.492904,	0.492538,	0.492176,	0.491816,	0.49146,	0.491107,	0.490757,	0.490411,	0.490067,	0.489728,	0.489391,	0.489059,	0.488729,	0.488404,	0.488082,	0.487764,	0.48745,	0.48714,	0.486833,	0.486531,	0.486233,	0.485938,	0.485648,	0.485363,	0.485081,	0.484804,	0.484532,	0.484263,	0.484,	0.483741,	0.483487,	0.483237,	0.482992,	0.482752,	0.482517,	0.482287,	0.482062,	0.481842,	0.481627,	0.481417,	0.481213,	0.481014,	0.48082,	0.480632,	0.480449,	0.480272,	0.480101,	0.479935,	0.479775,	0.479621,	0.479472,	0.47933,	0.479194,	0.479063,	0.478939,	0.478821,	0.478709,	0.478604,	0.478505,	0.478412,	0.478326,	0.478247,	0.478174,	0.478108,	0.478048,	0.477996,	0.47795,	0.477911,	0.477879,	0.477854,	0.477837,	0.477826,	0.477823,	0.477827,	0.477839,	0.477857,	0.477884,	0.477918,	0.477959,	0.478009,	0.478066,	0.478131,	0.478203,	0.478284,	0.478373,	0.47847,	0.478574,	0.478688,	0.478809,	0.478939,	0.479077,	0.479223,	0.479378,	0.479542,	0.479714,	0.479895,	0.480084,	0.480283,	0.48049,	0.480707,	0.480932,	0.481166,	0.48141,	0.481663,	0.481925,	0.482196,	0.482477,	0.482767,	0.483067,	0.483376,	0.483695,	0.484023,	0.484362,	0.48471,	0.485068,	0.485436,	0.485814,	0.486203,	0.486601,	0.48701,	0.487428,	0.487858,	0.488297,	0.488747,	0.489208,	0.489679,	0.490161,	0.490653,	0.491156,	0.49167,	0.492195,	0.492731,	0.493278,	0.493836,	0.494406,	0.494986,	0.495578,	0.496181,	0.496795,	0.497421,	0.498058,	0.498707,	0.499368,	0.50004,	0.500724,	0.50142,	0.502128,	0.502848,	0.50358,	0.504324,	0.50508,	0.505848,	0.506628,	0.507421,	0.508226,	0.509044,	0.509874,	0.510716,	0.511572,	0.51244,	0.51332,	0.514214,	0.51512,	0.51604,	0.516972,	0.517917,	0.518876,	0.519848,	0.520832,	0.521831,	0.522842,	0.523867,	0.524905,	0.525957,	0.527023,	0.528102,	0.529195,	0.530302,	0.531422,	0.532556,	0.533705,	0.534867,	0.536043,	0.537234,	0.538439,	0.539658,	0.540891,	0.542138,	0.5434,	0.544677,	0.545968,	0.547273,	0.548594,	0.549929,	0.551278,	0.552643,	0.554022,	0.555417,	0.556826,	0.55825,	0.55969,	0.561144,	0.562614,	0.564099,	0.5656,	0.567116,	0.568647,	0.570194,	0.571756,	0.573334,	0.574928,	0.576537,	0.578162,	0.579803,	0.58146,	0.583133,	0.584822,	0.586527,	0.588248,	0.589985,	0.591738,	0.593508,	0.595294,	0.597096,	0.598915,	0.60075,	0.602602,	0.604471,	0.606356,	0.608258,	0.610176,	0.612112,	0.614064,	0.616033,	0.618019,	0.620022,	0.622043,	0.62408,	0.626135,	0.628206,	0.630295,	0.632402,	0.634526,	0.636667,	0.638825,	0.641002,	0.643196,	0.645407,	0.647636,	0.649883,	0.652148,	0.65443,	0.656731,	0.659049,	0.661386,	0.66374,	0.666113,	0.668503,	0.670912,	0.673339,	0.675784,	0.678248,	0.68073,	0.683231,	0.68575,	0.688287,	0.690843,	0.693418,	0.696011,	0.698623,	0.701254,	0.703904,	0.706573,	0.70926,	0.711966,	0.714692,	0.717436,	0.7202,	0.722982,	0.725784,	0.728605,	0.731445,	0.734305,	0.737184,	0.740082,	0.743,	0.745937,	0.748894,	0.751871,	0.754867,	0.757883,	0.760918,	0.763973,	0.767048,	0.770143,	0.773258,	0.776392,	0.779547,	0.782721,	0.785916,	0.789131,	0.792365,	0.79562,	0.798896,	0.802191,	0.805507,	0.808843,	0.8122,	0.815576,	0.818974,	0.822392,	0.82583,	0.829289,	0.832769,	0.836269,	0.83979,	0.843331,	0.846894,	0.850477,	0.854081,	0.857706,	0.861352,	0.865018,	0.868706,	0.872415,	0.876145,	0.879896,	0.883668,	0.887461,	0.891276,	0.895112,	0.898969,	0.902847,	0.906747,	0.910668,	0.91461,	0.918574,	0.922559,	0.926566,	0.930595,	0.934645,	0.938717,	0.94281,	0.946925,	0.951062,	0.955221,	0.959401,	0.963603,	0.967827,	0.972073,	0.976341,	0.98063,	0.984942,	0.989276,	0.993632,	0.998009,	1.00241,	1.00683,	1.01128,	1.01574,	1.02023,	1.02474,	1.02927,	1.03383,	1.03841,	1.04301,	1.04763,	1.05228,	1.05694,	1.06163,	1.06634,	1.07108,	1.07584,	1.08062,	1.08542,	1.09024,	1.09509,	1.09996,	1.10486,	1.10977,	1.11471,	1.11967,	1.12466,	1.12966,	1.13469,	1.13975,	1.14482,	1.14992,	1.15504,	1.16019,	1.16536,	1.17055,	1.17576,	1.181,	1.18626,	1.19154,	1.19685,	1.20217,	1.20753,	1.2129,	1.2183,	1.22372,	1.22917,	1.23464,	1.24013,	1.24564,	1.25118,	1.25674,	1.26233,	1.26794,	1.27357,	1.27922,	1.2849,	1.29061,	1.29633,	1.30208,	1.30785,	1.31365,	1.31947,	1.32531,	1.33118,	1.33707,	1.34298,	1.34892,	1.35488,	1.36087,	1.36688,	1.37291,	1.37896,	1.38504,	1.39115,	1.39727,	1.40342,	1.4096,	1.4158,	1.42202,	1.42827,	1.43453,	1.44083,	1.44715,	1.45349,	1.45985,	1.46624,	1.47265,	1.47909,	1.48555,	1.49203,	1.49854,	1.50508,	1.51163,	1.51821,	1.52482,	1.53144,	1.5381,	1.54477,	1.55147,	1.5582,	1.56494,	1.57172,	1.57851,	1.58533,	1.59217,	1.59904,	1.60593,	1.61285,	1.61979,	1.62676,	1.63374,	1.64076,	1.64779,	1.65485,	1.66194,	1.66905,	1.67618,	1.68333,	1.69052,	1.69772,	1.70495,	1.7122,	1.71948,	1.72678,	1.73411,	1.74146,	1.74883,	1.75623,	1.76365,	1.77109,	1.77856,	1.78606,	1.79358,	1.80112,	1.80868,	1.81628,	1.82389,	1.83153,	1.83919,	1.84688,	1.85459,	1.86232,	1.87008,	1.87787,	1.88567,	1.89351,	1.90136,	1.90924,	1.91714,	1.92507,	1.93302,	1.941,	1.949,	1.95702,	1.96507,	1.97314,	1.98124,	1.98936,	1.9975,	2.00567,	2.01387,	2.02208,	2.03032,	2.03859,	2.04687,	2.05519,	2.06352,	2.07188,	2.08027,	2.08867,	2.09711,	2.10556,	2.11404,	2.12255,	2.13107,	2.13963,	2.1482,	2.1568,	2.16542,	2.17407,	2.18274,	2.19144,	2.20015,	2.2089,	2.21766,	2.22645,	2.23527,	2.2441,	2.25297,	2.26185,	2.27076,	2.27969,	2.28865,	2.29763,	2.30663,	2.31566,	2.32471,	2.33378,	2.34288,	2.352,	2.36115,	2.37032,	2.37951,	2.38872,	2.39796,	2.40723,	2.41651,	2.42582,	2.43516,	2.44451,	2.45389,	2.4633,	2.47272,	2.48217,	2.49165,	2.50114,	2.51066,	2.52021,	2.52977,	2.53936,	2.54898,	2.55861,	2.56827,	2.57796,	2.58766,	2.59739,	2.60714,	2.61692,	2.62672,	2.63654,	2.64638,	2.65625,	2.66614,	2.67606,	2.68599,	2.69595,	2.70593,	2.71594,	2.72597,	2.73602,	2.74609,	2.75619,	2.76631,	2.77645,	2.78661,	2.7968,	2.80701,	2.81724,	2.8275,	2.83778,	2.84808,	2.8584,	2.86874,	2.87911,	2.8895,	2.89992,	2.91035,	2.92081,	2.93129,	2.94179,	2.95232,	2.96286,	2.97343,	2.98402,	2.99464,	3.00527,	3.01593,	3.02661,	3.03731,	3.04804,	3.05878,	3.06955,	3.08034,	3.09115,	3.10199,	3.11284,	3.12372,	3.13462,	3.14554,	3.15648,	3.16745,	3.17843,	3.18944,	3.20047,	3.21152,	3.22259,	3.23369,	3.2448,	3.25594,	3.2671,	3.27828,	3.28948,	3.3007,	3.31195,	3.32321,	3.3345,	3.34581,	3.35714,	3.36849,	3.37986,	3.39125,	3.40266,	3.4141,	3.42555,	3.43703,	3.44852,	3.46004,	3.47158,	3.48314,	3.49472,	3.50632,	3.51794,	3.52958,	3.54125,	3.55293,	3.56463,	3.57636,	3.5881,	3.59987,	3.61165,	3.62346,	3.63528,	3.64713,	3.659,	3.67088,	3.68279,	3.69472,	3.70667,	3.71863,	3.73062,	3.74263,	3.75465,	3.7667,	3.77877,	3.79085,	3.80296,	3.81508,	3.82723,	3.8394,	3.85158,	3.86378,	3.87601,	3.88825,	3.90051,	3.9128,	3.9251,	3.93742,	3.94976,	3.96212,	3.9745,	3.98689,	3.99931,	4.01174,	4.0242,	4.03667,	4.04916,	4.06168,	4.07421,	4.08676,	4.09932,	4.11191,	4.12451,	4.13714,	4.14978,	4.16244,	4.17512,	4.18782,	4.20053,	4.21327,	4.22602,	4.23879,	4.25158,	4.26439,	4.27721,	4.29005,	4.30292,	4.31579,	4.32869,	4.34161,	4.35454,	4.36749,	4.38046,	4.39345,	4.40645,	4.41947,	4.43251,	4.44557,	4.45864,	4.47173,	4.48484,	4.49797,	4.51111,	4.52427,	4.53745,	4.55064,	4.56385,	4.57708,	4.59033,	4.60359,	4.61687,	4.63017,	4.64348,	4.65681,	4.67016,	4.68352,	4.6969,	4.71029,	4.72371,	4.73714,	4.75058,	4.76404,	4.77752,	4.79102,	4.80453,	4.81805,	4.8316,	4.84516,	4.85873,	4.87232,	4.88593,	4.89955,	4.91319,	4.92684,	4.94051,	4.9542,	4.9679,	4.98161,	4.99535,	5.00909,	5.02286,	5.03663,	5.05043,	5.06423,	5.07806,	5.0919,	5.10575,	5.11962,	5.1335,	5.1474,	5.16131,	5.17524,	5.18918,	5.20314,	5.21711,	5.2311,	5.2451,	5.25911,	5.27314,	5.28719,	5.30125,	5.31532,	5.32941,	5.34351,	5.35762,	5.37175,	5.38589,	5.40005,	5.41422,	5.42841,	5.4426,	5.45682,	5.47104,	5.48528,	5.49953,	5.5138,	5.52808,	5.54237,	5.55668,	5.571,	5.58533,	5.59968,	5.61403,	5.62841,	5.64279,	5.65719,	5.6716,	5.68602,	5.70046,	5.71491,	5.72937,	5.74384,	5.75833,	5.77283,	5.78734,	5.80186,	5.8164,	5.83095,	5.84551,	5.86008,	5.87466,	5.88926,	5.90387,	5.91849,	5.93312,	5.94776,	5.96242,	5.97709,	5.99177,	6.00646,	6.02116,	6.03587,	6.0506,	6.06533,	6.08008,	6.09484,	6.10961,	6.12439,	6.13918,	6.15398,	6.16879,	6.18362,	6.19845,	6.2133,	6.22816,	6.24302,	6.2579,	6.27279,	6.28769,	6.30259,	6.31751,	6.33244,	6.34738,	6.36233,	6.37729,	6.39226,	6.40724,	6.42223,	6.43723,	6.45224,	6.46726,	6.48229,	6.49732,	6.51237,	6.52743,	6.54249,	6.55757,	6.57266,	6.58775,	6.60285,	6.61797,	6.63309,	6.64822,	6.66336,	6.67851,	6.69366,	6.70883,	6.724,	6.73919,	6.75438,	6.76958,	6.78479,	6.80001,	6.81523,	6.83047,	6.84571,	6.86096,	6.87622,	6.89148,	6.90676,	6.92204,	6.93733,	6.95263,	6.96793,	6.98325,	6.99857,	7.0139,	7.02923,	7.04458,	7.05993,	7.07529,	7.09065,	7.10602,	7.1214,	7.13679,	7.15218,	7.16758,	7.18299,	7.19841,	7.21383,	7.22925,	7.24469,	7.26013,	7.27558,	7.29103,	7.30649,	7.32196,	7.33743,	7.35291,	7.36839,	7.38389,	7.39938,	7.41489,	7.4304,	7.44591,	7.46143,	7.47696,	7.49249,	7.50803,	7.52357,	7.53912,	7.55467,	7.57023,	7.5858,	7.60137,	7.61694,	7.63252,	7.64811,	7.6637,	7.6793,	7.6949,	7.7105,	7.72611,	7.74172,	7.75734,	7.77297,	7.7886,	7.80423,	7.81986,	7.83551,	7.85115,	7.8668,	7.88245,	7.89811,	7.91377,	7.92944,	7.94511,	7.96078,	7.97646,	7.99214,	8.00783,	8.02351,	8.03921,	8.0549,	8.0706,	8.0863,	8.10201,	8.11771,	8.13343,	8.14914,	8.16486,	8.18058,	8.1963,	8.21203,	8.22776,	8.24349,	8.25922,	8.27496,	8.2907,	8.30644,	8.32219,	8.33793,	8.35368,	8.36943,	8.38519,	8.40094,	8.4167,	8.43246,	8.44822,	8.46399,	8.47975,	8.49552,	8.51129,	8.52706,	8.54283,	8.5586,	8.57438,	8.59016,	8.60593,	8.62171,	8.63749,	8.65327,	8.66906,	8.68484,	8.70062,	8.71641,	8.7322,	8.74798,	8.76377,	8.77956,	8.79535,	8.81114,	8.82693,	8.84272,	8.85851,	8.8743,	8.89009,	8.90588,	8.92167,	8.93747,	8.95326,	8.96905,	8.98484,	9.00063,	9.01642,	9.03221,	9.04801,	9.0638,	9.07959,	9.09537,	9.11116,	9.12695,	9.14274,	9.15852,	9.17431,	9.1901,	9.20588,	9.22166,	9.23744,	9.25322,	9.269,	9.28478,	9.30056,	9.31634,	9.33211,	9.34788,	9.36365,	9.37942,	9.39519,	9.41096,	9.42672,	9.44249,	9.45825,	9.47401,	9.48976,	9.50552,	9.52127,	9.53702,	9.55277,	9.56852,	9.58426,	9.6,	9.61574,	9.63148,	9.64721,	9.66294,	9.67867,	9.6944,	9.71012,	9.72584,	9.74156,	9.75727,	9.77298,	9.78869,	9.8044,	9.8201,	9.8358,	9.85149,	9.86718,	9.88287,	9.89856,	9.91424,	9.92992,	9.94559,	9.96126,	9.97693,	9.99259,	10.0083,	10.0239,	10.0396,	10.0552,	10.0708,	10.0865,	10.1021,	10.1178,	10.1334,	10.149,	10.1646,	10.1802,	10.1958,	10.2114,	10.227,	10.2426,	10.2582,	10.2738,	10.2894,	10.305,	10.3205,	10.3361,	10.3517,	10.3672,	10.3828,	10.3983,	10.4138,	10.4294,	10.4449,	10.4604,	10.4759,	10.4915,	10.507,	10.5225,	10.538,	10.5534,	10.5689,	10.5844,	10.5999,	10.6153,	10.6308,	10.6463,	10.6617,	10.6771,	10.6926,	10.708,	10.7234,	10.7388,	10.7542,	10.7696,	10.785,	10.8004,	10.8158,	10.8312,	10.8466,	10.8619,	10.8773,	10.8926,	10.908,	10.9233,	10.9386,	10.9539,	10.9693,	10.9846,	10.9999,	11.0151,	11.0304,	11.0457,	11.061,	11.0762,	11.0915,	11.1067,	11.122,	11.1372,	11.1524,	11.1676,	11.1828,	11.198,	11.2132,	11.2284,	11.2436,	11.2587,	11.2739,	11.2891,	11.3042,	11.3193,	11.3344,	11.3496,	11.3647,	11.3798,	11.3949,	11.4099,	11.425,	11.4401,	11.4551,	11.4702,	11.4852,	11.5002,	11.5153,	11.5303,	11.5453,	11.5603,	11.5752,	11.5902,	11.6052,	11.6201,	11.6351,	11.65,	11.6649,	11.6798,	11.6948,	11.7097,	11.7245,	11.7394,	11.7543,	11.7691,	11.784,	11.7988,	11.8137,	11.8285,	11.8433,	11.8581,	11.8729,	11.8876,	11.9024,	11.9172,	11.9319,	11.9467,	11.9614,	11.9761,	11.9908,	12.0055,	12.0202,	12.0349,	12.0495,	12.0642,	12.0788,	12.0934,	12.1081,	12.1227,	12.1373,	12.1518,	12.1664,	12.181,	12.1955,	12.2101,	12.2246,	12.2391,	12.2536,	12.2681,	12.2826,	12.2971,	12.3116,	12.326,	12.3404,	12.3549,	12.3693,	12.3837,	12.3981,	12.4125,	12.4268,	12.4412,	12.4555,	12.4699,	12.4842,	12.4985,	12.5128,	12.5271,	12.5414,	12.5556,	12.5699,	12.5841,	12.5983,	12.6125,	12.6267,	12.6409,	12.6551,	12.6693,	12.6834,	12.6975,	12.7117,	12.7258,	12.7399,	12.754,	12.768,	12.7821,	12.7961,	12.8102,	12.8242,	12.8382,	12.8522,	12.8662,	12.8801,	12.8941,	12.908,	12.922,	12.9359,	12.9498,	12.9637,	12.9775,	12.9914,	13.0053,	13.0191,	13.0329,	13.0467,	13.0605,	13.0743,	13.0881,	13.1018,	13.1156,	13.1293,	13.143,	13.1567,	13.1704,	13.184,	13.1977,	13.2113,	13.225,	13.2386,	13.2522,	13.2658,	13.2793,	13.2929,	13.3064,	13.32,	13.3335,	13.347,	13.3605,	13.3739,	13.3874,	13.4008,	13.4143,	13.4277,	13.4411,	13.4544,	13.4678,	13.4812,	13.4945,	13.5078,	13.5211,	13.5344,	13.5477,	13.561,	13.5742,	13.5875,	13.6007,	13.6139,	13.6271,	13.6402,	13.6534,	13.6665,	13.6797,	13.6928,	13.7059,	13.719,	13.732,	13.7451,	13.7581,	13.7711,	13.7841,	13.7971,	13.8101,	13.8231,	13.836,	13.8489,	13.8619,	13.8747,	13.8876,	13.9005,	13.9133,	13.9262,	13.939,	13.9518,	13.9646,	13.9773,	13.9901,	14.0028,	14.0156,	14.0283,	14.0409,	14.0536,	14.0663,	14.0789,	14.0915,	14.1041,	14.1167,	14.1293,	14.1419,	14.1544,	14.1669,	14.1795,	14.1919,	14.2044,	14.2169,	14.2293,	14.2418,	14.2542,	14.2666,	14.2789,	14.2913,	14.3036,	14.316,	14.3283,	14.3406,	14.3528,	14.3651,	14.3774,	14.3896,	14.4018,	14.414,	14.4262,	14.4383,	14.4505,	14.4626,	14.4747,	14.4868,	14.4989,	14.5109,	14.5229,	14.535,	14.547,	14.559,	14.5709,	14.5829,	14.5948,	14.6067,	14.6186,	14.6305,	14.6424,	14.6542,	14.6661,	14.6779,	14.6897,	14.7015,	14.7132,	14.725,	14.7367,	14.7484,	14.7601,	14.7718,	14.7834,	14.795,	14.8067,	14.8183,	14.8299,	14.8414,	14.853,	14.8645,	14.876,	14.8875,	14.899,	14.9104,	14.9219,	14.9333,	14.9447,	14.9561,	14.9675,	14.9788,	14.9902,	15.0015,	15.0128,	15.024,	15.0353,	15.0466,	15.0578,	15.069,	15.0802,	15.0913,	15.1025,	15.1136,	15.1247,	15.1358,	15.1469,	15.158,	15.169,	15.18,	15.191,	15.202,	15.213,	15.2239,	15.2349,	15.2458,	15.2567,	15.2676,	15.2784,	15.2893,	15.3001,	15.3109,	15.3217,	15.3324,	15.3432,	15.3539,	15.3646,	15.3753,	15.386,	15.3966,	15.4072,	15.4179,	15.4285,	15.439,	15.4496,	15.4601,	15.4706,	15.4811,	15.4916,	15.5021,	15.5125,	15.523,	15.5334,	15.5438,	15.5541,	15.5645,	15.5748,	15.5851,	15.5954,	15.6057,	15.6159,	15.6262,	15.6364,	15.6466,	15.6568,	15.6669,	15.6771,	15.6872,	15.6973,	15.7074,	15.7174,	15.7275,	15.7375,	15.7475,	15.7575,	15.7675,	15.7774,	15.7873,	15.7972,	15.8071,	15.817,	15.8269,	15.8367,	15.8465,	15.8563,	15.8661,	15.8758,	15.8855,	15.8953,	15.905,	15.9146,	15.9243,	15.9339,	15.9436,	15.9531,	15.9627,	15.9723,	15.9818,	15.9913,	16.0009,	16.0103,	16.0198,	16.0292,	16.0387,	16.0481,	16.0574,	16.0668,	16.0762,	16.0855,	16.0948,	16.1041,	16.1133,	16.1226,	16.1318,	16.141,	16.1502,	16.1594,	16.1685,	16.1777,	16.1868,	16.1958,	16.2049,	16.214,	16.223,	16.232,	16.241,	16.25,	16.2589,	16.2679,	16.2768,	16.2857,	16.2945,	16.3034,	16.3122,	16.321,	16.3298,	16.3386,	16.3473,	16.3561,	16.3648,	16.3735,	16.3822,	16.3908,	16.3994,	16.4081,	16.4166,	16.4252,	16.4338,	16.4423,	16.4508,	16.4593,	16.4678,	16.4763,	16.4847,	16.4931,	16.5015,	16.5099,	16.5182,	16.5266,	16.5349,	16.5432,	16.5514,	16.5597,	16.5679,	16.5762,	16.5844,	16.5925,	16.6007,	16.6088,	16.6169,	16.625,	16.6331,	16.6412,	16.6492,	16.6572,	16.6652,	16.6732,	16.6811,	16.6891,	16.697,	16.7049,	16.7128,	16.7206,	16.7285,	16.7363,	16.7441,	16.7519,	16.7596,	16.7673,	16.7751,	16.7828,	16.7904,	16.7981,	16.8057,	16.8133,	16.8209,	16.8285,	16.8361,	16.8436,	16.8511,	16.8586,	16.8661,	16.8735,	16.881,	16.8884,	16.8958,	16.9032,	16.9105,	16.9179,	16.9252,	16.9325,	16.9398,	16.947,	16.9542,	16.9615,	16.9687,	16.9758,	16.983,	16.9901,	16.9972,	17.0043,	17.0114,	17.0185,	17.0255,	17.0325,	17.0395,	17.0465,	17.0534,	17.0604,	17.0673,	17.0742,	17.0811,	17.0879,	17.0948,	17.1016,	17.1084,	17.1152,	17.1219,	17.1286,	17.1354,	17.1421,	17.1487,	17.1554,	17.162,	17.1686,	17.1752,	17.1818,	17.1884,	17.1949,	17.2014,	17.2079,	17.2144,	17.2209,	17.2273,	17.2337,	17.2401,	17.2465,	17.2529,	17.2592,	17.2655,	17.2718,	17.2781,	17.2844,	17.2906,	17.2968,	17.303,	17.3092,	17.3153,	17.3215,	17.3276,	17.3337,	17.3398,	17.3458,	17.3519,	17.3579,	17.3639,	17.3699,	17.3759,	17.3818,	17.3877,	17.3936,	17.3995,	17.4054,	17.4112,	17.417,	17.4228,	17.4286,	17.4344,	17.4401,	17.4459,	17.4516,	17.4573,	17.4629,	17.4686,	17.4742,	17.4798,	17.4854,	17.491,	17.4965,	17.502,	17.5075,	17.513,	17.5185,	17.524,	17.5294,	17.5348,	17.5402,	17.5456,	17.5509,	17.5563,	17.5616,	17.5669,	17.5721,	17.5774,	17.5826,	17.5878,	17.593,	17.5982,	17.6034,	17.6085,	17.6136,	17.6187,	17.6238,	17.6289,	17.6339,	17.6389,	17.6439,	17.6489,	17.6539,	17.6588,	17.6638,	17.6687,	17.6736,	17.6784,	17.6833,	17.6881,	17.6929,	17.6977,	17.7025,	17.7072,	17.712,	17.7167,	17.7214,	17.726,	17.7307,	17.7353,	17.74,	17.7446,	17.7491,	17.7537,	17.7582,	17.7628,	17.7673,	17.7718,	17.7762,	17.7807,	17.7851,	17.7895,	17.7939,	17.7983,	17.8026,	17.8069,	17.8113,	17.8156,	17.8198,	17.8241,	17.8283,	17.8325,	17.8367,	17.8409,	17.8451,	17.8492,	17.8534,	17.8575,	17.8616,	17.8656,	17.8697,	17.8737,	17.8777,	17.8817,	17.8857,	17.8896,	17.8936,	17.8975,	17.9014,	17.9053,	17.9091,	17.913,	17.9168,	17.9206,	17.9244,	17.9282,	17.9319,	17.9357,	17.9394,	17.9431,	17.9467,	17.9504,	17.954,	17.9577,	17.9613,	17.9649,	17.9684,	17.972,	17.9755,	17.979,	17.9825,	17.986,	17.9894,	17.9929,	17.9963,	17.9997,	18.0031,	18.0064,	18.0098,	18.0131,	18.0164,	18.0197,	18.023,	18.0263,	18.0295,	18.0327,	18.0359,	18.0391,	18.0423,	18.0454,	18.0485,	18.0517,	18.0547,	18.0578,	18.0609,	18.0639,	18.0669,	18.0699,	18.0729,	18.0759,	18.0788,	18.0818,	18.0847,	18.0876,	18.0905,	18.0933,	18.0962,	18.099,	18.1018,	18.1046,	18.1074,	18.1101,	18.1129,	18.1156,	18.1183,	18.121,	18.1236,	18.1263,	18.1289,	18.1315,	18.1341,	18.1367,	18.1393,	18.1418,	18.1443,	18.1468,	18.1493,	18.1518,	18.1543,	18.1567,	18.1591,	18.1615,	18.1639,	18.1663,	18.1686,	18.171,	18.1733,	18.1756,	18.1779,	18.1801,	18.1824,	18.1846,	18.1868,	18.189,	18.1912,	18.1934,	18.1955,	18.1976,	18.1998,	18.2018,	18.2039,	18.206,	18.208,	18.2101,	18.2121,	18.2141,	18.216,	18.218,	18.2199,	18.2219,	18.2238,	18.2257,	18.2275,	18.2294,	18.2312,	18.2331,	18.2349,	18.2367,	18.2384,	18.2402,	18.2419,	18.2437,	18.2454,	18.2471,	18.2487,	18.2504,	18.252,	18.2537,	18.2553,	18.2569,	18.2585,	18.26,	18.2616,	18.2631,	18.2646,	18.2661,	18.2676,	18.269,	18.2705,	18.2719,	18.2733,	18.2747,	18.2761,	18.2775,	18.2788,	18.2802,	18.2815,	18.2828,	18.2841,	18.2853,	18.2866,	18.2878,	18.289,	18.2902,	18.2914,	18.2926,	18.2938,	18.2949,	18.296,	18.2971,	18.2982,	18.2993,	18.3004,	18.3014,	18.3024,	18.3035,	18.3045,	18.3054,	18.3064,	18.3074,	18.3083,	18.3092,	18.3101,	18.311,	18.3119,	18.3128,	18.3136,	18.3144,	18.3152,	18.316,	18.3168,	18.3176,	18.3183,	18.3191,	18.3198,	18.3205,	18.3212,	18.3219,	18.3225,	18.3232,	18.3238,	18.3244,	18.325,	18.3256,	18.3262,	18.3267,	18.3273,	18.3278,	18.3283,	18.3288,	18.3293,	18.3297,	18.3302,	18.3306,	18.331,	18.3314,	18.3318,	18.3322,	18.3326,	18.3329,	18.3332,	18.3335,	18.3338,	18.3341,	18.3344,	18.3347,	18.3349,	18.3351,	18.3353,	18.3355,	18.3357,	18.3359,	18.336,	18.3362,	18.3363,	18.3364,	18.3365,	18.3366,	18.3367,	18.3367,	18.3368,	18.3368,	18.3368,	18.3368,	18.3368,	18.3368,	18.3367,	18.3367,	18.3366,	18.3365,	18.3364,	18.3363,	18.3362,	18.336,	18.3358,	18.3357,	18.3355,	18.3353,	18.3351,	18.3349,	18.3346,	18.3344,	18.3341,	18.3338,	18.3335,	18.3332,	18.3329,	18.3325,	18.3322,	18.3318,	18.3314,	18.3311,	18.3307,	18.3302,	18.3298,	18.3294,	18.3289,	18.3284,	18.3279,	18.3274,	18.3269,	18.3264,	18.3259,	18.3253,	18.3247,	18.3242,	18.3236,	18.323,	18.3223,	18.3217,	18.3211,	18.3204,	18.3197,	18.3191,	18.3184,	18.3176,	18.3169,	18.3162,	18.3154,	18.3147,	18.3139,	18.3131,	18.3123,	18.3115,	18.3107,	18.3098,	18.309,	18.3081,	18.3072,	18.3063,	18.3054,	18.3045,	18.3036,	18.3027,	18.3017,	18.3007,	18.2998,	18.2988,	18.2978,	18.2968,	18.2957,	18.2947,	18.2936,	18.2926,	18.2915,	18.2904,	18.2893,	18.2882,	18.287,	18.2859,	18.2848,	18.2836,	18.2824,	18.2812,	18.28,	18.2788,	18.2776,	18.2764,	18.2751,	18.2738,	18.2726,	18.2713,	18.27,	18.2687,	18.2674,	18.266,	18.2647,	18.2633,	18.262,	18.2606,	18.2592,	18.2578,	18.2564,	18.255,	18.2535,	18.2521,	18.2506,	18.2491,	18.2477,	18.2462,	18.2447,	18.2431,	18.2416,	18.2401,	18.2385,	18.2369,	18.2354,	18.2338,	18.2322,	18.2306,	18.229,	18.2273,	18.2257,	18.224,	18.2224,	18.2207,	18.219,	18.2173,	18.2156,	18.2139,	18.2121,	18.2104,	18.2086,	18.2069,	18.2051,	18.2033,	18.2015,	18.1997,	18.1979,	18.1961,	18.1942,	18.1924,	18.1905,	18.1886,	18.1868,	18.1849,	18.183,	18.181,	18.1791,	18.1772,	18.1752,	18.1733,	18.1713,	18.1693,	18.1673,	18.1653,	18.1633,	18.1613,	18.1593,	18.1572,	18.1552,	18.1531,	18.1511,	18.149,	18.1469,	18.1448,	18.1427,	18.1406,	18.1384,	18.1363,	18.1341,	18.132,	18.1298,	18.1276,	18.1254,	18.1232,	18.121,	18.1188,	18.1166,	18.1143,	18.1121,	18.1098,	18.1075,	18.1052,	18.103,	18.1007,	18.0983,	18.096,	18.0937,	18.0914,	18.089,	18.0867,	18.0843,	18.0819,	18.0795,	18.0771,	18.0747,	18.0723,	18.0699,	18.0674,	18.065,	18.0626,	18.0601,	18.0576,	18.0551,	18.0527,	18.0502,	18.0476,	18.0451,	18.0426,	18.0401,	18.0375,	18.035,	18.0324,	18.0298,	18.0273,	18.0247,	18.0221,	18.0195,	18.0168,	18.0142,	18.0116,	18.0089,	18.0063,	18.0036,	18.001,	17.9983,	17.9956,	17.9929,	17.9902,	17.9875,	17.9848,	17.982,	17.9793,	17.9766,	17.9738,	17.971,	17.9683,	17.9655,	17.9627,	17.9599,	17.9571,	17.9543,	17.9515,	17.9486,	17.9458,	17.9429,	17.9401,	17.9372,	17.9344,	17.9315,	17.9286,	17.9257,	17.9228,	17.9199,	17.917,	17.914,	17.9111,	17.9082,	17.9052,	17.9022,	17.8993,	17.8963,	17.8933,	17.8903,	17.8873,	17.8843,	17.8813,	17.8783,	17.8752,	17.8722,	17.8692,	17.8661,	17.863,	17.86,	17.8569,	17.8538,	17.8507,	17.8476,	17.8445,	17.8414,	17.8383,	17.8352,	17.832,	17.8289,	17.8257,	17.8226,	17.8194,	17.8162,	17.8131,	17.8099,	17.8067,	17.8035,	17.8003,	17.797,	17.7938,	17.7906,	17.7874,	17.7841,	17.7809,	17.7776,	17.7743,	17.7711,	17.7678,	17.7645,	17.7612,	17.7579,	17.7546,	17.7513,	17.748,	17.7446,	17.7413,	17.738,	17.7346,	17.7313,	17.7279,	17.7245,	17.7212,	17.7178,	17.7144,	17.711,	17.7076,	17.7042,	17.7008,	17.6974,	17.6939,	17.6905,	17.6871,	17.6836,	17.6802,	17.6767,	17.6733,	17.6698,	17.6663,	17.6628,	17.6593,	17.6558,	17.6523,	17.6488,	17.6453,	17.6418,	17.6383,	17.6347,	17.6312,	17.6277,	17.6241,	17.6206,	17.617,	17.6134,	17.6099,	17.6063,	17.6027,	17.5991,	17.5955,	17.5919,	17.5883,	17.5847,	17.5811,	17.5774,	17.5738,	17.5702,	17.5665,	17.5629,	17.5592,	17.5556,	17.5519,	17.5482,	17.5445,	17.5409,	17.5372,	17.5335,	17.5298,	17.5261,	17.5224,	17.5187,	17.5149,	17.5112,	17.5075,	17.5038,	17.5,	17.4963,	17.4925,	17.4888,	17.485,	17.4812,	17.4775,	17.4737,	17.4699,	17.4661,	17.4623,	17.4585,	17.4547,	17.4509,	17.4471,	17.4433,	17.4395,	17.4356,	17.4318,	17.428,	17.4241,	17.4203,	17.4164,	17.4126,	17.4087,	17.4049,	17.401,	17.3971,	17.3932,	17.3894,	17.3855,	17.3816,	17.3777,	17.3738,	17.3699,	17.366,	17.362,	17.3581,	17.3542,	17.3503,	17.3463,	17.3424,	17.3385,	17.3345,	17.3306,	17.3266,	17.3227,	17.3187,	17.3147,	17.3108,	17.3068,	17.3028,	17.2988,	17.2948,	17.2908,	17.2868,	17.2828,	17.2788,	17.2748,	17.2708,	17.2668,	17.2628,	17.2588,	17.2547,	17.2507,	17.2467,	17.2426,	17.2386,	17.2345,	17.2305,	17.2264,	17.2224,	17.2183,	17.2142,	17.2102,	17.2061,	17.202,	17.1979,	17.1939,	17.1898,	17.1857,	17.1816,	17.1775,	17.1734,	17.1693,	17.1652,	17.161,	17.1569,	17.1528,	17.1487,	17.1446,	17.1404,	17.1363,	17.1322,	17.128,	17.1239,	17.1197,	17.1156,	17.1114,	17.1073,	17.1031,	17.099,	17.0948,	17.0906,	17.0865,	17.0823,	17.0781,	17.0739,	17.0697,	17.0656,	17.0614,	17.0572,	17.053,	17.0488,	17.0446,	17.0404,	17.0362,	17.032,	17.0277,	17.0235,	17.0193,	17.0151,	17.0109,	17.0066,	17.0024,	16.9982,	16.9939,	16.9897,	16.9855,	16.9812,	16.977,	16.9727,	16.9685,	16.9642,	16.96,	16.9557,	16.9515,	16.9472,	16.9429,	16.9387,	16.9344,	16.9301,	16.9258,	16.9216,	16.9173,	16.913,	16.9087,	16.9044,	16.9002,	16.8959,	16.8916,	16.8873,	16.883,	16.8787,	16.8744,	16.8701,	16.8658,	16.8615,	16.8571,	16.8528,	16.8485,	16.8442,	16.8399,	16.8356,	16.8312,	16.8269,	16.8226,	16.8183,	16.8139,	16.8096,	16.8053,	16.8009,	16.7966,	16.7923,	16.7879,	16.7836,	16.7792,	16.7749,	16.7705,	16.7662,	16.7618,	16.7575,	16.7531,	16.7488,	16.7444,	16.7401,	16.7357,	16.7314,	16.727,	16.7226,	16.7183,	16.7139,	16.7095,	16.7051,	16.7008,	16.6964,	16.692,	16.6877,	16.6833,	16.6789,	16.6745,	16.6701,	16.6658,	16.6614,	16.657,	16.6526,	16.6482,	16.6438,	16.6394,	16.635,	16.6306,	16.6263,	16.6219,	16.6175,	16.6131,	16.6087,	16.6043,	16.5999,	16.5955,	16.5911,	16.5867,	16.5823,	16.5779,	16.5735,	16.569,	16.5646,	16.5602,	16.5558,	16.5514,	16.547,	16.5426,	16.5382,	16.5338,	16.5294,	16.5249,	16.5205,	16.5161,	16.5117,	16.5073,	16.5029,	16.4984,	16.494,	16.4896,	16.4852,	16.4808,	16.4763,	16.4719,	16.4675,	16.4631,	16.4587,	16.4542,	16.4498,	16.4454,	16.441,	16.4365,	16.4321,	16.4277,	16.4233,	16.4188,	16.4144,	16.41,	16.4055,	16.4011,	16.3967,	16.3923,	16.3878,	16.3834,	16.379,	16.3746,	16.3701,	16.3657,	16.3613,	16.3568,	16.3524,	16.348,	16.3435,	16.3391,	16.3347,	16.3303,	16.3258,	16.3214,	16.317,	16.3125,	16.3081,	16.3037,	16.2993,	16.2948,	16.2904,	16.286,	16.2815,	16.2771,	16.2727,	16.2683,	16.2638,	16.2594,	16.255,	16.2505,	16.2461,	16.2417,	16.2373,	16.2328,	16.2284,	16.224,	16.2196,	16.2151,	16.2107,	16.2063,	16.2019,	16.1975,	16.193,	16.1886,	16.1842,	16.1798,	16.1754,	16.1709,	16.1665,	16.1621,	16.1577,	16.1533,	16.1489,	16.1444,	16.14,	16.1356,	16.1312,	16.1268,	16.1224,	16.118,	16.1135,	16.1091,	16.1047,	16.1003,	16.0959,	16.0915,	16.0871,	16.0827,	16.0783,	16.0739,	16.0695,	16.0651,	16.0607,	16.0563,	16.0519,	16.0475,	16.0431,	16.0387,	16.0343,	16.0299,	16.0255,	16.0211,	16.0167,	16.0124,	16.008,	16.0036,	15.9992,	15.9948,	15.9904,	15.986,	15.9817,	15.9773,	15.9729,	15.9685,	15.9642,	15.9598,	15.9554,	15.951,	15.9467,	15.9423,	15.9379,	15.9336,	15.9292,	15.9248,	15.9205,	15.9161,	15.9117,	15.9074,	15.903,	15.8987,	15.8943,	15.89,	15.8856,	15.8813,	15.8769,	15.8726,	15.8682,	15.8639,	15.8595,	15.8552,	15.8509,	15.8465,	15.8422,	15.8379,	15.8335,	15.8292,	15.8249,	15.8205,	15.8162,	15.8119,	15.8076,	15.8033,	15.7989,	15.7946,	15.7903,	15.786,	15.7817,	15.7774,	15.7731,	15.7688,	15.7645,	15.7602,	15.7559,	15.7516,	15.7473,	15.743,	15.7387,	15.7344,	15.7301,	15.7258,	15.7215,	15.7172,	15.713,	15.7087,	15.7044,	15.7001,	15.6959,	15.6916,	15.6873,	15.6831,	15.6788,	15.6745,	15.6703,	15.666,	15.6618,	15.6575,	15.6533,	15.649,	15.6448,	15.6405,	15.6363,	15.6321,	15.6278,	15.6236,	15.6194,	15.6151,	15.6109,	15.6067,	15.6025,	15.5982,	15.594,	15.5898,	15.5856,	15.5814,	15.5772,	15.573,	15.5688,	15.5646,	15.5604,	15.5562,	15.552,	15.5478,	15.5436,	15.5394,	15.5352,	15.531,	15.5269,	15.5227,	15.5185,	15.5144,	15.5102,	15.506,	15.5019,	15.4977,	15.4935,	15.4894,	15.4852,	15.4811,	15.4769,	15.4728,	15.4687,	15.4645,	15.4604,	15.4563,	15.4521,	15.448,	15.4439,	15.4398,	15.4356,	15.4315,	15.4274,	15.4233,	15.4192,	15.4151,	15.411,	15.4069,	15.4028,	15.3987,	15.3946,	15.3905,	15.3865,	15.3824,	15.3783,	15.3742,	15.3702,	15.3661,	15.362,	15.358,	15.3539,	15.3499,	15.3458,	15.3418,	15.3377,	15.3337,	15.3296,	15.3256,	15.3216,	15.3175,	15.3135,	15.3095,	15.3055,	15.3014,	15.2974,	15.2934,	15.2894,	15.2854,	15.2814,	15.2774,	15.2734,	15.2694,	15.2654,	15.2614,	15.2575,	15.2535,	15.2495,	15.2455,	15.2416,	15.2376,	15.2337,	15.2297,	15.2257,	15.2218,	15.2178,	15.2139,	15.21,	15.206,	15.2021,	15.1982,	15.1942,	15.1903,	15.1864,	15.1825,	15.1786,	15.1747,	15.1708,	15.1669,	15.163,	15.1591,	15.1552,	15.1513,	15.1474,	15.1435,	15.1397,	15.1358,	15.1319,	15.1281,	15.1242,	15.1203,	15.1165,	15.1126,	15.1088,	15.105,	15.1011,	15.0973,	15.0935,	15.0896,	15.0858,	15.082,	15.0782,	15.0744,	15.0706,	15.0667,	15.063,	15.0592,	15.0554,	15.0516,	15.0478,	15.044,	15.0402,	15.0365,	15.0327,	15.0289,	15.0252,	15.0214,	15.0177,	15.0139,	15.0102,	15.0064,	15.0027,	14.999,	14.9952,	14.9915,	14.9878,	14.9841,	14.9804,	14.9767,	14.973,	14.9693,	14.9656,	14.9619,	14.9582,	14.9545,	14.9508,	14.9472,	14.9435,	14.9398,	14.9362,	14.9325,	14.9288,	14.9252,	14.9216,	14.9179,	14.9143,	14.9106,	14.907,	14.9034,	14.8998,	14.8962,	14.8926,	14.8889,	14.8853,	14.8818,	14.8782,	14.8746,	14.871,	14.8674,	14.8638,	14.8603,	14.8567,	14.8531,	14.8496,	14.846,	14.8425,	14.8389,	14.8354,	14.8319,	14.8283,	14.8248,	14.8213,	14.8178,	14.8143,	14.8107,	14.8072,	14.8037,	14.8002,	14.7968,	14.7933,	14.7898,	14.7863,	14.7828,	14.7794,	14.7759,	14.7725,	14.769,	14.7656,	14.7621,	14.7587,	14.7552,	14.7518,	14.7484,	14.745,	14.7416,	14.7382,	14.7347,	14.7313,	14.728,	14.7246,	14.7212,	14.7178,	14.7144,	14.711,	14.7077,	14.7043,	14.701,	14.6976,	14.6943,	14.6909,	14.6876,	14.6842,	14.6809,	14.6776,	14.6743,	14.671,	14.6677,	14.6644,	14.6611,	14.6578,	14.6545,	14.6512,	14.6479,	14.6446,	14.6414,	14.6381,	14.6348,	14.6316,	14.6283,	14.6251,	14.6219,	14.6186,	14.6154,	14.6122,	14.609,	14.6057,	14.6025,	14.5993,	14.5961,	14.5929,	14.5898,	14.5866,	14.5834,	14.5802,	14.5771,	14.5739,	14.5707,	14.5676,	14.5644,	14.5613,	14.5582,	14.555,	14.5519,	14.5488,	14.5457,	14.5426,	14.5395,	14.5364,	14.5333,	14.5302,	14.5271,	14.524,	14.521,	14.5179,	14.5148,	14.5118,	14.5087,	14.5057,	14.5026,	14.4996,	14.4966,	14.4935,	14.4905,	14.4875,	14.4845,	14.4815,	14.4785,	14.4755,	14.4725,	14.4695,	14.4666,	14.4636,	14.4606,	14.4577,	14.4547,	14.4518,	14.4488,	14.4459,	14.443,	14.44,	14.4371,	14.4342,	14.4313,	14.4284,	14.4255,	14.4226,	14.4197,	14.4168,	14.414,	14.4111,	14.4082,	14.4054,	14.4025,	14.3997,	14.3968,	14.394,	14.3912,	14.3883,	14.3855,	14.3827,	14.3799,	14.3771,	14.3743,	14.3715,	14.3687,	14.3659,	14.3632,	14.3604,	14.3576,	14.3549,	14.3521,	14.3494,	14.3466,	14.3439,	14.3412,	14.3385,	14.3358,	14.333,	14.3303,	14.3276,	14.3249,	14.3223,	14.3196,	14.3169,	14.3142,	14.3116,	14.3089,	14.3063,	14.3036,	14.301,	14.2983,	14.2957,	14.2931,	14.2905,	14.2879,	14.2853,	14.2827,	14.2801,	14.2775,	14.2749,	14.2723,	14.2698,	14.2672,	14.2647,	14.2621,	14.2596,	14.257,	14.2545,	14.252,	14.2495,	14.2469,	14.2444,	14.2419,	14.2394,	14.237,	14.2345,	14.232,	14.2295,	14.2271,	14.2246,	14.2221,	14.2197,	14.2173,	14.2148,	14.2124,	14.21,	14.2076,	14.2052,	14.2028,	14.2004,	14.198,	14.1956,	14.1932,	14.1908,	14.1885,	14.1861,	14.1838,	14.1814,	14.1791,	14.1767,	14.1744,	14.1721,	14.1698,	14.1675,	14.1652,	14.1629,	14.1606,	14.1583,	14.156,	14.1538,	14.1515,	14.1492,	14.147,	14.1447,	14.1425,	14.1403,	14.138,	14.1358,	14.1336,	14.1314,	14.1292,	14.127,	14.1248,	14.1226,	14.1205,	14.1183,	14.1161,	14.114,	14.1118,	14.1097,	14.1076,	14.1054,	14.1033,	14.1012,	14.0991,	14.097,	14.0949,	14.0928,	14.0907,	14.0886,	14.0866,	14.0845,	14.0825,	14.0804,	14.0784,	14.0763,	14.0743,	14.0723,	14.0703,	14.0682,	14.0662,	14.0642,	14.0623,	14.0603,	14.0583,	14.0563,	14.0544,	14.0524,	14.0505,	14.0485,	14.0466,	14.0446,	14.0427,	14.0408,	14.0389,	14.037,	14.0351,	14.0332,	14.0313,	14.0294,	14.0276,	14.0257,	14.0239,	14.022,	14.0202,	14.0183,	14.0165,	14.0147,	14.0129,	14.0111,	14.0093,	14.0075,	14.0057,	14.0039,	14.0021,	14.0004,	13.9986,	13.9969,	13.9951,	13.9934,	13.9916,	13.9899,	13.9882,	13.9865,	13.9848,	13.9831,	13.9814,	13.9797,	13.978,	13.9764,	13.9747,	13.973,	13.9714,	13.9698,	13.9681,	13.9665,	13.9649,	13.9633,	13.9617,	13.9601,	13.9585,	13.9569,	13.9553,	13.9537,	13.9522,	13.9506,	13.9491,	13.9475,	13.946,	13.9445,	13.9429,	13.9414,	13.9399,	13.9384,	13.9369,	13.9354,	13.934,	13.9325,	13.931,	13.9296,	13.9281,	13.9267,	13.9253,	13.9238,	13.9224,	13.921,	13.9196,	13.9182,	13.9168,	13.9154,	13.914,	13.9127,	13.9113,	13.91,	13.9086,	13.9073,	13.9059,	13.9046,	13.9033,	13.902,	13.9007,	13.8994,	13.8981,	13.8968,	13.8955,	13.8943,	13.893,	13.8918,	13.8905,	13.8893,	13.888,	13.8868,	13.8856,	13.8844,	13.8832,	13.882,	13.8808,	13.8796,	13.8785,	13.8773,	13.8762,	13.875,	13.8739,	13.8727,	13.8716,	13.8705,	13.8694,	13.8683,	13.8672,	13.8661,	13.865,	13.8639,	13.8629,	13.8618,	13.8608,	13.8597,	13.8587,	13.8577,	13.8567,	13.8556,	13.8546,	13.8536,	13.8527,	13.8517,	13.8507,	13.8497,	13.8488,	13.8478,	13.8469,	13.8459,	13.845,	13.8441,	13.8432,	13.8423,	13.8414,	13.8405,	13.8396,	13.8387,	13.8379,	13.837,	13.8362,	13.8353,	13.8345,	13.8337,	13.8328,	13.832,	13.8312,	13.8304,	13.8296,	13.8289,	13.8281,	13.8273,	13.8266,	13.8258,	13.8251,	13.8243,	13.8236,	13.8229,	13.8222,	13.8215,	13.8208,	13.8201,	13.8194,	13.8187,	13.8181,	13.8174,	13.8168,	13.8161,	13.8155,	13.8149,	13.8143,	13.8137,	13.8131,	13.8125,	13.8119,	13.8113,	13.8108,	13.8102,	13.8096,	13.8091,	13.8086,	13.808,	13.8075,	13.807,	13.8065,	13.806,	13.8055,	13.805,	13.8046,	13.8041,	13.8037,	13.8032,	13.8028,	13.8023,	13.8019,	13.8015,	13.8011,	13.8007,	13.8003,	13.7999,	13.7996,	13.7992,	13.7988,	13.7985,	13.7982,	13.7978,	13.7975,	13.7972,	13.7969,	13.7966,	13.7963,	13.796,	13.7957,	13.7955,	13.7952,	13.795,	13.7947,	13.7945,	13.7943,	13.794,	13.7938,	13.7936,	13.7934,	13.7933,	13.7931,	13.7929,	13.7928,	13.7926,	13.7925,	13.7923,	13.7922,	13.7921,	13.792,	13.7919,	13.7918,	13.7917,	13.7916,	13.7916,	13.7915,	13.7915,	13.7914,	13.7914,	13.7914,	13.7913,	13.7913,	13.7913,	13.7914,	13.7914,	13.7914,	13.7914,	13.7915,	13.7915,	13.7916,	13.7917,	13.7917,	13.7918,	13.7919,	13.792,	13.7921,	13.7923,	13.7924,	13.7925,	13.7927,	13.7928,	13.793,	13.7932,	13.7934,	13.7935,	13.7937,	13.794,	13.7942,	13.7944,	13.7946,	13.7949,	13.7951,	13.7954,	13.7957,	13.7959,	13.7962,	13.7965,	13.7968,	13.7971,	13.7975,	13.7978,	13.7981,	13.7985,	13.7988,	13.7992,	13.7996,	13.7999,	13.8003,	13.8007,	13.8011,	13.8016,	13.802,	13.8024,	13.8029,	13.8033,	13.8038,	13.8043,	13.8047,	13.8052,	13.8057,	13.8062,	13.8068,	13.8073,	13.8078,	13.8084,	13.8089,	13.8095,	13.81,	13.8106,	13.8112,	13.8118,	13.8124,	13.813,	13.8136,	13.8143,	13.8149,	13.8156,	13.8162,	13.8169,	13.8176,	13.8183,	13.819,	13.8197,	13.8204,	13.8211,	13.8218,	13.8226,	13.8233,	13.8241,	13.8249,	13.8256,	13.8264,	13.8272,	13.828,	13.8288,	13.8297,	13.8305,	13.8313,	13.8322,	13.8331,	13.8339,	13.8348,	13.8357,	13.8366,	13.8375,	13.8384,	13.8393,	13.8403,	13.8412,	13.8422,	13.8431,	13.8441,	13.8451,	13.8461,	13.8471,	13.8481,	13.8491,	13.8502,	13.8512,	13.8522,	13.8533,	13.8544,	13.8554,	13.8565,	13.8576,	13.8587,	13.8598,	13.861,	13.8621,	13.8632,	13.8644,	13.8656,	13.8667,	13.8679,	13.8691,	13.8703,	13.8715,	13.8727,	13.8739,	13.8752,	13.8764,	13.8777,	13.879,	13.8802,	13.8815,	13.8828,	13.8841,	13.8854,	13.8868,	13.8881,	13.8894,	13.8908,	13.8921,	13.8935,	13.8949,	13.8963,	13.8977,	13.8991,	13.9005,	13.902,	13.9034,	13.9049,	13.9063,	13.9078,	13.9093,	13.9107,	13.9122,	13.9138,	13.9153,	13.9168,	13.9183,	13.9199,	13.9215,	13.923,	13.9246,	13.9262,	13.9278,	13.9294,	13.931,	13.9326,	13.9343,	13.9359,	13.9376,	13.9392,	13.9409,	13.9426,	13.9443,	13.946,	13.9477,	13.9495,	13.9512,	13.9529,	13.9547,	13.9565,	13.9582,	13.96,	13.9618,	13.9636,	13.9655,	13.9673,	13.9691,	13.971,	13.9728,	13.9747,	13.9766,	13.9785,	13.9804,	13.9823,	13.9842,	13.9861,	13.9881,	13.99,	13.992,	13.9939,	13.9959,	13.9979,	13.9999,	14.0019,	14.0039,	14.006,	14.008,	14.0101,	14.0121,	14.0142,	14.0163,	14.0184,	14.0205,	14.0226,	14.0247,	14.0269,	14.029,	14.0312,	14.0333,	14.0355,	14.0377,	14.0399,	14.0421,	14.0443,	14.0465,	14.0488,	14.051,	14.0533,	14.0556,	14.0578,	14.0601,	14.0624,	14.0648,	14.0671,	14.0694,	14.0718,	14.0741,	14.0765,	14.0789,	14.0812,	14.0836,	14.0861,	14.0885,	14.0909,	14.0933,	14.0958,	14.0983,	14.1007,	14.1032,	14.1057,	14.1082,	14.1107,	14.1133,	14.1158,	14.1183,	14.1209,	14.1235,	14.126,	14.1286,	14.1312,	14.1339,	14.1365,	14.1391,	14.1418,	14.1444,	14.1471,	14.1498,	14.1524,	14.1551,	14.1579,	14.1606,	14.1633,	14.1661,	14.1688,	14.1716,	14.1744,	14.1771,	14.1799,	14.1828,	14.1856,	14.1884,	14.1912,	14.1941,	14.197,	14.1998,	14.2027,	14.2056,	14.2085,	14.2115,	14.2144,	14.2173,	14.2203,	14.2233,	14.2262,	14.2292,	14.2322,	14.2352,	14.2382,	14.2413,	14.2443,	14.2474,	14.2504,	14.2535,	14.2566,	14.2597,	14.2628,	14.2659,	14.2691,	14.2722,	14.2754,	14.2786,	14.2817,	14.2849,	14.2881,	14.2913,	14.2946,	14.2978,	14.3011,	14.3043,	14.3076,	14.3109,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	7.99214,	


Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5   time = 440599 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6  
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6

// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6



SDFS:
0.98198,	1.003,	1.02339,	1.04316,	1.06231,	1.08085,	1.09877,	1.1161,	1.13282,	1.14895,	1.16448,	1.17944,	1.19382,	1.20763,	1.22088,	1.23357,	1.24571,	1.25731,	1.26838,	1.27893,	1.28896,	1.29848,	1.3075,	1.31603,	1.32407,	1.33164,	1.33875,	1.3454,	1.3516,	1.35736,	1.36269,	1.3676,	1.37209,	1.37619,	1.37988,	1.38319,	1.38613,	1.38869,	1.3909,	1.39275,	1.39427,	1.39544,	1.3963,	1.39684,	1.39707,	1.397,	1.39663,	1.39599,	1.39507,	1.39388,	1.39243,	1.39074,	1.38879,	1.38662,	1.38421,	1.38158,	1.37874,	1.3757,	1.37245,	1.36901,	1.36539,	1.36159,	1.35762,	1.35348,	1.34918,	1.34473,	1.34014,	1.3354,	1.33053,	1.32554,	1.32042,	1.31518,	1.30984,	1.30439,	1.29884,	1.29319,	1.28746,	1.28164,	1.27574,	1.26977,	1.26372,	1.25761,	1.25145,	1.24522,	1.23894,	1.23262,	1.22625,	1.21984,	1.2134,	1.20692,	1.20041,	1.19389,	1.18733,	1.18077,	1.17418,	1.16759,	1.16099,	1.15438,	1.14778,	1.14117,	1.13457,	1.12797,	1.12139,	1.11481,	1.10825,	1.10171,	1.09519,	1.08869,	1.08221,	1.07576,	1.06934,	1.06295,	1.05659,	1.05026,	1.04397,	1.03772,	1.03151,	1.02534,	1.01921,	1.01312,	1.00708,	1.00109,	0.99515,	0.989257,	0.983415,	0.977625,	0.971889,	0.966207,	0.960581,	0.955011,	0.949499,	0.944046,	0.938652,	0.933319,	0.928047,	0.922836,	0.917689,	0.912605,	0.907584,	0.902629,	0.897738,	0.892914,	0.888155,	0.883464,	0.878839,	0.874283,	0.869794,	0.865374,	0.861023,	0.856741,	0.852528,	0.848385,	0.844312,	0.840308,	0.836375,	0.832513,	0.828721,	0.825,	0.821349,	0.81777,	0.814261,	0.810824,	0.807457,	0.804161,	0.800937,	0.797783,	0.7947,	0.791688,	0.788747,	0.785876,	0.783076,	0.780346,	0.777687,	0.775097,	0.772578,	0.770128,	0.767748,	0.765437,	0.763195,	0.761022,	0.758918,	0.756882,	0.754915,	0.753015,	0.751183,	0.749418,	0.747721,	0.746089,	0.744525,	0.743026,	0.741594,	0.740226,	0.738924,	0.737686,	0.736513,	0.735404,	0.734358,	0.733376,	0.732457,	0.7316,	0.730805,	0.730072,	0.7294,	0.728789,	0.728238,	0.727748,	0.727317,	0.726945,	0.726633,	0.726378,	0.726181,	0.726042,	0.72596,	0.725935,	0.725965,	0.726051,	0.726193,	0.726389,	0.72664,	0.726944,	0.727301,	0.727712,	0.728175,	0.72869,	0.729256,	0.729873,	0.730541,	0.731259,	0.732026,	0.732842,	0.733707,	0.73462,	0.73558,	0.736588,	0.737642,	0.738742,	0.739887,	0.741078,	0.742313,	0.743593,	0.744916,	0.746282,	0.74769,	0.749141,	0.750633,	0.752166,	0.75374,	0.755354,	0.757007,	0.758699,	0.76043,	0.762199,	0.764005,	0.765849,	0.767728,	0.769644,	0.771595,	0.773581,	0.775602,	0.777656,	0.779744,	0.781865,	0.784018,	0.786203,	0.788419,	0.790667,	0.792944,	0.795251,	0.797588,	0.799954,	0.802347,	0.804769,	0.807218,	0.809694,	0.812196,	0.814723,	0.817276,	0.819854,	0.822456,	0.825082,	0.827731,	0.830403,	0.833097,	0.835813,	0.83855,	0.841308,	0.844086,	0.846884,	0.849701,	0.852537,	0.855391,	0.858263,	0.861152,	0.864058,	0.866981,	0.869919,	0.872873,	0.875842,	0.878825,	0.881822,	0.884832,	0.887856,	0.890892,	0.89394,	0.896999,	0.90007,	0.903151,	0.906243,	0.909344,	0.912454,	0.915574,	0.918701,	0.921837,	0.924979,	0.928129,	0.931285,	0.934448,	0.937616,	0.940789,	0.943967,	0.947149,	0.950336,	0.953525,	0.956718,	0.959913,	0.96311,	0.96631,	0.96951,	0.972711,	0.975913,	0.979115,	0.982317,	0.985518,	0.988717,	0.991915,	0.995112,	0.998306,	1.0015,	1.00468,	1.00787,	1.01105,	1.01423,	1.0174,	1.02056,	1.02373,	1.02688,	1.03003,	1.03317,	1.03631,	1.03944,	1.04256,	1.04567,	1.04878,	1.05188,	1.05496,	1.05804,	1.06111,	1.06417,	1.06722,	1.07026,	1.07328,	1.0763,	1.0793,	1.0823,	1.08528,	1.08825,	1.0912,	1.09414,	1.09707,	1.09999,	1.10289,	1.10578,	1.10865,	1.11151,	1.11435,	1.11718,	1.11999,	1.12279,	1.12557,	1.12833,	1.13108,	1.13381,	1.13653,	1.13922,	1.1419,	1.14456,	1.14721,	1.14983,	1.15244,	1.15503,	1.1576,	1.16015,	1.16268,	1.1652,	1.16769,	1.17016,	1.17261,	1.17505,	1.17746,	1.17985,	1.18222,	1.18458,	1.18691,	1.18921,	1.1915,	1.19377,	1.19601,	1.19824,	1.20044,	1.20262,	1.20477,	1.20691,	1.20902,	1.21111,	1.21318,	1.21522,	1.21724,	1.21924,	1.22122,	1.22317,	1.2251,	1.227,	1.22888,	1.23074,	1.23258,	1.23439,	1.23618,	1.23794,	1.23968,	1.2414,	1.24309,	1.24476,	1.2464,	1.24802,	1.24962,	1.25119,	1.25273,	1.25426,	1.25575,	1.25723,	1.25868,	1.2601,	1.2615,	1.26288,	1.26423,	1.26556,	1.26686,	1.26814,	1.26939,	1.27062,	1.27182,	1.273,	1.27416,	1.27529,	1.27639,	1.27748,	1.27853,	1.27957,	1.28058,	1.28156,	1.28252,	1.28346,	1.28437,	1.28526,	1.28612,	1.28696,	1.28777,	1.28857,	1.28933,	1.29008,	1.2908,	1.29149,	1.29217,	1.29282,	1.29344,	1.29404,	1.29462,	1.29518,	1.29571,	1.29622,	1.2967,	1.29717,	1.29761,	1.29803,	1.29842,	1.29879,	1.29914,	1.29947,	1.29977,	1.30006,	1.30032,	1.30056,	1.30078,	1.30097,	1.30114,	1.3013,	1.30143,	1.30154,	1.30163,	1.30169,	1.30174,	1.30177,	1.30177,	1.30176,	1.30172,	1.30167,	1.30159,	1.3015,	1.30138,	1.30125,	1.30109,	1.30092,	1.30072,	1.30051,	1.30028,	1.30003,	1.29976,	1.29947,	1.29917,	1.29884,	1.2985,	1.29814,	1.29777,	1.29737,	1.29696,	1.29653,	1.29608,	1.29562,	1.29514,	1.29464,	1.29412,	1.29359,	1.29305,	1.29249,	1.29191,	1.29131,	1.2907,	1.29008,	1.28944,	1.28878,	1.28811,	1.28743,	1.28673,	1.28602,	1.28529,	1.28455,	1.28379,	1.28303,	1.28224,	1.28145,	1.28064,	1.27982,	1.27898,	1.27814,	1.27728,	1.27641,	1.27552,	1.27463,	1.27372,	1.2728,	1.27187,	1.27093,	1.26998,	1.26901,	1.26804,	1.26705,	1.26606,	1.26505,	1.26404,	1.26302,	1.26198,	1.26094,	1.25988,	1.25882,	1.25775,	1.25667,	1.25558,	1.25449,	1.25338,	1.25227,	1.25115,	1.25002,	1.24888,	1.24774,	1.24659,	1.24543,	1.24426,	1.24309,	1.24191,	1.24073,	1.23954,	1.23834,	1.23714,	1.23593,	1.23472,	1.2335,	1.23227,	1.23104,	1.22981,	1.22857,	1.22733,	1.22608,	1.22483,	1.22357,	1.22231,	1.22104,	1.21978,	1.21851,	1.21723,	1.21596,	1.21467,	1.21339,	1.21211,	1.21082,	1.20953,	1.20823,	1.20694,	1.20564,	1.20435,	1.20305,	1.20174,	1.20044,	1.19914,	1.19783,	1.19653,	1.19522,	1.19391,	1.19261,	1.1913,	1.18999,	1.18868,	1.18738,	1.18607,	1.18476,	1.18346,	1.18215,	1.18085,	1.17954,	1.17824,	1.17694,	1.17564,	1.17434,	1.17304,	1.17175,	1.17045,	1.16916,	1.16787,	1.16659,	1.1653,	1.16402,	1.16274,	1.16147,	1.16019,	1.15892,	1.15765,	1.15639,	1.15513,	1.15387,	1.15262,	1.15136,	1.15012,	1.14888,	1.14764,	1.1464,	1.14517,	1.14395,	1.14272,	1.14151,	1.14029,	1.13909,	1.13788,	1.13669,	1.13549,	1.1343,	1.13312,	1.13194,	1.13077,	1.12961,	1.12845,	1.12729,	1.12614,	1.125,	1.12386,	1.12273,	1.12161,	1.12049,	1.11937,	1.11827,	1.11717,	1.11608,	1.11499,	1.11391,	1.11284,	1.11177,	1.11071,	1.10966,	1.10862,	1.10758,	1.10655,	1.10553,	1.10451,	1.1035,	1.1025,	1.10151,	1.10052,	1.09955,	1.09858,	1.09762,	1.09666,	1.09572,	1.09478,	1.09385,	1.09293,	1.09201,	1.09111,	1.09021,	1.08933,	1.08845,	1.08758,	1.08671,	1.08586,	1.08501,	1.08418,	1.08335,	1.08253,	1.08172,	1.08092,	1.08013,	1.07935,	1.07857,	1.07781,	1.07705,	1.07631,	1.07557,	1.07484,	1.07412,	1.07341,	1.07271,	1.07202,	1.07134,	1.07067,	1.07001,	1.06936,	1.06871,	1.06808,	1.06746,	1.06684,	1.06624,	1.06564,	1.06506,	1.06448,	1.06392,	1.06336,	1.06281,	1.06228,	1.06175,	1.06124,	1.06073,	1.06023,	1.05975,	1.05927,	1.0588,	1.05835,	1.0579,	1.05746,	1.05704,	1.05662,	1.05622,	1.05582,	1.05543,	1.05506,	1.05469,	1.05433,	1.05399,	1.05365,	1.05333,	1.05301,	1.05271,	1.05241,	1.05213,	1.05185,	1.05159,	1.05133,	1.05109,	1.05085,	1.05063,	1.05041,	1.05021,	1.05001,	1.04983,	1.04966,	1.04949,	1.04934,	1.04919,	1.04906,	1.04894,	1.04882,	1.04872,	1.04863,	1.04854,	1.04847,	1.04841,	1.04835,	1.04831,	1.04827,	1.04825,	1.04824,	1.04823,	1.04824,	1.04825,	1.04828,	1.04832,	1.04836,	1.04842,	1.04848,	1.04856,	1.04864,	1.04873,	1.04884,	1.04895,	1.04907,	1.04921,	1.04935,	1.0495,	1.04966,	1.04983,	1.05001,	1.0502,	1.0504,	1.05061,	1.05082,	1.05105,	1.05129,	1.05153,	1.05179,	1.05205,	1.05232,	1.0526,	1.05289,	1.05319,	1.0535,	1.05382,	1.05415,	1.05448,	1.05483,	1.05518,	1.05554,	1.05592,	1.05629,	1.05668,	1.05708,	1.05749,	1.0579,	1.05832,	1.05875,	1.05919,	1.05964,	1.0601,	1.06056,	1.06103,	1.06151,	1.062,	1.0625,	1.063,	1.06352,	1.06404,	1.06457,	1.0651,	1.06565,	1.0662,	1.06676,	1.06733,	1.0679,	1.06849,	1.06908,	1.06967,	1.07028,	1.07089,	1.07151,	1.07214,	1.07277,	1.07342,	1.07406,	1.07472,	1.07538,	1.07605,	1.07673,	1.07741,	1.0781,	1.0788,	1.0795,	1.08021,	1.08093,	1.08165,	1.08238,	1.08312,	1.08386,	1.08461,	1.08536,	1.08612,	1.08689,	1.08766,	1.08844,	1.08923,	1.09002,	1.09082,	1.09162,	1.09243,	1.09324,	1.09406,	1.09488,	1.09571,	1.09655,	1.09739,	1.09823,	1.09909,	1.09994,	1.1008,	1.10167,	1.10254,	1.10342,	1.1043,	1.10518,	1.10607,	1.10697,	1.10787,	1.10877,	1.10968,	1.11059,	1.11151,	1.11243,	1.11335,	1.11428,	1.11522,	1.11615,	1.11709,	1.11804,	1.11899,	1.11994,	1.12089,	1.12185,	1.12282,	1.12378,	1.12475,	1.12572,	1.1267,	1.12768,	1.12866,	1.12965,	1.13064,	1.13163,	1.13262,	1.13362,	1.13462,	1.13562,	1.13662,	1.13763,	1.13864,	1.13965,	1.14066,	1.14168,	1.1427,	1.14372,	1.14474,	1.14576,	1.14679,	1.14781,	1.14884,	1.14987,	1.1509,	1.15194,	1.15297,	1.15401,	1.15505,	1.15609,	1.15713,	1.15817,	1.15921,	1.16025,	1.16129,	1.16234,	1.16338,	1.16443,	1.16548,	1.16652,	1.16757,	1.16862,	1.16967,	1.17071,	1.17176,	1.17281,	1.17386,	1.17491,	1.17596,	1.177,	1.17805,	1.1791,	1.18014,	1.18119,	1.18224,	1.18328,	1.18433,	1.18537,	1.18641,	1.18746,	1.1885,	1.18954,	1.19058,	1.19161,	1.19265,	1.19368,	1.19472,	1.19575,	1.19678,	1.19781,	1.19884,	1.19986,	1.20089,	1.20191,	1.20293,	1.20395,	1.20497,	1.20598,	1.20699,	1.208,	1.20901,	1.21002,	1.21102,	1.21202,	1.21302,	1.21401,	1.215,	1.21599,	1.21698,	1.21796,	1.21894,	1.21992,	1.2209,	1.22187,	1.22284,	1.2238,	1.22476,	1.22572,	1.22668,	1.22763,	1.22858,	1.22952,	1.23046,	1.2314,	1.23233,	1.23326,	1.23418,	1.2351,	1.23602,	1.23693,	1.23784,	1.23875,	1.23965,	1.24054,	1.24143,	1.24232,	1.2432,	1.24408,	1.24495,	1.24582,	1.24668,	1.24754,	1.24839,	1.24924,	1.25009,	1.25092,	1.25176,	1.25259,	1.25341,	1.25423,	1.25504,	1.25585,	1.25665,	1.25744,	1.25823,	1.25902,	1.2598,	1.26057,	1.26134,	1.2621,	1.26286,	1.26361,	1.26435,	1.26509,	1.26582,	1.26655,	1.26727,	1.26798,	1.26869,	1.26939,	1.27009,	1.27077,	1.27146,	1.27213,	1.2728,	1.27346,	1.27412,	1.27477,	1.27541,	1.27605,	1.27668,	1.2773,	1.27791,	1.27852,	1.27912,	1.27972,	1.2803,	1.28088,	1.28146,	1.28202,	1.28258,	1.28313,	1.28368,	1.28421,	1.28474,	1.28527,	1.28578,	1.28629,	1.28679,	1.28728,	1.28776,	1.28824,	1.28871,	1.28917,	1.28963,	1.29007,	1.29051,	1.29094,	1.29136,	1.29178,	1.29218,	1.29258,	1.29297,	1.29336,	1.29373,	1.2941,	1.29446,	1.29481,	1.29515,	1.29549,	1.29581,	1.29613,	1.29644,	1.29674,	1.29703,	1.29732,	1.29759,	1.29786,	1.29812,	1.29837,	1.29862,	1.29885,	1.29908,	1.29929,	1.2995,	1.2997,	1.29989,	1.30008,	1.30025,	1.30042,	1.30057,	1.30072,	1.30086,	1.30099,	1.30112,	1.30123,	1.30133,	1.30143,	1.30152,	1.3016,	1.30167,	1.30173,	1.30178,	1.30182,	1.30186,	1.30188,	1.3019,	1.30191,	1.30191,	1.30189,	1.30188,	1.30185,	1.30181,	1.30177,	1.30171,	1.30165,	1.30157,	1.30149,	1.3014,	1.3013,	1.30119,	1.30108,	1.30095,	1.30081,	1.30067,	1.30052,	1.30035,	1.30018,	1.3,	1.29981,	1.29961,	1.2994,	1.29919,	1.29896,	1.29873,	1.29848,	1.29823,	1.29797,	1.2977,	1.29742,	1.29713,	1.29683,	1.29653,	1.29621,	1.29589,	1.29555,	1.29521,	1.29486,	1.2945,	1.29413,	1.29375,	1.29336,	1.29297,	1.29256,	1.29215,	1.29172,	1.29129,	1.29085,	1.2904,	1.28994,	1.28948,	1.289,	1.28852,	1.28802,	1.28752,	1.28701,	1.28649,	1.28596,	1.28542,	1.28488,	1.28432,	1.28376,	1.28319,	1.28261,	1.28202,	1.28142,	1.28081,	1.2802,	1.27958,	1.27894,	1.2783,	1.27765,	1.277,	1.27633,	1.27566,	1.27497,	1.27428,	1.27358,	1.27288,	1.27216,	1.27143,	1.2707,	1.26996,	1.26921,	1.26845,	1.26769,	1.26692,	1.26613,	1.26534,	1.26455,	1.26374,	1.26293,	1.2621,	1.26127,	1.26044,	1.25959,	1.25874,	1.25788,	1.25701,	1.25613,	1.25525,	1.25435,	1.25345,	1.25255,	1.25163,	1.25071,	1.24978,	1.24884,	1.24789,	1.24694,	1.24598,	1.24501,	1.24404,	1.24305,	1.24206,	1.24107,	1.24006,	1.23905,	1.23803,	1.23701,	1.23597,	1.23493,	1.23389,	1.23283,	1.23177,	1.2307,	1.22963,	1.22855,	1.22746,	1.22636,	1.22526,	1.22415,	1.22304,	1.22192,	1.22079,	1.21965,	1.21851,	1.21736,	1.21621,	1.21505,	1.21388,	1.21271,	1.21153,	1.21034,	1.20915,	1.20796,	1.20675,	1.20554,	1.20433,	1.2031,	1.20188,	1.20064,	1.1994,	1.19816,	1.19691,	1.19565,	1.19439,	1.19312,	1.19185,	1.19057,	1.18928,	1.18799,	1.1867,	1.1854,	1.18409,	1.18278,	1.18146,	1.18014,	1.17881,	1.17748,	1.17614,	1.1748,	1.17346,	1.1721,	1.17075,	1.16939,	1.16802,	1.16665,	1.16527,	1.16389,	1.16251,	1.16112,	1.15973,	1.15833,	1.15693,	1.15552,	1.15411,	1.15269,	1.15127,	1.14985,	1.14842,	1.14699,	1.14556,	1.14412,	1.14267,	1.14122,	1.13977,	1.13832,	1.13686,	1.1354,	1.13393,	1.13246,	1.13099,	1.12951,	1.12803,	1.12655,	1.12506,	1.12357,	1.12208,	1.12058,	1.11908,	1.11758,	1.11608,	1.11457,	1.11306,	1.11154,	1.11002,	1.1085,	1.10698,	1.10546,	1.10393,	1.1024,	1.10087,	1.09933,	1.09779,	1.09625,	1.09471,	1.09316,	1.09162,	1.09007,	1.08852,	1.08696,	1.08541,	1.08385,	1.08229,	1.08073,	1.07917,	1.0776,	1.07603,	1.07447,	1.0729,	1.07132,	1.06975,	1.06818,	1.0666,	1.06502,	1.06344,	1.06186,	1.06028,	1.0587,	1.05711,	1.05553,	1.05394,	1.05236,	1.05077,	1.04918,	1.04759,	1.046,	1.04441,	1.04282,	1.04122,	1.03963,	1.03804,	1.03644,	1.03485,	1.03325,	1.03166,	1.03006,	1.02846,	1.02687,	1.02527,	1.02367,	1.02208,	1.02048,	1.01888,	1.01729,	1.01569,	1.01409,	1.0125,	1.0109,	1.00931,	1.00771,	1.00611,	1.00452,	1.00293,	1.00133,	0.999739,	0.998146,	0.996554,	0.994963,	0.993372,	0.991783,	0.990194,	0.988606,	0.987019,	0.985433,	0.983848,	0.982264,	0.980682,	0.9791,	0.97752,	0.975941,	0.974363,	0.972786,	0.971211,	0.969637,	0.968065,	0.966494,	0.964925,	0.963358,	0.961792,	0.960228,	0.958665,	0.957105,	0.955546,	0.953989,	0.952434,	0.95088,	0.949329,	0.94778,	0.946233,	0.944688,	0.943145,	0.941605,	0.940067,	0.93853,	0.936997,	0.935465,	0.933937,	0.93241,	0.930886,	0.929365,	0.927846,	0.926329,	0.924816,	0.923305,	0.921797,	0.920291,	0.918789,	0.917289,	0.915792,	0.914298,	0.912807,	0.911319,	0.909834,	0.908352,	0.906874,	0.905398,	0.903926,	0.902457,	0.900991,	0.899528,	0.898069,	0.896613,	0.895161,	0.893712,	0.892267,	0.890825,	0.889386,	0.887952,	0.886521,	0.885093,	0.883669,	0.88225,	0.880833,	0.879421,	0.878013,	0.876608,	0.875207,	0.873811,	0.872418,	0.871029,	0.869645,	0.868264,	0.866888,	0.865516,	0.864148,	0.862784,	0.861424,	0.860069,	0.858718,	0.857372,	0.856029,	0.854692,	0.853358,	0.85203,	0.850705,	0.849386,	0.84807,	0.84676,	0.845454,	0.844153,	0.842856,	0.841565,	0.840278,	0.838995,	0.837718,	0.836446,	0.835178,	0.833915,	0.832657,	0.831405,	0.830157,	0.828914,	0.827676,	0.826444,	0.825216,	0.823994,	0.822777,	0.821565,	0.820358,	0.819156,	0.81796,	0.816769,	0.815584,	0.814403,	0.813228,	0.812059,	0.810895,	0.809736,	0.808583,	0.807436,	0.806294,	0.805157,	0.804026,	0.802901,	0.801782,	0.800668,	0.799559,	0.798457,	0.79736,	0.796269,	0.795184,	0.794104,	0.793031,	0.791963,	0.790901,	0.789845,	0.788795,	0.787751,	0.786713,	0.78568,	0.784654,	0.783634,	0.78262,	0.781612,	0.78061,	0.779614,	0.778625,	0.777641,	0.776664,	0.775692,	0.774727,	0.773769,	0.772816,	0.77187,	0.77093,	0.769997,	0.769069,	0.768148,	0.767234,	0.766326,	0.765424,	0.764529,	0.76364,	0.762757,	0.761881,	0.761012,	0.760149,	0.759293,	0.758443,	0.757599,	0.756763,	0.755933,	0.755109,	0.754292,	0.753482,	0.752678,	0.751882,	0.751091,	0.750308,	0.749531,	0.748761,	0.747998,	0.747241,	0.746491,	0.745748,	0.745012,	0.744283,	0.74356,	0.742845,	0.742136,	0.741434,	0.740739,	0.740051,	0.73937,	0.738696,	0.738028,	0.737368,	0.736714,	0.736068,	0.735429,	0.734796,	0.734171,	0.733552,	0.732941,	0.732337,	0.731739,	0.731149,	0.730566,	0.72999,	0.729421,	0.728859,	0.728305,	0.727757,	0.727217,	0.726683,	0.726157,	0.725638,	0.725126,	0.724622,	0.724124,	0.723634,	0.723151,	0.722675,	0.722207,	0.721746,	0.721292,	0.720845,	0.720405,	0.719973,	0.719548,	0.71913,	0.71872,	0.718317,	0.717921,	0.717532,	0.717151,	0.716777,	0.716411,	0.716051,	0.715699,	0.715355,	0.715018,	0.714688,	0.714365,	0.71405,	0.713743,	0.713442,	0.713149,	0.712864,	0.712585,	0.712315,	0.712051,	0.711795,	0.711546,	0.711305,	0.711071,	0.710845,	0.710626,	0.710415,	0.71021,	0.710014,	0.709825,	0.709643,	0.709468,	0.709301,	0.709142,	0.70899,	0.708845,	0.708708,	0.708578,	0.708456,	0.708341,	0.708234,	0.708134,	0.708041,	0.707956,	0.707879,	0.707809,	0.707746,	0.707691,	0.707643,	0.707603,	0.70757,	0.707544,	0.707527,	0.707516,	0.707513,	0.707517,	0.707529,	0.707549,	0.707575,	0.70761,	0.707651,	0.7077,	0.707757,	0.707821,	0.707892,	0.707971,	0.708058,	0.708151,	0.708253,	0.708361,	0.708477,	0.708601,	0.708731,	0.70887,	0.709015,	0.709168,	0.709329,	0.709497,	0.709672,	0.709855,	0.710045,	0.710242,	0.710447,	0.710659,	0.710879,	0.711106,	0.71134,	0.711582,	0.711831,	0.712087,	0.712351,	0.712622,	0.7129,	0.713186,	0.713479,	0.713779,	0.714086,	0.714401,	0.714724,	0.715053,	0.71539,	0.715734,	0.716085,	0.716443,	0.716809,	0.717182,	0.717562,	0.71795,	0.718345,	0.718746,	0.719155,	0.719572,	0.719995,	0.720426,	0.720864,	0.721309,	0.721761,	0.72222,	0.722686,	0.72316,	0.723641,	0.724128,	0.724623,	0.725125,	0.725634,	0.72615,	0.726673,	0.727203,	0.727741,	0.728285,	0.728836,	0.729394,	0.729959,	0.730532,	0.731111,	0.731697,	0.73229,	0.73289,	0.733497,	0.734111,	0.734732,	0.735359,	0.735994,	0.736635,	0.737284,	0.737939,	0.738601,	0.739269,	0.739945,	0.740627,	0.741316,	0.742012,	0.742715,	0.743424,	0.74414,	0.744863,	0.745592,	0.746329,	0.747071,	0.747821,	0.748577,	0.74934,	0.750109,	0.750885,	0.751668,	0.752457,	0.753252,	0.754054,	0.754863,	0.755678,	0.7565,	0.757328,	0.758163,	0.759004,	0.759851,	0.760705,	0.761565,	0.762432,	0.763305,	0.764184,	0.76507,	0.765962,	0.76686,	0.767765,	0.768675,	0.769593,	0.770516,	0.771445,	0.772381,	0.773323,	0.774271,	0.775225,	0.776185,	0.777151,	0.778123,	0.779102,	0.780086,	0.781077,	0.782073,	0.783076,	0.784084,	0.785098,	0.786119,	0.787145,	0.788177,	0.789215,	0.790258,	0.791308,	0.792363,	0.793424,	0.794491,	0.795564,	0.796642,	0.797726,	0.798816,	0.799911,	0.801012,	0.802119,	0.803231,	0.804349,	0.805472,	0.806601,	0.807735,	0.808875,	0.810021,	0.811171,	0.812327,	0.813489,	0.814656,	0.815828,	0.817005,	0.818188,	0.819376,	0.82057,	0.821768,	0.822972,	0.824181,	0.825395,	0.826614,	0.827838,	0.829068,	0.830302,	0.831542,	0.832786,	0.834036,	0.83529,	0.836549,	0.837814,	0.839083,	0.840357,	0.841635,	0.842919,	0.844207,	0.845501,	0.846798,	0.848101,	0.849408,	0.85072,	0.852037,	0.853358,	0.854683,	0.856013,	0.857348,	0.858687,	0.860031,	0.861379,	0.862731,	0.864088,	0.865449,	0.866815,	0.868184,	0.869558,	0.870937,	0.872319,	0.873706,	0.875097,	0.876491,	0.87789,	0.879293,	0.8807,	0.882111,	0.883526,	0.884945,	0.886368,	0.887795,	0.889226,	0.89066,	0.892098,	0.89354,	0.894986,	0.896435,	0.897888,	0.899345,	0.900805,	0.902269,	0.903737,	0.905208,	0.906682,	0.90816,	0.909641,	0.911126,	0.912614,	0.914105,	0.9156,	0.917098,	0.918599,	0.920103,	0.921611,	0.923121,	0.924635,	0.926152,	0.927672,	0.929195,	0.93072,	0.932249,	0.933781,	0.935315,	0.936853,	0.938393,	0.939935,	0.941481,	0.943029,	0.94458,	0.946134,	0.94769,	0.949249,	0.95081,	0.952374,	0.95394,	0.955509,	0.95708,	0.958653,	0.960229,	0.961807,	0.963387,	0.964969,	0.966554,	0.968141,	0.969729,	0.97132,	0.972913,	0.974508,	0.976105,	0.977704,	0.979304,	0.980907,	0.982511,	0.984117,	0.985725,	0.987335,	0.988946,	0.990559,	0.992173,	0.993789,	0.995407,	0.997026,	0.998646,	1.00027,	1.00189,	1.00352,	1.00514,	1.00677,	1.0084,	1.01003,	1.01166,	1.01329,	1.01492,	1.01656,	1.01819,	1.01983,	1.02146,	1.0231,	1.02474,	1.02638,	1.02802,	1.02966,	1.0313,	1.03294,	1.03458,	1.03623,	1.03787,	1.03951,	1.04116,	1.0428,	1.04445,	1.04609,	1.04774,	1.04939,	1.05103,	1.05268,	1.05433,	1.05597,	1.05762,	1.05927,	1.06091,	1.06256,	1.06421,	1.06585,	1.0675,	1.06914,	1.07079,	1.07243,	1.07408,	1.07572,	1.07737,	1.07901,	1.08065,	1.0823,	1.08394,	1.08558,	1.08722,	1.08886,	1.0905,	1.09214,	1.09377,	1.09541,	1.09705,	1.09868,	1.10031,	1.10194,	1.10358,	1.10521,	1.10683,	1.10846,	1.11009,	1.11171,	1.11334,	1.11496,	1.11658,	1.1182,	1.11982,	1.12143,	1.12305,	1.12466,	1.12627,	1.12788,	1.12949,	1.13109,	1.1327,	1.1343,	1.1359,	1.1375,	1.13909,	1.14069,	1.14228,	1.14387,	1.14546,	1.14704,	1.14862,	1.1502,	1.15178,	1.15336,	1.15493,	1.1565,	1.15807,	1.15963,	1.1612,	1.16276,	1.16431,	1.16587,	1.16742,	1.16897,	1.17051,	1.17206,	1.1736,	1.17513,	1.17667,	1.1782,	1.17973,	1.18125,	1.18277,	1.18429,	1.18581,	1.18732,	1.18882,	1.19033,	1.19183,	1.19333,	1.19482,	1.19631,	1.1978,	1.19928,	1.20076,	1.20223,	1.2037,	1.20517,	1.20663,	1.20809,	1.20955,	1.211,	1.21245,	1.21389,	1.21533,	1.21676,	1.21819,	1.21962,	1.22104,	1.22246,	1.22387,	1.22528,	1.22668,	1.22808,	1.22948,	1.23087,	1.23225,	1.23363,	1.23501,	1.23638,	1.23774,	1.2391,	1.24046,	1.24181,	1.24316,	1.2445,	1.24583,	1.24716,	1.24849,	1.24981,	1.25112,	1.25243,	1.25374,	1.25503,	1.25633,	1.25762,	1.2589,	1.26017,	1.26144,	1.26271,	1.26397,	1.26522,	1.26647,	1.26771,	1.26895,	1.27018,	1.2714,	1.27262,	1.27383,	1.27504,	1.27624,	1.27743,	1.27862,	1.2798,	1.28098,	1.28215,	1.28331,	1.28447,	1.28561,	1.28676,	1.28789,	1.28902,	1.29015,	1.29126,	1.29237,	1.29348,	1.29457,	1.29566,	1.29675,	1.29782,	1.29889,	1.29995,	1.30101,	1.30206,	1.3031,	1.30413,	1.30516,	1.30618,	1.30719,	1.3082,	1.30919,	1.31018,	1.31117,	1.31214,	1.31311,	1.31407,	1.31503,	1.31597,	1.31691,	1.31784,	1.31876,	1.31968,	1.32058,	1.32148,	1.32237,	1.32326,	1.32413,	1.325,	1.32586,	1.32671,	1.32756,	1.32839,	1.32922,	1.33004,	1.33085,	1.33165,	1.33245,	1.33324,	1.33401,	1.33478,	1.33555,	1.3363,	1.33704,	1.33778,	1.33851,	1.33923,	1.33994,	1.34064,	1.34133,	1.34201,	1.34269,	1.34336,	1.34402,	1.34466,	1.3453,	1.34594,	1.34656,	1.34717,	1.34778,	1.34837,	1.34896,	1.34954,	1.3501,	1.35066,	1.35121,	1.35175,	1.35229,	1.35281,	1.35332,	1.35382,	1.35432,	1.3548,	1.35528,	1.35574,	1.3562,	1.35665,	1.35709,	1.35751,	1.35793,	1.35834,	1.35874,	1.35913,	1.35951,	1.35988,	1.36024,	1.36059,	1.36093,	1.36126,	1.36158,	1.36189,	1.36219,	1.36248,	1.36276,	1.36303,	1.36329,	1.36355,	1.36379,	1.36402,	1.36424,	1.36445,	1.36465,	1.36484,	1.36502,	1.36519,	1.36535,	1.36549,	1.36563,	1.36576,	1.36588,	1.36599,	1.36608,	1.36617,	1.36625,	1.36631,	1.36637,	1.36641,	1.36644,	1.36647,	1.36648,	1.36648,	1.36647,	1.36645,	1.36642,	1.36638,	1.36633,	1.36627,	1.3662,	1.36611,	1.36602,	1.36591,	1.3658,	1.36567,	1.36553,	1.36538,	1.36522,	1.36505,	1.36487,	1.36468,	1.36448,	1.36426,	1.36404,	1.3638,	1.36355,	1.36329,	1.36302,	1.36274,	1.36245,	1.36215,	1.36183,	1.36151,	1.36117,	1.36082,	1.36046,	1.36009,	1.35971,	1.35932,	1.35891,	1.3585,	1.35807,	1.35763,	1.35718,	1.35672,	1.35625,	1.35577,	1.35527,	1.35477,	1.35425,	1.35372,	1.35318,	1.35263,	1.35207,	1.35149,	1.35091,	1.35031,	1.3497,	1.34908,	1.34845,	1.3478,	1.34715,	1.34648,	1.3458,	1.34511,	1.34441,	1.3437,	1.34298,	1.34224,	1.34149,	1.34073,	1.33996,	1.33918,	1.33839,	1.33758,	1.33677,	1.33594,	1.3351,	1.33425,	1.33338,	1.33251,	1.33162,	1.33072,	1.32981,	1.32889,	1.32796,	1.32701,	1.32606,	1.32509,	1.32411,	1.32312,	1.32211,	1.3211,	1.32007,	1.31903,	1.31798,	1.31692,	1.31585,	1.31476,	1.31367,	1.31256,	1.31144,	1.31031,	1.30917,	1.30801,	1.30684,	1.30567,	1.30448,	1.30327,	1.30206,	1.30084,	1.2996,	1.29835,	1.29709,	1.29582,	1.29454,	1.29324,	1.29194,	1.29062,	1.28929,	1.28795,	1.2866,	1.28523,	1.28386,	1.28247,	1.28107,	1.27966,	1.27824,	1.2768,	1.27536,	1.2739,	1.27243,	1.27095,	1.26946,	1.26796,	1.26644,	1.26492,	1.26338,	1.26183,	1.26027,	1.2587,	1.25711,	1.25552,	1.25391,	1.2523,	1.25067,	1.24903,	1.24737,	1.24571,	1.24404,	1.24235,	1.24065,	1.23894,	1.23722,	1.23549,	1.23375,	1.232,	1.23023,	1.22845,	1.22667,	1.22487,	1.22306,	1.22124,	1.2194,	1.21756,	1.21571,	1.21384,	1.21196,	1.21007,	1.20817,	1.20626,	1.20434,	1.20241,	1.20047,	1.19851,	1.19655,	1.19457,	1.19258,	1.19058,	1.18857,	1.18655,	1.18452,	1.18248,	1.18043,	1.17836,	1.17629,	1.1742,	1.17211,	1.17,	1.16788,	1.16576,	1.16362,	1.16147,	1.15931,	1.15714,	1.15496,	1.15276,	1.15056,	1.14835,	1.14612,	1.14389,	1.14165,	1.13939,	1.13712,	1.13485,	1.13256,	1.13027,	1.12796,	1.12564,	1.12331,	1.12098,	1.11863,	1.11627,	1.1139,	1.11152,	1.10913,	1.10674,	1.10433,	1.10191,	1.09948,	1.09704,	1.09459,	1.09213,	1.08966,	1.08719,	1.0847,	1.0822,	1.07969,	1.07717,	1.07465,	1.07211,	1.06956,	1.067,	1.06444,	1.06186,	1.05928,	1.05668,	1.05408,	1.05146,	1.04884,	1.04621,	1.04356,	1.04091,	1.03825,	1.03558,	1.0329,	1.03021,	1.02751,	1.02481,	1.02209,	1.01936,	1.01663,	1.01388,	1.01113,	1.00837,	1.0056,	1.00282,	1.00003,	0.997234,	0.994428,	0.991613,	0.988789,	0.985956,	0.983115,	0.980265,	0.977407,	0.97454,	0.971664,	0.96878,	0.965887,	0.962986,	0.960077,	0.957159,	0.954233,	0.951298,	0.948356,	0.945405,	0.942445,	0.939478,	0.936503,	0.933519,	0.930527,	0.927528,	0.92452,	0.921505,	0.918481,	0.91545,	0.912411,	0.909364,	0.906309,	0.903247,	0.900176,	0.897099,	0.894013,	0.89092,	0.88782,	0.884712,	0.881597,	0.878474,	0.875344,	0.872206,	0.869062,	0.86591,	0.86275,	0.859584,	0.85641,	0.85323,	0.850042,	0.846847,	0.843646,	0.840437,	0.837222,	0.833999,	0.83077,	0.827534,	0.824292,	0.821042,	0.817787,	0.814524,	0.811255,	0.807979,	0.804697,	0.801408,	0.798113,	0.794812,	0.791505,	0.788191,	0.78487,	0.781544,	0.778212,	0.774873,	0.771529,	0.768178,	0.764821,	0.761459,	0.75809,	0.754716,	0.751336,	0.74795,	0.744559,	0.741161,	0.737758,	0.73435,	0.730936,	0.727517,	0.724092,	0.720661,	0.717226,	0.713785,	0.710338,	0.706887,	0.70343,	0.699968,	0.696501,	0.693029,	0.689552,	0.68607,	0.682583,	0.679091,	0.675594,	0.672093,	0.668587,	0.665076,	0.66156,	0.65804,	0.654516,	0.650986,	0.647453,	0.643914,	0.640372,	0.636825,	0.633274,	0.629718,	0.626159,	0.622595,	0.619027,	0.615455,	0.611879,	0.608299,	0.604715,	0.601128,	0.597536,	0.593941,	0.590342,	0.586739,	0.583132,	0.579522,	0.575909,	0.572291,	0.568671,	0.565047,	0.561419,	0.557788,	0.554154,	0.550517,	0.546877,	0.543233,	0.539586,	0.535937,	0.532284,	0.528628,	0.524969,	0.521308,	0.517644,	0.513976,	0.510307,	0.506634,	0.502959,	0.499281,	0.495601,	0.491918,	0.488233,	0.484545,	0.480855,	0.477163,	0.473469,	0.469772,	0.466073,	0.462372,	0.458669,	0.454964,	0.451257,	0.447548,	0.443837,	0.440124,	0.436409,	0.432693,	0.428975,	0.425255,	0.421534,	0.417811,	0.414087,	0.410361,	0.406634,	0.402905,	0.399175,	0.395444,	0.391711,	0.387978,	0.384243,	0.380507,	0.37677,	0.373032,	0.369293,	0.365553,	0.361812,	0.358071,	0.354329,	0.350586,	0.346842,	0.343098,	0.339353,	0.335607,	0.331861,	0.328115,	0.324368,	0.320621,	0.316874,	0.313126,	0.309378,	0.30563,	0.301881,	0.298133,	0.294385,	0.290636,	0.286888,	0.28314,	0.279392,	0.275644,	0.271896,	0.268149,	0.264402,	0.260655,	0.256909,	0.253163,	0.249418,	0.245673,	0.241929,	0.238186,	0.234443,	0.230701,	0.22696,	0.223219,	0.21948,	0.215741,	0.212003,	0.208266,	0.204531,	0.200796,	0.197063,	0.19333,	0.189599,	0.18587,	0.182141,	0.178414,	0.174688,	0.170964,	0.167241,	0.16352,	0.1598,	0.156082,	0.152366,	0.148651,	0.144938,	0.141227,	0.137518,	0.13381,	0.130105,	0.126401,	0.1227,	0.119,	0.115303,	0.111608,	0.107914,	0.104224,	0.100535,	0.0968486,	0.0931646,	0.089483,	0.0858039,	0.0821272,	0.078453,	0.0747814,	0.0711123,	0.0674459,	0.0637822,	0.0601212,	0.056463,	0.0528075,	0.0491549,	0.0455052,	0.0418585,	0.0382146,	0.0345738,	0.0309361,	0.0273014,	0.0236698,	0.0200415,	0.0164163,	0.0127944,	0.00917573,	0.00556042,	0.00194848,	-0.00166005,	-0.00526514,	-0.00886674,	-0.0124648,	-0.0160593,	-0.0196502,	-0.0232375,	-0.0268211,	-0.0304009,	-0.0339771,	-0.0375494,	-0.0411178,	-0.0446824,	-0.0482431,	-0.0517999,	-0.0553526,	-0.0589013,	-0.062446,	-0.0659866,	-0.069523,	-0.0730552,	-0.0765833,	-0.0801071,	-0.0836266,	-0.0871417,	-0.0906526,	-0.094159,	-0.097661,	-0.101158,	-0.104651,	-0.10814,	-0.111624,	-0.115103,	-0.118578,	-0.122048,	-0.125513,	-0.128973,	-0.132429,	-0.13588,	-0.139326,	-0.142767,	-0.146203,	-0.149634,	-0.153061,	-0.156482,	-0.159898,	-0.163309,	-0.166715,	-0.170115,	-0.173511,	-0.176901,	-0.180286,	-0.183666,	-0.18704,	-0.190409,	-0.193773,	-0.197131,	-0.200484,	-0.203831,	-0.207172,	-0.210508,	-0.213839,	-0.217164,	-0.220483,	-0.223797,	-0.227104,	-0.230406,	-0.233703,	-0.236993,	-0.240278,	-0.243556,	-0.246829,	-0.250096,	-0.253357,	-0.256612,	-0.259861,	-0.263104,	-0.26634,	-0.269571,	-0.272795,	-0.276014,	-0.279226,	-0.282432,	-0.285631,	-0.288825,	-0.292012,	-0.295192,	-0.298367,	-0.301534,	-0.304696,	-0.307851,	-0.310999,	-0.314141,	-0.317277,	-0.320406,	-0.323528,	-0.326644,	-0.329753,	-0.332855,	-0.335951,	-0.33904,	-0.342122,	-0.345197,	-0.348266,	-0.351327,	-0.354382,	-0.35743,	-0.360471,	-0.363506,	-0.366533,	-0.369553,	-0.372566,	-0.375573,	-0.378572,	-0.381564,	-0.384549,	-0.387527,	-0.390497,	-0.393461,	-0.396417,	-0.399366,	-0.402308,	-0.405243,	-0.40817,	-0.41109,	-0.414003,	-0.416908,	-0.419806,	-0.422697,	-0.42558,	-0.428456,	-0.431324,	-0.434185,	-0.437038,	-0.439884,	-0.442722,	-0.445553,	-0.448376,	-0.451192,	-0.453999,	-0.4568,	-0.459592,	-0.462377,	-0.465154,	-0.467924,	-0.470685,	-0.473439,	-0.476186,	-0.478924,	-0.481655,	-0.484377,	-0.487092,	-0.489799,	-0.492498,	-0.49519,	-0.497873,	-0.500548,	-0.503216,	-0.505875,	-0.508527,	-0.51117,	-0.513805,	-0.516433,	-0.519052,	-0.521664,	-0.524267,	-0.526862,	-0.529449,	-0.532028,	-0.534598,	-0.537161,	-0.539715,	-0.542261,	-0.544799,	-0.547329,	-0.549851,	-0.552364,	-0.554869,	-0.557366,	-0.559854,	-0.562334,	-0.564806,	-0.56727,	-0.569725,	-0.572172,	-0.57461,	-0.57704,	-0.579462,	-0.581875,	-0.58428,	-0.586676,	-0.589064,	-0.591444,	-0.593815,	-0.596178,	-0.598532,	-0.600878,	-0.603215,	-0.605543,	-0.607863,	-0.610175,	-0.612478,	-0.614773,	-0.617059,	-0.619336,	-0.621605,	-0.623865,	-0.626117,	-0.62836,	-0.630594,	-0.63282,	-0.635037,	-0.637245,	-0.639445,	-0.641636,	-0.643819,	-0.645993,	-0.648158,	-0.650314,	-0.652462,	-0.654601,	-0.656732,	-0.658853,	-0.660966,	-0.663071,	-0.665166,	-0.667253,	-0.669331,	-0.6714,	-0.673461,	-0.675512,	-0.677555,	-0.67959,	-0.681615,	-0.683632,	-0.68564,	-0.687639,	-0.689629,	-0.691611,	-0.693583,	-0.695547,	-0.697502,	-0.699449,	-0.701386,	-0.703315,	-0.705235,	-0.707146,	-0.709048,	-0.710941,	-0.712826,	-0.714702,	-0.716569,	-0.718427,	-0.720276,	-0.722116,	-0.723948,	-0.725771,	-0.727584,	-0.72939,	-0.731186,	-0.732973,	-0.734752,	-0.736521,	-0.738282,	-0.740034,	-0.741777,	-0.743511,	-0.745237,	-0.746953,	-0.748661,	-0.75036,	-0.75205,	-0.753731,	-0.755403,	-0.757067,	-0.758722,	-0.760368,	-0.762005,	-0.763633,	-0.765252,	-0.766863,	-0.768464,	-0.770057,	-0.771641,	-0.773216,	-0.774783,	-0.77634,	-0.777889,	-0.779429,	-0.780961,	-0.782483,	-0.783997,	-0.785501,	-0.786997,	-0.788485,	-0.789963,	-0.791433,	-0.792894,	-0.794346,	-0.795789,	-0.797224,	-0.79865,	-0.800067,	-0.801475,	-0.802875,	-0.804266,	-0.805648,	-0.807022,	-0.808387,	-0.809743,	-0.81109,	-0.812429,	-0.813759,	-0.81508,	-0.816393,	-0.817697,	-0.818992,	-0.820279,	-0.821557,	-0.822827,	-0.824087,	-0.82534,	-0.826583,	-0.827818,	-0.829045,	-0.830262,	-0.831472,	-0.832672,	-0.833864,	-0.835048,	-0.836223,	-0.837389,	-0.838547,	-0.839697,	-0.840838,	-0.84197,	-0.843094,	-0.844209,	-0.845316,	-0.846415,	-0.847505,	-0.848586,	-0.84966,	-0.850724,	-0.851781,	-0.852829,	-0.853868,	-0.854899,	-0.855922,	-0.856937,	-0.857943,	-0.858941,	-0.85993,	-0.860911,	-0.861884,	-0.862849,	-0.863805,	-0.864753,	-0.865693,	-0.866625,	-0.867548,	-0.868463,	-0.86937,	-0.870269,	-0.871159,	-0.872042,	-0.872916,	-0.873782,	-0.87464,	-0.87549,	-0.876332,	-0.877165,	-0.877991,	-0.878809,	-0.879618,	-0.88042,	-0.881213,	-0.881998,	-0.882776,	-0.883545,	-0.884307,	-0.885061,	-0.885806,	-0.886544,	-0.887274,	-0.887996,	-0.88871,	-0.889416,	-0.890115,	-0.890805,	-0.891488,	-0.892163,	-0.89283,	-0.89349,	-0.894141,	-0.894785,	-0.895422,	-0.89605,	-0.896671,	-0.897284,	-0.89789,	-0.898487,	-0.899078,	-0.89966,	-0.900235,	-0.900803,	-0.901363,	-0.901915,	-0.90246,	-0.902998,	-0.903527,	-0.90405,	-0.904565,	-0.905072,	-0.905572,	-0.906065,	-0.906551,	-0.907028,	-0.907499,	-0.907962,	-0.908418,	-0.908867,	-0.909308,	-0.909743,	-0.910169,	-0.910589,	-0.911002,	-0.911407,	-0.911805,	-0.912196,	-0.91258,	-0.912957,	-0.913326,	-0.913689,	-0.914044,	-0.914393,	-0.914734,	-0.915068,	-0.915396,	-0.915716,	-0.91603,	-0.916337,	-0.916636,	-0.916929,	-0.917215,	-0.917494,	-0.917767,	-0.918032,	-0.918291,	-0.918543,	-0.918788,	-0.919026,	-0.919258,	-0.919483,	-0.919702,	-0.919913,	-0.920119,	-0.920317,	-0.920509,	-0.920694,	-0.920873,	-0.921046,	-0.921211,	-0.921371,	-0.921524,	-0.92167,	-0.92181,	-0.921943,	-0.922071,	-0.922192,	-0.922306,	-0.922414,	-0.922516,	-0.922612,	-0.922701,	-0.922784,	-0.922861,	-0.922932,	-0.922996,	-0.923055,	-0.923107,	-0.923153,	-0.923193,	-0.923228,	-0.923256,	-0.923278,	-0.923293,	-0.923304,	-0.923308,	-0.923306,	-0.923298,	-0.923284,	-0.923265,	-0.923239,	-0.923208,	-0.923171,	-0.923128,	-0.92308,	-0.923025,	-0.922966,	-0.9229,	-0.922828,	-0.922752,	-0.922669,	-0.922581,	-0.922487,	-0.922388,	-0.922283,	-0.922172,	-0.922056,	-0.921935,	-0.921808,	-0.921676,	-0.921539,	-0.921396,	-0.921247,	-0.921094,	-0.920935,	-0.92077,	-0.920601,	-0.920426,	-0.920246,	-0.920061,	-0.919871,	-0.919675,	-0.919475,	-0.919269,	-0.919058,	-0.918842,	-0.918621,	-0.918396,	-0.918165,	-0.917929,	-0.917688,	-0.917442,	-0.917192,	-0.916936,	-0.916676,	-0.916411,	-0.916141,	-0.915866,	-0.915587,	-0.915303,	-0.915014,	-0.91472,	-0.914422,	-0.914119,	-0.913812,	-0.9135,	-0.913183,	-0.912862,	-0.912536,	-0.912206,	-0.911871,	-0.911532,	-0.911188,	-0.91084,	-0.910488,	-0.910131,	-0.90977,	-0.909405,	-0.909035,	-0.908661,	-0.908283,	-0.907901,	-0.907514,	-0.907124,	-0.906729,	-0.90633,	-0.905927,	-0.905519,	-0.905108,	-0.904693,	-0.904274,	-0.90385,	-0.903423,	-0.902992,	-0.902557,	-0.902118,	-0.901675,	-0.901228,	-0.900778,	-0.900324,	-0.899865,	-0.899404,	-0.898938,	-0.898469,	-0.897996,	-0.897519,	-0.897039,	-0.896555,	-0.896068,	-0.895577,	-0.895083,	-0.894585,	-0.894083,	-0.893578,	-0.89307,	-0.892558,	-0.892043,	-0.891524,	-0.891002,	-0.890477,	-0.889948,	-0.889416,	-0.888881,	-0.888343,	-0.887801,	-0.887256,	-0.886708,	-0.886157,	-0.885603,	-0.885046,	-0.884485,	-0.883922,	-0.883355,	-0.882786,	-0.882214,	-0.881638,	-0.88106,	-0.880479,	-0.879894,	-0.879307,	-0.878718,	-0.878125,	-0.877529,	-0.876931,	-0.87633,	-0.875726,	-0.87512,	-0.874511,	-0.873899,	-0.873285,	-0.872668,	-0.872048,	-0.871426,	-0.870801,	-0.870174,	-0.869544,	-0.868912,	-0.868277,	-0.86764,	-0.867001,	-0.866359,	-0.865714,	-0.865068,	-0.864419,	-0.863767,	-0.863114,	-0.862458,	-0.8618,	-0.86114,	-0.860477,	-0.859813,	-0.859146,	-0.858477,	-0.857806,	-0.857133,	-0.856458,	-0.855781,	-0.855102,	-0.854421,	-0.853738,	-0.853053,	-0.852366,	-0.851677,	-0.850986,	-0.850293,	-0.849599,	-0.848903,	-0.848205,	-0.847505,	-0.846803,	-0.8461,	-0.845395,	-0.844688,	-0.84398,	-0.84327,	-0.842558,	-0.841845,	-0.84113,	-0.840414,	-0.839696,	-0.838976,	-0.838255,	-0.837533,	-0.836809,	-0.836084,	-0.835357,	-0.834629,	-0.8339,	-0.833169,	-0.832437,	-0.831703,	-0.830969,	-0.830233,	-0.829495,	-0.828757,	-0.828017,	-0.827276,	-0.826534,	-0.825791,	-0.825047,	-0.824302,	-0.823555,	-0.822808,	-0.822059,	-0.821309,	-0.820559,	-0.819807,	-0.819055,	-0.818301,	-0.817547,	-0.816792,	-0.816036,	-0.815279,	-0.814521,	-0.813762,	-0.813003,	-0.812242,	-0.811481,	-0.810719,	-0.809957,	-0.809194,	-0.80843,	-0.807665,	-0.8069,	-0.806134,	-0.805368,	-0.804601,	-0.803833,	-0.803065,	-0.802296,	-0.801527,	-0.800757,	-0.799987,	-0.799217,	-0.798446,	-0.797674,	-0.796902,	-0.79613,	-0.795357,	-0.794584,	-0.793811,	-0.793037,	-0.792263,	-0.791489,	-0.790715,	-0.78994,	-0.789165,	-0.78839,	-0.787615,	-0.786839,	-0.786064,	-0.785288,	-0.784512,	-0.783736,	-0.78296,	-0.782184,	-0.781408,	-0.780632,	-0.779856,	-0.77908,	-0.778304,	-0.777528,	-0.776752,	-0.775976,	-0.7752,	-0.774425,	-0.773649,	-0.772874,	-0.772098,	-0.771323,	-0.770549,	-0.769774,	-0.768999,	-0.768225,	-0.767451,	-0.766678,	-0.765905,	-0.765132,	-0.764359,	-0.763587,	-0.762815,	-0.762043,	-0.761272,	-0.760501,	-0.759731,	-0.758961,	-0.758192,	-0.757423,	-0.756654,	-0.755886,	-0.755119,	-0.754352,	-0.753585,	-0.75282,	-0.752055,	-0.75129,	-0.750526,	-0.749763,	-0.749,	-0.748238,	-0.747477,	-0.746716,	-0.745956,	-0.745197,	-0.744438,	-0.74368,	-0.742923,	-0.742167,	-0.741412,	-0.740657,	-0.739903,	-0.73915,	-0.738398,	-0.737647,	-0.736897,	-0.736147,	-0.735398,	-0.734651,	-0.733904,	-0.733158,	-0.732414,	-0.73167,	-0.730927,	-0.730185,	-0.729444,	-0.728704,	-0.727966,	-0.727228,	-0.726491,	-0.725756,	-0.725021,	-0.724288,	-0.723556,	-0.722825,	-0.722095,	-0.721366,	-0.720638,	-0.719912,	-0.719187,	-0.718463,	-0.71774,	-0.717019,	-0.716298,	-0.715579,	-0.714862,	-0.714145,	-0.71343,	-0.712716,	-0.712004,	-0.711293,	-0.710583,	-0.709874,	-0.709167,	-0.708461,	-0.707757,	-0.707054,	-0.706353,	-0.705653,	-0.704954,	-0.704257,	-0.703561,	-0.702867,	-0.702174,	-0.701483,	-0.700793,	-0.700105,	-0.699418,	-0.698733,	-0.698049,	-0.697367,	-0.696687,	-0.696008,	-0.695331,	-0.694655,	-0.693981,	-0.693309,	-0.692638,	-0.691969,	-0.691301,	-0.690635,	-0.689971,	-0.689309,	-0.688648,	-0.687989,	-0.687332,	-0.686676,	-0.686022,	-0.68537,	-0.68472,	-0.684071,	-0.683424,	-0.682779,	-0.682136,	-0.681494,	-0.680855,	-0.680217,	-0.679581,	-0.678947,	-0.678314,	-0.677684,	-0.677055,	-0.676429,	-0.675804,	-0.675181,	-0.67456,	-0.673941,	-0.673323,	-0.672708,	-0.672095,	-0.671483,	-0.670874,	-0.670266,	-0.669661,	-0.669057,	-0.668456,	-0.667856,	-0.667258,	-0.666663,	-0.666069,	-0.665478,	-0.664888,	-0.664301,	-0.663715,	-0.663132,	-0.662551,	-0.661971,	-0.661394,	-0.660819,	-0.660246,	-0.659675,	-0.659106,	-0.65854,	-0.657975,	-0.657413,	-0.656852,	-0.656294,	-0.655738,	-0.655184,	-0.654632,	-0.654083,	-0.653535,	-0.65299,	-0.652447,	-0.651906,	-0.651367,	-0.650831,	-0.650297,	-0.649765,	-0.649235,	-0.648707,	-0.648182,	-0.647659,	-0.647138,	-0.646619,	-0.646103,	-0.645589,	-0.645077,	-0.644567,	-0.64406,	-0.643555,	-0.643052,	-0.642552,	-0.642053,	-0.641557,	-0.641064,	-0.640573,	-0.640084,	-0.639597,	-0.639113,	-0.638631,	-0.638151,	-0.637674,	-0.637199,	-0.636726,	-0.636256,	-0.635788,	-0.635323,	-0.63486,	-0.634399,	-0.63394,	-0.633484,	-0.633031,	-0.632579,	-0.632131,	-0.631684,	-0.63124,	-0.630798,	-0.630359,	-0.629922,	-0.629488,	-0.629056,	-0.628626,	-0.628199,	-0.627774,	-0.627352,	-0.626932,	-0.626515,	-0.6261,	-0.625687,	-0.625277,	-0.624869,	-0.624464,	-0.624061,	-0.623661,	-0.623263,	-0.622868,	-0.622475,	-0.622084,	-0.621697,	-0.621311,	-0.620928,	-0.620548,	-0.62017,	-0.619794,	-0.619421,	-0.61905,	-0.618682,	-0.618317,	-0.617954,	-0.617593,	-0.617235,	-0.616879,	-0.616526,	-0.616176,	-0.615828,	-0.615482,	-0.615139,	-0.614799,	-0.614461,	-0.614125,	-0.613792,	-0.613462,	-0.613134,	-0.612808,	-0.612485,	-0.612165,	-0.611847,	-0.611532,	-0.611219,	-0.610909,	-0.610601,	-0.610296,	-0.609993,	-0.609693,	-0.609396,	-0.609101,	-0.608808,	-0.608518,	-0.608231,	-0.607946,	-0.607663,	-0.607384,	-0.607106,	-0.606832,	-0.606559,	-0.60629,	-0.606023,	-0.605758,	-0.605496,	-0.605237,	-0.60498,	-0.604725,	-0.604473,	-0.604224,	-0.603977,	-0.603733,	-0.603491,	-0.603252,	-0.603016,	-0.602782,	-0.60255,	-0.602321,	-0.602095,	-0.601871,	-0.601649,	-0.601431,	-0.601214,	-0.601001,	-0.600789,	-0.600581,	-0.600374,	-0.600171,	-0.59997,	-0.599771,	-0.599575,	-0.599382,	-0.599191,	-0.599002,	-0.598817,	-0.598633,	-0.598452,	-0.598274,	-0.598098,	-0.597925,	-0.597754,	-0.597586,	-0.59742,	-0.597257,	-0.597096,	-0.596938,	-0.596783,	-0.59663,	-0.596479,	-0.596331,	-0.596185,	-0.596042,	-0.595901,	-0.595763,	-0.595628,	-0.595495,	-0.595364,	-0.595236,	-0.59511,	-0.594987,	-0.594866,	-0.594748,	-0.594633,	-0.594519,	-0.594409,	-0.5943,	-0.594195,	-0.594091,	-0.59399,	-0.593892,	-0.593796,	-0.593703,	-0.593612,	-0.593523,	-0.593437,	-0.593353,	-0.593272,	-0.593193,	-0.593117,	-0.593043,	-0.592972,	-0.592903,	-0.592836,	-0.592772,	-0.59271,	-0.592651,	-0.592594,	-0.59254,	-0.592488,	-0.592438,	-0.592391,	-0.592346,	-0.592304,	-0.592264,	-0.592226,	-0.592191,	-0.592158,	-0.592128,	-0.5921,	-0.592074,	-0.592051,	-0.59203,	-0.592011,	-0.591995,	-0.591981,	-0.59197,	-0.59196,	-0.591954,	-0.591949,	-0.591947,	-0.591947,	-0.59195,	-0.591955,	-0.591962,	-0.591972,	-0.591984,	-0.591998,	-0.592014,	-0.592033,	-0.592054,	-0.592078,	-0.592103,	-0.592131,	-0.592162,	-0.592194,	-0.592229,	-0.592266,	-0.592306,	-0.592347,	-0.592391,	-0.592438,	-0.592486,	-0.592537,	-0.59259,	-0.592645,	-0.592702,	-0.592762,	-0.592824,	-0.592888,	-0.592955,	-0.593023,	-0.593094,	-0.593167,	-0.593242,	-0.593319,	-0.593399,	-0.593481,	-0.593565,	-0.593651,	-0.593739,	-0.59383,	-0.593922,	-0.594017,	-0.594114,	-0.594213,	-0.594315,	-0.594418,	-0.594523,	-0.594631,	-0.594741,	-0.594853,	-0.594967,	-0.595083,	-0.595201,	-0.595322,	-0.595444,	-0.595569,	-0.595695,	-0.595824,	-0.595955,	-0.596087,	-0.596222,	-0.596359,	-0.596498,	-0.596639,	-0.596783,	-0.596928,	-0.597075,	-0.597224,	-0.597375,	-0.597529,	-0.597684,	-0.597841,	-0.598001,	-0.598162,	-0.598325,	-0.59849,	-0.598658,	-0.598827,	-0.598998,	-0.599171,	-0.599346,	-0.599523,	-0.599702,	-0.599883,	-0.600066,	-0.600251,	-0.600438,	-0.600626,	-0.600817,	-0.60101,	-0.601204,	-0.6014,	-0.601598,	-0.601798,	-0.602,	-0.602204,	-0.60241,	-0.602617,	-0.602827,	-0.603038,	-0.603251,	-0.603466,	-0.603683,	-0.603902,	-0.604122,	-0.604344,	-0.604568,	-0.604794,	-0.605022,	-0.605251,	-0.605483,	-0.605716,	-0.60595,	-0.606187,	-0.606425,	-0.606665,	-0.606907,	-0.607151,	-0.607396,	-0.607643,	-0.607892,	-0.608142,	-0.608395,	-0.608648,	-0.608904,	-0.609161,	-0.60942,	-0.609681,	-0.609943,	-0.610208,	-0.610473,	-0.610741,	-0.61101,	-0.61128,	-0.611553,	-0.611827,	-0.612102,	-0.612379,	-0.612658,	-0.612939,	-0.613221,	-0.613504,	-0.613789,	-0.614076,	-0.614365,	-0.614655,	-0.614946,	-0.615239,	-0.615534,	-0.61583,	-0.616128,	-0.616427,	-0.616728,	-0.61703,	-0.617334,	-0.617639,	-0.617946,	-0.618254,	-0.618564,	-0.618875,	-0.619188,	-0.619502,	-0.619818,	-0.620135,	-0.620454,	-0.620774,	-0.621096,	-0.621419,	-0.621743,	-0.622069,	-0.622396,	-0.622725,	-0.623055,	-0.623386,	-0.623719,	-0.624053,	-0.624389,	-0.624725,	-0.625064,	-0.625403,	-0.625744,	-0.626087,	-0.62643,	-0.626775,	-0.627122,	-0.627469,	-0.627818,	-0.628169,	-0.62852,	-0.628873,	-0.629227,	-0.629583,	-0.629939,	-0.630297,	-0.630657,	-0.631017,	-0.631379,	-0.631742,	-0.632106,	-0.632471,	-0.632838,	-0.633206,	-0.633575,	-0.633945,	-0.634317,	-0.634689,	-0.635063,	-0.635438,	-0.635814,	-0.636192,	-0.63657,	-0.63695,	-0.63733,	-0.637712,	-0.638095,	-0.63848,	-0.638865,	-0.639251,	-0.639639,	-0.640027,	-0.640417,	-0.640808,	-0.6412,	-0.641593,	-0.641987,	-0.642382,	-0.642778,	-0.643175,	-0.643573,	-0.643972,	-0.644373,	-0.644774,	-0.645176,	-0.645579,	-0.645984,	-0.646389,	-0.646795,	-0.647203,	-0.647611,	-0.64802,	-0.64843,	-0.648841,	-0.649253,	-0.649666,	-0.65008,	-0.650495,	-0.650911,	-0.651328,	-0.651745,	-0.652164,	-0.652583,	-0.653003,	-0.653425,	-0.653847,	-0.65427,	-0.654693,	-0.655118,	-0.655544,	-0.65597,	-0.656397,	-0.656825,	-0.657254,	-0.657684,	-0.658114,	-0.658546,	-0.658978,	-0.659411,	-0.659844,	-0.660279,	-0.660714,	-0.66115,	-0.661587,	-0.662025,	-0.662463,	-0.662902,	-0.663342,	-0.663782,	-0.664224,	-0.664666,	-0.665108,	-0.665552,	-0.665996,	-0.666441,	-0.666886,	-0.667332,	-0.667779,	-0.668227,	-0.668675,	-0.669124,	-0.669573,	-0.670023,	-0.670474,	-0.670926,	-0.671378,	-0.67183,	-0.672284,	-0.672738,	-0.673192,	-0.673647,	-0.674103,	-0.674559,	-0.675016,	-0.675473,	-0.675931,	-0.67639,	-0.676849,	-0.677309,	-0.677769,	-0.67823,	-0.678691,	-0.679153,	-0.679615,	-0.680078,	-0.680541,	-0.681005,	-0.681469,	-0.681934,	-0.682399,	-0.682865,	-0.683332,	-0.683798,	-0.684265,	-0.684733,	-0.685201,	-0.68567,	-0.686139,	-0.686608,	-0.687078,	-0.687548,	-0.688019,	-0.68849,	-0.688961,	-0.689433,	-0.689905,	-0.690378,	-0.690851,	-0.691324,	-0.691798,	-0.692272,	-0.692746,	-0.693221,	-0.693696,	-0.694172,	-0.694648,	-0.695124,	-0.6956,	-0.696077,	-0.696554,	-0.697031,	-0.697509,	-0.697987,	-0.698465,	-0.698944,	-0.699423,	-0.699902,	-0.700381,	-0.700861,	-0.701341,	-0.701821,	-0.702301,	-0.702782,	-0.703263,	-0.703744,	-0.704225,	-0.704706,	-0.705188,	-0.70567,	-0.706152,	-0.706634,	-0.707117,	-0.707599,	-0.708082,	-0.708565,	-0.709049,	-0.709532,	-0.710015,	-0.710499,	-0.710983,	-0.711467,	-0.711951,	-0.712435,	-0.712919,	-0.713404,	-0.713888,	-0.714373,	-0.714858,	-0.715343,	-0.715828,	-0.716313,	-0.716798,	-0.717283,	-0.717768,	-0.718254,	-0.718739,	-0.719224,	-0.71971,	-0.720196,	-0.720681,	-0.721167,	-0.721652,	-0.722138,	-0.722624,	-0.72311,	-0.723595,	-0.724081,	-0.724567,	-0.725053,	-0.725538,	-0.726024,	-0.72651,	-0.726996,	-0.727481,	-0.727967,	-0.728453,	-0.728938,	-0.729424,	-0.729909,	-0.730395,	-0.73088,	-0.731365,	-0.73185,	-0.732336,	-0.732821,	-0.733306,	-0.73379,	-0.734275,	-0.73476,	-0.735245,	-0.735729,	-0.736213,	-0.736698,	-0.737182,	-0.737666,	-0.73815,	-0.738633,	-0.739117,	-0.7396,	-0.740084,	-0.740567,	-0.74105,	-0.741533,	-0.742015,	-0.742498,	-0.74298,	-0.743462,	-0.743944,	-0.744426,	-0.744908,	-0.745389,	-0.74587,	-0.746351,	-0.746832,	-0.747313,	-0.747793,	-0.748273,	-0.748753,	-0.749233,	-0.749712,	-0.750191,	-0.75067,	-0.751149,	-0.751627,	-0.752105,	-0.752583,	-0.753061,	-0.753538,	-0.754016,	-0.754492,	-0.754969,	-0.755445,	-0.755921,	-0.756397,	-0.756872,	-0.757347,	-0.757822,	-0.758297,	-0.758771,	-0.759245,	-0.759718,	-0.760191,	-0.760664,	-0.761137,	-0.761609,	-0.762081,	-0.762552,	-0.763024,	-0.763494,	-0.763965,	-0.764435,	-0.764905,	-0.765374,	-0.765843,	-0.766312,	-0.76678,	-0.767248,	-0.767715,	-0.768182,	-0.768649,	-0.769115,	-0.769581,	-0.770047,	-0.770512,	-0.770977,	-0.771441,	-0.771905,	-0.772368,	-0.772831,	-0.773294,	-0.773756,	-0.774218,	-0.774679,	-0.77514,	-0.7756,	-0.77606,	-0.77652,	-0.776979,	-0.777437,	-0.777896,	-0.778353,	-0.77881,	-0.779267,	-0.779723,	-0.780179,	-0.780634,	-0.781089,	-0.781544,	-0.781997,	-0.782451,	-0.782904,	-0.783356,	-0.783808,	-0.784259,	-0.78471,	-0.78516,	-0.78561,	-0.786059,	-0.786508,	-0.786956,	-0.787404,	-0.787851,	-0.788298,	-0.788744,	-0.78919,	-0.789635,	-0.790079,	-0.790523,	-0.790966,	-0.791409,	-0.791851,	-0.792293,	-0.792734,	-0.793175,	-0.793615,	-0.794054,	-0.794493,	-0.794931,	-0.795369,	-0.795806,	-0.796243,	-0.796679,	-0.797114,	-0.797549,	-0.797983,	-0.798417,	-0.79885,	-0.799282,	-0.799714,	-0.800145,	-0.800575,	-0.801005,	-0.801435,	-0.801863,	-0.802291,	-0.802719,	-0.803146,	-0.803572,	-0.803997,	-0.804422,	-0.804847,	-0.80527,	-0.805693,	-0.806116,	-0.806537,	-0.806959,	-0.807379,	-0.807799,	-0.808218,	-0.808636,	-0.809054,	-0.809471,	-0.809888,	-0.810304,	-0.810719,	-0.811133,	-0.811547,	-0.81196,	-0.812373,	-0.812784,	-0.813195,	-0.813606,	-0.814016,	-0.814425,	-0.814833,	-0.815241,	-0.815648,	-0.816054,	-0.816459,	-0.816864,	-0.817268,	-0.817672,	-0.818075,	-0.818477,	-0.818878,	-0.819279,	-0.819679,	-0.820078,	-0.820476,	-0.820874,	-0.821271,	-0.821667,	-0.822063,	-0.822458,	-0.822852,	-0.823245,	-0.823638,	-0.82403,	-0.824421,	-0.824812,	-0.825201,	-0.82559,	-0.825979,	-0.826366,	-0.826753,	-0.827139,	-0.827524,	-0.827909,	-0.828292,	-0.828676,	-0.829058,	-0.829439,	-0.82982,	-0.8302,	-0.830579,	-0.830958,	-0.831335,	-0.831712,	-0.832089,	-0.832464,	-0.832839,	-0.833212,	-0.833585,	-0.833958,	-0.834329,	-0.8347,	-0.83507,	-0.835439,	-0.835808,	-0.836175,	-0.836542,	-0.836908,	-0.837274,	-0.837638,	-0.838002,	-0.838365,	-0.838727,	-0.839088,	-0.839449,	-0.839809,	-0.840167,	-0.840526,	-0.840883,	-0.84124,	-0.841595,	-0.84195,	-0.842304,	-0.842658,	-0.84301,	-0.843362,	-0.843713,	-0.844063,	-0.844413,	-0.844761,	-0.845109,	-0.845456,	-0.845802,	-0.846147,	-0.846492,	-0.846835,	-0.847178,	-0.84752,	-0.847861,	-0.848202,	-0.848541,	-0.84888,	-0.849218,	-0.849555,	-0.849891,	-0.850227,	-0.850561,	-0.850895,	-0.851228,	-0.85156,	-0.851892,	-0.852222,	-0.852552,	-0.852881,	-0.853209,	-0.853536,	-0.853862,	-0.854188,	-0.854512,	-0.854836,	-0.855159,	-0.855481,	-0.855803,	-0.856123,	-0.856443,	-0.856762,	-0.85708,	-0.857397,	-0.857713,	-0.858029,	-0.858343,	-0.858657,	-0.85897,	-0.859282,	-0.859593,	-0.859904,	-0.860214,	-0.860522,	-0.86083,	-0.861137,	-0.861443,	-0.861749,	-0.862053,	-0.862357,	-0.86266,	-0.862962,	-0.863263,	-0.863563,	-0.863863,	-0.864162,	-0.864459,	-0.864756,	-0.865052,	-0.865348,	-0.865642,	-0.865935,	-0.866228,	-0.86652,	-0.866811,	-0.867101,	-0.86739,	-0.867679,	-0.867967,	-0.868253,	-0.868539,	-0.868824,	-0.869108,	-0.869392,	-0.869674,	-0.869956,	-0.870237,	-0.870517,	-0.870796,	-0.871074,	-0.871352,	-0.871628,	-0.871904,	-0.872179,	-0.872453,	-0.872726,	-0.872998,	-0.87327,	-0.87354,	-0.87381,	-0.874079,	-0.874347,	-0.874614,	-0.874881,	-0.875146,	-0.875411,	-0.875675,	-0.875938,	-0.8762,	-0.876461,	-0.876721,	-0.876981,	-0.87724,	-0.877498,	-0.877755,	-0.878011,	-0.878266,	-0.878521,	-0.878774,	-0.879027,	-0.879279,	-0.87953,	-0.879781,	-0.88003,	-0.880279,	-0.880526,	-0.880773,	-0.881019,	-0.881265,	-0.881509,	-0.881752,	-0.881995,	-0.882237,	-0.882478,	-0.882718,	-0.882958,	-0.883196,	-0.883434,	-0.883671,	-0.883907,	-0.884142,	-0.884376,	-0.884609,	-0.884842,	-0.885074,	-0.885305,	-0.885535,	-0.885764,	-0.885993,	-0.88622,	-0.886447,	-0.886673,	-0.886898,	-0.887123,	-0.887346,	-0.887569,	-0.887791,	-0.888012,	-0.888232,	-0.888451,	-0.88867,	-0.888887,	-0.889104,	-0.88932,	-0.889536,	-0.88975,	-0.889964,	-0.890176,	-0.890388,	-0.890599,	-0.89081,	-0.891019,	-0.891228,	-0.891436,	-0.891643,	-0.891849,	-0.892054,	-0.892259,	-0.892463,	-0.892666,	-0.892868,	-0.893069,	-0.89327,	-0.893469,	-0.893668,	-0.893867,	-0.894064,	-0.89426,	-0.894456,	-0.894651,	-0.894845,	-0.895038,	-0.895231,	-0.895423,	-0.895613,	-0.895804,	-0.895993,	-0.896181,	-0.896369,	-0.896556,	-0.896742,	-0.896927,	-0.897112,	-0.897296,	-0.897479,	-0.897661,	-0.897842,	-0.898023,	-0.898203,	-0.898382,	-0.89856,	-0.898738,	-0.898914,	-0.89909,	-0.899265,	-0.89944,	-0.899613,	-0.899786,	-0.899958,	-0.900129,	-0.9003,	-0.900469,	-0.900638,	-0.900807,	-0.900974,	-0.901141,	-0.901307,	-0.901472,	-0.901636,	-0.9018,	-0.901962,	-0.902124,	-0.902286,	-0.902446,	-0.902606,	-0.902765,	-0.902923,	-0.903081,	-0.903238,	-0.903394,	-0.903549,	-0.903704,	-0.903857,	-0.90401,	-0.904163,	-0.904314,	-0.904465,	-0.904615,	-0.904764,	-0.904913,	-0.905061,	-0.905208,	-0.905354,	-0.9055,	-0.905645,	-0.905789,	-0.905933,	-0.906075,	-0.906217,	-0.906359,	-0.906499,	-0.906639,	-0.906778,	-0.906917,	-0.907054,	-0.907191,	-0.907328,	-0.907463,	-0.907598,	-0.907732,	-0.907866,	-0.907998,	-0.90813,	-0.908262,	-0.908392,	-0.908522,	-0.908651,	-0.90878,	-0.908907,	-0.909035,	-0.909161,	-0.909287,	-0.909412,	-0.909536,	-0.90966,	-0.909782,	-0.909905,	-0.910026,	-0.910147,	-0.910267,	-0.910387,	-0.910506,	-0.910624,	-0.910741,	-0.910858,	-0.910974,	-0.91109,	-0.911205,	-0.911319,	-0.911432,	-0.911545,	-0.911657,	-0.911768,	-0.911879,	-0.911989,	-0.912099,	-0.912208,	-0.912316,	-0.912423,	-0.91253,	-0.912636,	-0.912742,	-0.912847,	-0.912951,	-0.913055,	-0.913158,	-0.91326,	-0.913362,	-0.913463,	-0.913563,	-0.913663,	-0.913762,	-0.913861,	-0.913959,	-0.914056,	-0.914153,	-0.914249,	-0.914344,	-0.914439,	-0.914533,	-0.914626,	-0.914719,	-0.914812,	-0.914903,	-0.914994,	-0.915085,	-0.915175,	-0.915264,	-0.915353,	-0.915441,	-0.915528,	-0.915615,	-0.915701,	-0.915787,	-0.915872,	-0.915956,	-0.91604,	-0.916123,	-0.916206,	-0.916288,	-0.91637,	-0.916451,	-0.916531,	-0.916611,	-0.91669,	-0.916769,	-0.916847,	-0.916924,	-0.917001,	-0.917077,	-0.917153,	-0.917228,	-0.917303,	-0.917377,	-0.91745,	-0.917523,	-0.917596,	-0.917667,	-0.917739,	-0.917809,	-0.91788,	-0.917949,	-0.918018,	-0.918087,	-0.918155,	-0.918222,	-0.918289,	-0.918355,	-0.918421,	-0.918486,	-0.918551,	-0.918615,	-0.918679,	-0.918742,	-0.918805,	-0.918867,	-0.918929,	-0.91899,	-0.91905,	-0.91911,	-0.91917,	-0.919229,	-0.919287,	-0.919345,	-0.919403,	-0.91946,	-0.919516,	-0.919572,	-0.919627,	-0.919682,	-0.919737,	-0.919791,	-0.919844,	-0.919897,	-0.91995,	-0.920002,	-0.920053,	-0.920104,	-0.920155,	-0.920205,	-0.920254,	-0.920303,	-0.920352,	-0.9204,	-0.920448,	-0.920495,	-0.920542,	-0.920588,	-0.920634,	-0.920679,	-0.920724,	-0.920768,	-0.920812,	-0.920856,	-0.920899,	-0.920941,	-0.920983,	-0.921025,	-0.921066,	-0.921107,	-0.921147,	-0.921187,	-0.921227,	-0.921266,	-0.921304,	-0.921343,	-0.92138,	-0.921418,	-0.921454,	-0.921491,	-0.921527,	-0.921563,	-0.921598,	-0.921632,	-0.921667,	-0.921701,	-0.921734,	-0.921767,	-0.9218,	-0.921832,	-0.921864,	-0.921895,	-0.921927,	-0.921957,	-0.921987,	-0.922017,	-0.922047,	-0.922076,	-0.922104,	-0.922133,	-0.922161,	-0.922188,	-0.922215,	-0.922242,	-0.922268,	-0.922294,	-0.92232,	-0.922345,	-0.92237,	-0.922394,	-0.922418,	-0.922442,	-0.922466,	-0.922489,	-0.922511,	-0.922533,	-0.922555,	-0.922577,	-0.922598,	-0.922619,	-0.922639,	-0.92266,	-0.922679,	-0.922699,	-0.922718,	-0.922737,	-0.922755,	-0.922773,	-0.922791,	-0.922808,	-0.922825,	-0.922842,	-0.922859,	-0.922875,	-0.92289,	-0.922906,	-0.922921,	-0.922936,	-0.92295,	-0.922964,	-0.922978,	-0.922992,	-0.923005,	-0.923018,	-0.92303,	-0.923043,	-0.923055,	-0.923066,	-0.923078,	-0.923089,	-0.9231,	-0.92311,	-0.92312,	-0.92313,	-0.92314,	-0.923149,	-0.923158,	-0.923167,	-0.923175,	-0.923184,	-0.923191,	-0.923199,	-0.923206,	-0.923214,	-0.92322,	-0.923227,	-0.923233,	-0.923239,	-0.923245,	-0.92325,	-0.923256,	-0.923261,	-0.923265,	-0.92327,	-0.923274,	-0.923278,	-0.923281,	-0.923285,	-0.923288,	-0.923291,	-0.923294,	-0.923296,	-0.923298,	-0.9233,	-0.923302,	-0.923304,	-0.923305,	-0.923306,	-0.923307,	-0.923307,	-0.923308,	-0.923308,	-0.923308,	-0.923307,	-0.923307,	-0.923306,	-0.923305,	-0.923304,	-0.923302,	-0.923301,	-0.923299,	-0.923297,	-0.923295,	-0.923292,	-0.92329,	-0.923287,	-0.923284,	-0.923281,	-0.923277,	-0.923273,	-0.92327,	-0.923266,	-0.923261,	-0.923257,	-0.923253,	-0.923248,	-0.923243,	-0.923238,	-0.923232,	-0.923227,	-0.923221,	-0.923216,	-0.92321,	-0.923203,	-0.923197,	-0.923191,	-0.923184,	-0.923177,	-0.92317,	-0.923163,	-0.923156,	-0.923148,	-0.923141,	-0.923133,	-0.923125,	-0.923117,	-0.923109,	-0.9231,	-0.923092,	-0.923083,	-0.923074,	-0.923066,	-0.923056,	-0.923047,	-0.923038,	-0.923028,	-0.923019,	-0.923009,	-0.922999,	-0.922989,	-0.922979,	-0.922969,	-0.922959,	-0.922948,	-0.922938,	-0.922927,	-0.922916,	-0.922905,	-0.922894,	-0.922883,	-0.922872,	-0.92286,	-0.922849,	-0.922837,	-0.922825,	-0.922814,	-0.922802,	-0.92279,	-0.922777,	-0.922765,	-0.922753,	-0.922741,	-0.922728,	-0.922716,	-0.922703,	-0.92269,	-0.922677,	-0.922664,	-0.922651,	-0.922638,	-0.922625,	-0.922612,	-0.922599,	-0.922585,	-0.922572,	-0.922558,	-0.922545,	-0.922531,	-0.922517,	-0.922504,	-0.92249,	-0.922476,	-0.922462,	-0.922448,	-0.922434,	-0.922419,	-0.922405,	-0.922391,	-0.922377,	-0.922362,	-0.922348,	-0.922333,	-0.922319,	-0.922304,	-0.92229,	-0.922275,	-0.92226,	-0.922246,	-0.922231,	-0.922216,	-0.922201,	-0.922186,	-0.922171,	-0.922156,	-0.922141,	-0.922126,	-0.922111,	-0.922096,	-0.922081,	-0.922066,	-0.922051,	-0.922036,	-0.922021,	-0.922005,	-0.92199,	-0.921975,	-0.92196,	-0.921945,	-0.921929,	-0.921914,	-0.921899,	-0.921883,	-0.921868,	-0.921853,	-0.921838,	-0.921822,	-0.921807,	-0.921792,	-0.921776,	-0.921761,	-0.921746,	-0.92173,	-0.921715,	-0.9217,	-0.921685,	-0.921669,	-0.921654,	-0.921639,	-0.921624,	-0.921608,	-0.921593,	-0.921578,	-0.921563,	-0.921548,	-0.921533,	-0.921518,	-0.921502,	-0.921487,	-0.921472,	-0.921457,	-0.921442,	-0.921427,	-0.921413,	-0.921398,	-0.921383,	-0.921368,	-0.921353,	-0.921338,	-0.921324,	-0.921309,	-0.921294,	-0.92128,	-0.921265,	-0.921251,	-0.921236,	-0.921222,	-0.921208,	-0.921193,	-0.921179,	-0.921165,	-0.921151,	-0.921136,	-0.921122,	-0.921108,	-0.921094,	-0.92108,	-0.921067,	-0.921053,	-0.921039,	-0.921025,	-0.921012,	-0.920998,	-0.920985,	-0.920971,	-0.920958,	-0.920944,	-0.920931,	-0.920918,	-0.920905,	-0.920892,	-0.920879,	-0.920866,	-0.920853,	-0.92084,	-0.920828,	-0.920815,	-0.920803,	-0.92079,	-0.920778,	-0.920765,	-0.920753,	-0.920741,	-0.920729,	-0.920717,	-0.920705,	-0.920693,	-0.920682,	-0.92067,	-0.920658,	-0.920647,	-0.920635,	-0.920624,	-0.920613,	-0.920602,	-0.920591,	-0.92058,	-0.920569,	-0.920558,	-0.920548,	-0.920537,	-0.920527,	-0.920516,	-0.920506,	-0.920496,	-0.920486,	-0.920476,	-0.920466,	-0.920456,	-0.920446,	-0.920437,	-0.920427,	-0.920418,	-0.920409,	-0.920399,	-0.92039,	-0.920381,	-0.920372,	-0.920364,	-0.920355,	-0.920347,	-0.920338,	-0.92033,	-0.920322,	-0.920314,	-0.920306,	-0.920298,	-0.92029,	-0.920282,	-0.920275,	-0.920267,	-0.92026,	-0.920253,	-0.920246,	-0.920239,	-0.920232,	-0.920225,	-0.920219,	-0.920212,	-0.920206,	-0.9202,	-0.920193,	-0.920187,	-0.920182,	-0.920176,	-0.92017,	-0.920165,	-0.920159,	-0.920154,	-0.920149,	-0.920144,	-0.920139,	-0.920134,	-0.92013,	-0.920125,	-0.920121,	-0.920116,	-0.920112,	-0.920108,	-0.920104,	-0.920101,	-0.920097,	-0.920093,	-0.92009,	-0.920087,	-0.920084,	-0.920081,	-0.920078,	-0.920075,	-0.920073,	-0.92007,	-0.920068,	-0.920066,	-0.920063,	-0.920062,	-0.92006,	-0.920058,	-0.920057,	-0.920055,	-0.920054,	-0.920053,	-0.920052,	-0.920051,	-0.92005,	-0.920049,	-0.920049,	-0.920049,	-0.920048,	-0.920048,	-0.920048,	-0.920049,	-0.920049,	-0.92005,	-0.92005,	-0.920051,	-0.920052,	-0.920053,	-0.920054,	-0.920055,	-0.920057,	-0.920058,	-0.92006,	-0.920062,	-0.920064,	-0.920066,	-0.920068,	-0.92007,	-0.920073,	-0.920076,	-0.920078,	-0.920081,	-0.920084,	-0.920087,	-0.920091,	-0.920094,	-0.920098,	-0.920102,	-0.920105,	-0.920109,	-0.920114,	-0.920118,	-0.920122,	-0.920127,	-0.920131,	-0.920136,	-0.920141,	-0.920146,	-0.920151,	-0.920157,	-0.920162,	-0.920168,	-0.920174,	-0.920179,	-0.920185,	-0.920191,	-0.920198,	-0.920204,	-0.920211,	-0.920217,	-0.920224,	-0.920231,	-0.920238,	-0.920245,	-0.920252,	-0.92026,	-0.920267,	-0.920275,	-0.920283,	-0.920291,	-0.920299,	-0.920307,	-0.920315,	-0.920324,	-0.920332,	-0.920341,	-0.92035,	-0.920359,	-0.920368,	-0.920377,	-0.920386,	-0.920396,	-0.920405,	-0.920415,	-0.920425,	-0.920435,	-0.920445,	-0.920455,	-0.920465,	-0.920475,	-0.920486,	-0.920496,	-0.920507,	-0.920518,	-0.920529,	-0.92054,	-0.920551,	-0.920562,	-0.920574,	-0.920585,	-0.920597,	-0.920608,	-0.92062,	-0.920632,	-0.920644,	-0.920656,	-0.920668,	-0.920681,	-0.920693,	-0.920706,	-0.920718,	-0.920731,	-0.920744,	-0.920757,	-0.92077,	-0.920783,	-0.920796,	-0.92081,	-0.920823,	-0.920837,	-0.92085,	-0.920864,	-0.920878,	-0.920892,	-0.920906,	-0.92092,	-0.920934,	-0.920948,	-0.920962,	-0.920977,	-0.920991,	-0.921006,	-0.92102,	-0.921035,	-0.92105,	-0.921065,	-0.92108,	-0.921095,	-0.92111,	-0.921125,	-0.92114,	-0.921155,	-0.921171,	-0.921186,	-0.921202,	-0.921217,	-0.921233,	-0.921249,	-0.921264,	-0.92128,	-0.921296,	-0.921312,	-0.921328,	-0.921344,	-0.92136,	-0.921376,	-0.921393,	-0.921409,	-0.921425,	-0.921441,	-0.921458,	-0.921474,	-0.921491,	-0.921507,	-0.921524,	-0.92154,	-0.921557,	-0.921574,	-0.92159,	-0.921607,	-0.921624,	-0.921641,	-0.921658,	-0.921674,	-0.921691,	-0.921708,	-0.921725,	-0.921742,	-0.921759,	-0.921776,	-0.921793,	-0.92181,	-0.921827,	-0.921844,	-0.921861,	-0.921878,	-0.921895,	-0.921912,	-0.921929,	-0.921946,	-0.921963,	-0.92198,	-0.921997,	-0.922014,	-0.922031,	-0.922048,	-0.922065,	-0.922082,	-0.922099,	-0.922116,	-0.922132,	-0.922149,	-0.922166,	-0.922183,	-0.9222,	-0.922216,	-0.922233,	-0.92225,	-0.922266,	-0.922283,	-0.9223,	-0.922316,	-0.922332,	-0.922349,	-0.922365,	-0.922382,	-0.922398,	-0.922414,	-0.92243,	-0.922446,	-0.922462,	-0.922478,	-0.922494,	-0.92251,	-0.922525,	-0.922541,	-0.922557,	-0.922572,	-0.922587,	-0.922603,	-0.922618,	-0.922633,	-0.922648,	-0.922663,	-0.922678,	-0.922693,	-0.922707,	-0.922722,	-0.922736,	-0.92275,	-0.922765,	-0.922779,	-0.922793,	-0.922806,	-0.92282,	-0.922834,	-0.922847,	-0.922861,	-0.922874,	-0.922887,	-0.9229,	-0.922912,	-0.922925,	-0.922938,	-0.92295,	-0.922962,	-0.922974,	-0.922986,	-0.922998,	-0.923009,	-0.923021,	-0.923032,	-0.923043,	-0.923054,	-0.923064,	-0.923075,	-0.923085,	-0.923095,	-0.923105,	-0.923115,	-0.923124,	-0.923134,	-0.923143,	-0.923152,	-0.92316,	-0.923169,	-0.923177,	-0.923185,	-0.923193,	-0.923201,	-0.923208,	-0.923215,	-0.923222,	-0.923229,	-0.923235,	-0.923241,	-0.923247,	-0.923253,	-0.923258,	-0.923263,	-0.923268,	-0.923273,	-0.923277,	-0.923281,	-0.923285,	-0.923289,	-0.923292,	-0.923295,	-0.923297,	-0.9233,	-0.923302,	-0.923304,	-0.923305,	-0.923306,	-0.923307,	-0.923307,	-0.923308,	-0.923308,	-0.923307,	-0.923306,	-0.923305,	-0.923304,	-0.923302,	-0.9233,	-0.923297,	-0.923294,	-0.923291,	-0.923287,	-0.923283,	-0.923279,	-0.923274,	-0.923269,	-0.923264,	-0.923258,	-0.923252,	-0.923245,	-0.923238,	-0.923231,	-0.923223,	-0.923214,	-0.923206,	-0.923197,	-0.923187,	-0.923177,	-0.923167,	-0.923156,	-0.923144,	-0.923133,	-0.923121,	-0.923108,	-0.923095,	-0.923081,	-0.923067,	-0.923053,	-0.923038,	-0.923022,	-0.923006,	-0.92299,	-0.922973,	-0.922955,	-0.922937,	-0.922919,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	-0.220483,	


Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6   time = 432635 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7  
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 3: j = 96
Thread 2: j = 64
Thread 0: j = 1
Thread 1: j = 33
Thread 3: j = 97
Thread 2: j = 65
Thread 0: j = 2
Thread 1: j = 34
Thread 3: j = 98
Thread 2: j = 66
Thread 0: j = 3
Thread 1: j = 35
Thread 3: j = 99
Thread 2: j = 67
Thread 0: j = 4
Thread 1: j = 36
Thread 3: j = 100
Thread 2: j = 68
Thread 0: j = 5
Thread 1: j = 37
Thread 3: j = 101
Thread 2: j = 69
Thread 0: j = 6
Thread 1: j = 38
Thread 3: j = 102
Thread 2: j = 70
Thread 0: j = 7
Thread 1: j = 39
Thread 3: j = 103
Thread 2: j = 71
Thread 0: j = 8
Thread 1: j = 40
Thread 3: j = 104
Thread 2: j = 72
Thread 0: j = 9
Thread 1: j = 41
Thread 3: j = 105
Thread 2: j = 73
Thread 0: j = 10
Thread 1: j = 42
Thread 3: j = 106
Thread 2: j = 74
Thread 0: j = 11
Thread 1: j = 43
Thread 3: j = 107
Thread 2: j = 75
Thread 0: j = 12
Thread 1: j = 44
Thread 3: j = 108
Thread 2: j = 76
Thread 0: j = 13
Thread 1: j = 45
Thread 3: j = 109
Thread 2: j = 77
Thread 0: j = 14
Thread 1: j = 46
Thread 3: j = 110
Thread 2: j = 78
Thread 0: j = 15
Thread 1: j = 47
Thread 3: j = 111
Thread 2: j = 79
Thread 0: j = 16
Thread 1: j = 48
Thread 3: j = 112
Thread 2: j = 80
Thread 0: j = 17
Thread 1: j = 49
Thread 3: j = 113
Thread 2: j = 81
Thread 0: j = 18
Thread 1: j = 50
Thread 3: j = 114
Thread 2: j = 82
Thread 0: j = 19
Thread 1: j = 51
Thread 3: j = 115
Thread 2: j = 83
Thread 0: j = 20
Thread 1: j = 52
Thread 3: j = 116
Thread 2: j = 84
Thread 0: j = 21
Thread 1: j = 53
Thread 3: j = 117
Thread 2: j = 85
Thread 0: j = 22
Thread 1: j = 54
Thread 3: j = 118
Thread 2: j = 86
Thread 0: j = 23
Thread 1: j = 55
Thread 3: j = 119
Thread 2: j = 87
Thread 0: j = 24
Thread 1: j = 56
Thread 3: j = 120
Thread 2: j = 88
Thread 0: j = 25
Thread 1: j = 57
Thread 3: j = 121
Thread 2: j = 89
Thread 0: j = 26
Thread 1: j = 58
Thread 3: j = 122
Thread 2: j = 90
Thread 0: j = 27
Thread 1: j = 59
Thread 3: j = 123
Thread 2: j = 91
Thread 0: j = 28
Thread 1: j = 60
Thread 3: j = 124
Thread 2: j = 92
Thread 0: j = 29
Thread 1: j = 61
Thread 3: j = 125
Thread 2: j = 93
Thread 0: j = 30
Thread 1: j = 62
Thread 3: j = 126
Thread 2: j = 94
Thread 0: j = 31
Thread 1: j = 63
Thread 3: j = 127
Thread 2: j = 95
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 2: j = 72
Thread 3: j = 104
Thread 0: j = 9
Thread 1: j = 41
Thread 2: j = 73
Thread 3: j = 105
Thread 0: j = 10
Thread 1: j = 42
Thread 2: j = 74
Thread 3: j = 106
Thread 0: j = 11
Thread 1: j = 43
Thread 2: j = 75
Thread 3: j = 107
Thread 0: j = 12
Thread 1: j = 44
Thread 2: j = 76
Thread 3: j = 108
Thread 0: j = 13
Thread 1: j = 45
Thread 2: j = 77
Thread 3: j = 109
Thread 0: j = 14
Thread 1: j = 46
Thread 2: j = 78
Thread 3: j = 110
Thread 0: j = 15
Thread 1: j = 47
Thread 2: j = 79
Thread 3: j = 111
Thread 0: j = 16
Thread 1: j = 48
Thread 2: j = 80
Thread 3: j = 112
Thread 0: j = 17
Thread 1: j = 49
Thread 2: j = 81
Thread 3: j = 113
Thread 0: j = 18
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 114
Thread 0: j = 19
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 115
Thread 0: j = 20
Thread 1: j = 52
Thread 2: j = 84
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 53
Thread 2: j = 85
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 54
Thread 2: j = 86
Thread 3: j = 118
Thread 0: j = 23
Thread 1: j = 55
Thread 2: j = 87
Thread 3: j = 119
Thread 0: j = 24
Thread 1: j = 56
Thread 2: j = 88
Thread 3: j = 120
Thread 0: j = 25
Thread 1: j = 57
Thread 2: j = 89
Thread 3: j = 121
Thread 0: j = 26
Thread 1: j = 58
Thread 2: j = 90
Thread 3: j = 122
Thread 0: j = 27
Thread 1: j = 59
Thread 2: j = 91
Thread 3: j = 123
Thread 0: j = 28
Thread 1: j = 60
Thread 2: j = 92
Thread 3: j = 124
Thread 0: j = 29
Thread 1: j = 61
Thread 2: j = 93
Thread 3: j = 125
Thread 0: j = 30
Thread 1: j = 62
Thread 2: j = 94
Thread 3: j = 126
Thread 0: j = 31
Thread 1: j = 63
Thread 2: j = 95
Thread 3: j = 127
All tasks completed.
// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7

// Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7



SDFS:
0.609274,	0.600218,	0.591665,	0.583595,	0.575993,	0.568838,	0.562113,	0.555801,	0.549883,	0.544341,	0.539158,	0.534318,	0.529803,	0.525596,	0.521682,	0.518045,	0.514669,	0.511541,	0.508645,	0.505969,	0.503498,	0.50122,	0.499123,	0.497195,	0.495425,	0.493802,	0.492316,	0.490958,	0.489718,	0.488588,	0.487559,	0.486624,	0.485776,	0.485007,	0.484311,	0.483683,	0.483117,	0.482608,	0.48215,	0.48174,	0.481373,	0.481045,	0.480754,	0.480495,	0.480267,	0.480066,	0.47989,	0.479737,	0.479605,	0.479492,	0.479397,	0.479319,	0.479256,	0.479207,	0.479172,	0.479151,	0.479141,	0.479144,	0.479158,	0.479184,	0.47922,	0.479269,	0.479328,	0.479399,	0.479481,	0.479574,	0.47968,	0.479797,	0.479927,	0.480069,	0.480224,	0.480393,	0.480575,	0.480771,	0.480982,	0.481207,	0.481447,	0.481703,	0.481974,	0.482261,	0.482564,	0.482884,	0.483221,	0.483574,	0.483945,	0.484334,	0.48474,	0.485163,	0.485605,	0.486064,	0.486541,	0.487037,	0.48755,	0.488081,	0.488631,	0.489198,	0.489783,	0.490385,	0.491005,	0.491642,	0.492296,	0.492967,	0.493655,	0.494359,	0.495078,	0.495814,	0.496565,	0.49733,	0.498111,	0.498905,	0.499713,	0.500535,	0.501369,	0.502216,	0.503075,	0.503945,	0.504826,	0.505717,	0.506619,	0.50753,	0.508449,	0.509377,	0.510313,	0.511256,	0.512206,	0.513161,	0.514123,	0.515089,	0.516059,	0.517034,	0.518011,	0.518992,	0.519974,	0.520958,	0.521943,	0.522928,	0.523914,	0.524898,	0.525881,	0.526863,	0.527842,	0.528819,	0.529792,	0.530761,	0.531726,	0.532686,	0.53364,	0.534589,	0.535531,	0.536467,	0.537395,	0.538316,	0.539228,	0.540132,	0.541027,	0.541913,	0.542788,	0.543654,	0.544509,	0.545353,	0.546186,	0.547007,	0.547816,	0.548613,	0.549397,	0.550168,	0.550926,	0.551671,	0.552402,	0.553119,	0.553822,	0.55451,	0.555183,	0.555842,	0.556485,	0.557113,	0.557726,	0.558323,	0.558904,	0.559469,	0.560018,	0.560551,	0.561067,	0.561567,	0.562051,	0.562517,	0.562967,	0.5634,	0.563817,	0.564216,	0.564598,	0.564963,	0.565312,	0.565643,	0.565957,	0.566254,	0.566534,	0.566797,	0.567043,	0.567272,	0.567484,	0.567679,	0.567857,	0.568018,	0.568163,	0.568291,	0.568402,	0.568497,	0.568576,	0.568638,	0.568684,	0.568714,	0.568728,	0.568726,	0.568709,	0.568676,	0.568627,	0.568564,	0.568485,	0.568391,	0.568282,	0.568159,	0.568021,	0.567869,	0.567702,	0.567522,	0.567328,	0.56712,	0.566899,	0.566664,	0.566417,	0.566157,	0.565884,	0.565598,	0.565301,	0.564991,	0.56467,	0.564337,	0.563992,	0.563637,	0.56327,	0.562893,	0.562505,	0.562107,	0.561699,	0.561281,	0.560853,	0.560416,	0.55997,	0.559515,	0.559051,	0.558579,	0.558098,	0.55761,	0.557113,	0.55661,	0.556098,	0.55558,	0.555055,	0.554523,	0.553985,	0.55344,	0.55289,	0.552334,	0.551772,	0.551205,	0.550633,	0.550056,	0.549475,	0.548889,	0.548299,	0.547705,	0.547107,	0.546506,	0.545902,	0.545294,	0.544684,	0.54407,	0.543455,	0.542837,	0.542217,	0.541595,	0.540971,	0.540346,	0.53972,	0.539093,	0.538464,	0.537835,	0.537206,	0.536576,	0.535946,	0.535316,	0.534686,	0.534056,	0.533427,	0.532799,	0.532171,	0.531545,	0.53092,	0.530296,	0.529673,	0.529052,	0.528433,	0.527816,	0.527201,	0.526588,	0.525977,	0.525369,	0.524764,	0.524161,	0.523561,	0.522964,	0.52237,	0.521779,	0.521191,	0.520607,	0.520027,	0.51945,	0.518876,	0.518307,	0.517741,	0.51718,	0.516622,	0.516069,	0.51552,	0.514975,	0.514435,	0.513899,	0.513367,	0.51284,	0.512318,	0.511801,	0.511288,	0.51078,	0.510277,	0.509779,	0.509286,	0.508798,	0.508315,	0.507837,	0.507364,	0.506897,	0.506434,	0.505977,	0.505525,	0.505079,	0.504637,	0.504201,	0.503771,	0.503345,	0.502925,	0.50251,	0.502101,	0.501697,	0.501299,	0.500906,	0.500518,	0.500135,	0.499758,	0.499387,	0.49902,	0.498659,	0.498303,	0.497953,	0.497608,	0.497268,	0.496934,	0.496604,	0.49628,	0.495961,	0.495648,	0.495339,	0.495036,	0.494737,	0.494444,	0.494156,	0.493872,	0.493594,	0.49332,	0.493052,	0.492788,	0.492529,	0.492275,	0.492026,	0.491781,	0.491541,	0.491306,	0.491075,	0.490849,	0.490627,	0.49041,	0.490197,	0.489989,	0.489784,	0.489585,	0.489389,	0.489197,	0.48901,	0.488827,	0.488648,	0.488473,	0.488301,	0.488134,	0.487971,	0.487811,	0.487655,	0.487503,	0.487355,	0.48721,	0.487069,	0.486932,	0.486798,	0.486667,	0.48654,	0.486416,	0.486296,	0.486179,	0.486065,	0.485955,	0.485847,	0.485743,	0.485642,	0.485544,	0.485449,	0.485357,	0.485268,	0.485182,	0.485099,	0.485018,	0.484941,	0.484866,	0.484794,	0.484725,	0.484658,	0.484594,	0.484533,	0.484474,	0.484418,	0.484364,	0.484313,	0.484264,	0.484218,	0.484175,	0.484133,	0.484094,	0.484058,	0.484024,	0.483992,	0.483962,	0.483935,	0.48391,	0.483888,	0.483867,	0.483849,	0.483833,	0.483819,	0.483808,	0.483799,	0.483791,	0.483786,	0.483783,	0.483783,	0.483784,	0.483788,	0.483793,	0.483801,	0.483811,	0.483823,	0.483837,	0.483854,	0.483872,	0.483892,	0.483915,	0.48394,	0.483967,	0.483995,	0.484026,	0.48406,	0.484095,	0.484132,	0.484172,	0.484213,	0.484257,	0.484303,	0.484351,	0.484401,	0.484454,	0.484508,	0.484565,	0.484624,	0.484685,	0.484749,	0.484814,	0.484882,	0.484952,	0.485024,	0.485099,	0.485176,	0.485255,	0.485336,	0.48542,	0.485506,	0.485595,	0.485686,	0.485779,	0.485874,	0.485972,	0.486073,	0.486175,	0.486281,	0.486388,	0.486498,	0.486611,	0.486726,	0.486844,	0.486964,	0.487086,	0.487212,	0.487339,	0.48747,	0.487603,	0.487738,	0.487876,	0.488017,	0.48816,	0.488306,	0.488455,	0.488606,	0.48876,	0.488917,	0.489077,	0.489239,	0.489404,	0.489571,	0.489741,	0.489915,	0.49009,	0.490269,	0.49045,	0.490635,	0.490822,	0.491011,	0.491204,	0.491399,	0.491598,	0.491799,	0.492003,	0.492209,	0.492419,	0.492631,	0.492847,	0.493065,	0.493286,	0.493509,	0.493736,	0.493965,	0.494198,	0.494433,	0.494671,	0.494912,	0.495155,	0.495402,	0.495651,	0.495903,	0.496158,	0.496416,	0.496676,	0.49694,	0.497206,	0.497475,	0.497746,	0.498021,	0.498298,	0.498578,	0.498861,	0.499146,	0.499434,	0.499725,	0.500018,	0.500314,	0.500613,	0.500914,	0.501218,	0.501525,	0.501834,	0.502146,	0.50246,	0.502777,	0.503096,	0.503418,	0.503742,	0.504068,	0.504397,	0.504729,	0.505062,	0.505398,	0.505737,	0.506077,	0.50642,	0.506766,	0.507113,	0.507462,	0.507814,	0.508168,	0.508524,	0.508882,	0.509241,	0.509603,	0.509967,	0.510333,	0.510701,	0.51107,	0.511442,	0.511815,	0.51219,	0.512567,	0.512945,	0.513325,	0.513707,	0.51409,	0.514475,	0.514861,	0.515248,	0.515638,	0.516028,	0.51642,	0.516813,	0.517208,	0.517603,	0.518,	0.518398,	0.518797,	0.519197,	0.519598,	0.520001,	0.520404,	0.520808,	0.521212,	0.521618,	0.522024,	0.522431,	0.522839,	0.523248,	0.523656,	0.524066,	0.524476,	0.524886,	0.525297,	0.525708,	0.52612,	0.526532,	0.526944,	0.527356,	0.527768,	0.528181,	0.528593,	0.529005,	0.529418,	0.52983,	0.530242,	0.530654,	0.531065,	0.531477,	0.531888,	0.532298,	0.532709,	0.533118,	0.533527,	0.533936,	0.534344,	0.534751,	0.535158,	0.535564,	0.535969,	0.536373,	0.536777,	0.537179,	0.53758,	0.537981,	0.53838,	0.538778,	0.539175,	0.539571,	0.539966,	0.540359,	0.540751,	0.541141,	0.54153,	0.541918,	0.542304,	0.542688,	0.543071,	0.543453,	0.543832,	0.54421,	0.544586,	0.54496,	0.545332,	0.545703,	0.546071,	0.546438,	0.546802,	0.547165,	0.547525,	0.547883,	0.548239,	0.548593,	0.548944,	0.549294,	0.549641,	0.549985,	0.550327,	0.550667,	0.551004,	0.551338,	0.55167,	0.552,	0.552327,	0.552651,	0.552972,	0.553291,	0.553607,	0.55392,	0.55423,	0.554538,	0.554842,	0.555144,	0.555443,	0.555738,	0.556031,	0.55632,	0.556607,	0.55689,	0.557171,	0.557448,	0.557722,	0.557992,	0.55826,	0.558524,	0.558785,	0.559042,	0.559297,	0.559548,	0.559795,	0.560039,	0.56028,	0.560517,	0.56075,	0.560981,	0.561207,	0.56143,	0.56165,	0.561866,	0.562078,	0.562287,	0.562492,	0.562693,	0.562891,	0.563085,	0.563275,	0.563462,	0.563644,	0.563823,	0.563999,	0.56417,	0.564338,	0.564502,	0.564662,	0.564818,	0.564971,	0.565119,	0.565264,	0.565405,	0.565541,	0.565675,	0.565804,	0.565929,	0.56605,	0.566167,	0.566281,	0.56639,	0.566496,	0.566598,	0.566695,	0.566789,	0.566879,	0.566964,	0.567046,	0.567124,	0.567198,	0.567268,	0.567334,	0.567396,	0.567454,	0.567508,	0.567558,	0.567604,	0.567646,	0.567684,	0.567718,	0.567749,	0.567775,	0.567797,	0.567816,	0.56783,	0.567841,	0.567847,	0.56785,	0.567849,	0.567843,	0.567834,	0.567821,	0.567805,	0.567784,	0.567759,	0.567731,	0.567699,	0.567662,	0.567623,	0.567579,	0.567531,	0.56748,	0.567425,	0.567366,	0.567303,	0.567237,	0.567167,	0.567093,	0.567016,	0.566935,	0.56685,	0.566761,	0.566669,	0.566574,	0.566474,	0.566372,	0.566265,	0.566155,	0.566042,	0.565925,	0.565804,	0.56568,	0.565553,	0.565422,	0.565288,	0.56515,	0.565009,	0.564865,	0.564718,	0.564567,	0.564412,	0.564255,	0.564094,	0.56393,	0.563763,	0.563593,	0.56342,	0.563243,	0.563064,	0.562881,	0.562695,	0.562506,	0.562315,	0.56212,	0.561922,	0.561722,	0.561518,	0.561312,	0.561103,	0.560891,	0.560676,	0.560459,	0.560239,	0.560016,	0.55979,	0.559562,	0.559331,	0.559097,	0.558861,	0.558623,	0.558382,	0.558138,	0.557892,	0.557644,	0.557393,	0.55714,	0.556885,	0.556627,	0.556367,	0.556105,	0.55584,	0.555574,	0.555305,	0.555034,	0.554761,	0.554486,	0.554209,	0.55393,	0.553649,	0.553366,	0.553081,	0.552794,	0.552505,	0.552215,	0.551923,	0.551629,	0.551333,	0.551036,	0.550737,	0.550437,	0.550134,	0.549831,	0.549525,	0.549219,	0.548911,	0.548601,	0.54829,	0.547977,	0.547664,	0.547349,	0.547032,	0.546715,	0.546396,	0.546076,	0.545755,	0.545433,	0.54511,	0.544786,	0.54446,	0.544134,	0.543807,	0.543478,	0.543149,	0.542819,	0.542489,	0.542157,	0.541825,	0.541492,	0.541158,	0.540824,	0.540488,	0.540153,	0.539816,	0.53948,	0.539142,	0.538804,	0.538466,	0.538127,	0.537788,	0.537449,	0.537109,	0.536769,	0.536428,	0.536087,	0.535746,	0.535405,	0.535064,	0.534722,	0.534381,	0.534039,	0.533698,	0.533356,	0.533014,	0.532672,	0.532331,	0.531989,	0.531648,	0.531306,	0.530965,	0.530624,	0.530283,	0.529943,	0.529603,	0.529263,	0.528923,	0.528584,	0.528245,	0.527906,	0.527568,	0.527231,	0.526894,	0.526557,	0.526221,	0.525885,	0.52555,	0.525216,	0.524882,	0.524549,	0.524216,	0.523884,	0.523553,	0.523223,	0.522893,	0.522564,	0.522236,	0.521909,	0.521582,	0.521257,	0.520932,	0.520608,	0.520285,	0.519963,	0.519642,	0.519322,	0.519003,	0.518685,	0.518368,	0.518052,	0.517737,	0.517423,	0.51711,	0.516799,	0.516488,	0.516179,	0.515871,	0.515564,	0.515258,	0.514953,	0.51465,	0.514348,	0.514047,	0.513747,	0.513449,	0.513152,	0.512856,	0.512562,	0.512269,	0.511977,	0.511687,	0.511398,	0.511111,	0.510825,	0.51054,	0.510257,	0.509975,	0.509695,	0.509416,	0.509138,	0.508863,	0.508588,	0.508315,	0.508044,	0.507774,	0.507505,	0.507239,	0.506973,	0.50671,	0.506447,	0.506187,	0.505928,	0.50567,	0.505415,	0.50516,	0.504908,	0.504657,	0.504407,	0.504159,	0.503913,	0.503669,	0.503426,	0.503184,	0.502945,	0.502707,	0.50247,	0.502236,	0.502003,	0.501771,	0.501542,	0.501314,	0.501087,	0.500863,	0.50064,	0.500418,	0.500199,	0.499981,	0.499765,	0.49955,	0.499337,	0.499126,	0.498916,	0.498708,	0.498502,	0.498298,	0.498095,	0.497894,	0.497694,	0.497497,	0.4973,	0.497106,	0.496913,	0.496722,	0.496533,	0.496345,	0.496159,	0.495975,	0.495792,	0.495611,	0.495432,	0.495254,	0.495078,	0.494903,	0.494731,	0.494559,	0.49439,	0.494222,	0.494056,	0.493891,	0.493728,	0.493567,	0.493407,	0.493249,	0.493092,	0.492937,	0.492784,	0.492632,	0.492482,	0.492333,	0.492186,	0.492041,	0.491897,	0.491754,	0.491613,	0.491474,	0.491336,	0.4912,	0.491065,	0.490932,	0.4908,	0.49067,	0.490541,	0.490414,	0.490288,	0.490164,	0.490041,	0.48992,	0.4898,	0.489681,	0.489564,	0.489449,	0.489334,	0.489222,	0.48911,	0.489,	0.488892,	0.488785,	0.488679,	0.488574,	0.488471,	0.488369,	0.488269,	0.48817,	0.488072,	0.487976,	0.487881,	0.487787,	0.487695,	0.487603,	0.487513,	0.487425,	0.487337,	0.487251,	0.487166,	0.487083,	0.487,	0.486919,	0.486839,	0.486761,	0.486683,	0.486607,	0.486532,	0.486458,	0.486385,	0.486313,	0.486243,	0.486174,	0.486106,	0.486039,	0.485973,	0.485908,	0.485844,	0.485782,	0.48572,	0.48566,	0.485601,	0.485543,	0.485485,	0.485429,	0.485374,	0.485321,	0.485268,	0.485216,	0.485165,	0.485115,	0.485067,	0.485019,	0.484972,	0.484926,	0.484882,	0.484838,	0.484795,	0.484753,	0.484712,	0.484673,	0.484634,	0.484596,	0.484559,	0.484523,	0.484488,	0.484454,	0.48442,	0.484388,	0.484357,	0.484326,	0.484297,	0.484268,	0.48424,	0.484213,	0.484187,	0.484162,	0.484138,	0.484115,	0.484092,	0.484071,	0.48405,	0.48403,	0.484011,	0.483993,	0.483976,	0.483959,	0.483944,	0.483929,	0.483915,	0.483902,	0.48389,	0.483878,	0.483868,	0.483858,	0.483849,	0.483841,	0.483834,	0.483828,	0.483822,	0.483817,	0.483814,	0.48381,	0.483808,	0.483807,	0.483806,	0.483806,	0.483807,	0.483809,	0.483812,	0.483815,	0.483819,	0.483824,	0.48383,	0.483837,	0.483844,	0.483852,	0.483861,	0.483871,	0.483882,	0.483894,	0.483906,	0.483919,	0.483933,	0.483948,	0.483963,	0.48398,	0.483997,	0.484015,	0.484034,	0.484054,	0.484074,	0.484096,	0.484118,	0.484141,	0.484165,	0.48419,	0.484215,	0.484241,	0.484269,	0.484297,	0.484326,	0.484355,	0.484386,	0.484418,	0.48445,	0.484483,	0.484517,	0.484552,	0.484588,	0.484625,	0.484662,	0.4847,	0.48474,	0.48478,	0.484821,	0.484863,	0.484906,	0.48495,	0.484994,	0.48504,	0.485087,	0.485134,	0.485182,	0.485232,	0.485282,	0.485333,	0.485385,	0.485438,	0.485492,	0.485547,	0.485603,	0.48566,	0.485718,	0.485776,	0.485836,	0.485897,	0.485959,	0.486021,	0.486085,	0.48615,	0.486215,	0.486282,	0.48635,	0.486418,	0.486488,	0.486559,	0.48663,	0.486703,	0.486777,	0.486852,	0.486928,	0.487005,	0.487083,	0.487162,	0.487242,	0.487323,	0.487406,	0.487489,	0.487573,	0.487659,	0.487746,	0.487833,	0.487922,	0.488012,	0.488103,	0.488195,	0.488288,	0.488383,	0.488478,	0.488575,	0.488673,	0.488772,	0.488872,	0.488973,	0.489075,	0.489179,	0.489284,	0.48939,	0.489497,	0.489605,	0.489714,	0.489825,	0.489936,	0.490049,	0.490163,	0.490279,	0.490395,	0.490513,	0.490632,	0.490752,	0.490873,	0.490996,	0.49112,	0.491245,	0.491371,	0.491499,	0.491627,	0.491757,	0.491888,	0.492021,	0.492154,	0.492289,	0.492425,	0.492563,	0.492701,	0.492841,	0.492982,	0.493125,	0.493268,	0.493413,	0.493559,	0.493707,	0.493856,	0.494006,	0.494157,	0.494309,	0.494463,	0.494618,	0.494775,	0.494932,	0.495091,	0.495251,	0.495413,	0.495575,	0.495739,	0.495904,	0.496071,	0.496239,	0.496408,	0.496578,	0.49675,	0.496923,	0.497097,	0.497272,	0.497449,	0.497627,	0.497806,	0.497987,	0.498169,	0.498352,	0.498536,	0.498722,	0.498909,	0.499097,	0.499286,	0.499477,	0.499669,	0.499862,	0.500056,	0.500252,	0.500449,	0.500647,	0.500846,	0.501047,	0.501249,	0.501452,	0.501656,	0.501861,	0.502068,	0.502276,	0.502485,	0.502696,	0.502907,	0.50312,	0.503334,	0.503549,	0.503765,	0.503983,	0.504201,	0.504421,	0.504642,	0.504864,	0.505088,	0.505312,	0.505538,	0.505764,	0.505992,	0.506221,	0.506451,	0.506683,	0.506915,	0.507148,	0.507383,	0.507618,	0.507855,	0.508093,	0.508332,	0.508571,	0.508812,	0.509054,	0.509297,	0.509541,	0.509786,	0.510032,	0.510279,	0.510528,	0.510777,	0.511027,	0.511278,	0.511529,	0.511782,	0.512036,	0.512291,	0.512547,	0.512803,	0.513061,	0.513319,	0.513578,	0.513839,	0.5141,	0.514361,	0.514624,	0.514888,	0.515152,	0.515417,	0.515683,	0.51595,	0.516218,	0.516486,	0.516755,	0.517025,	0.517296,	0.517567,	0.517839,	0.518112,	0.518385,	0.51866,	0.518934,	0.51921,	0.519486,	0.519763,	0.52004,	0.520318,	0.520597,	0.520876,	0.521156,	0.521436,	0.521717,	0.521999,	0.522281,	0.522563,	0.522846,	0.52313,	0.523414,	0.523698,	0.523983,	0.524268,	0.524554,	0.52484,	0.525127,	0.525414,	0.525701,	0.525989,	0.526277,	0.526565,	0.526854,	0.527143,	0.527432,	0.527721,	0.528011,	0.528301,	0.528592,	0.528882,	0.529173,	0.529464,	0.529755,	0.530046,	0.530337,	0.530629,	0.53092,	0.531212,	0.531504,	0.531796,	0.532088,	0.53238,	0.532672,	0.532964,	0.533256,	0.533548,	0.53384,	0.534132,	0.534423,	0.534715,	0.535007,	0.535299,	0.53559,	0.535881,	0.536173,	0.536464,	0.536755,	0.537045,	0.537336,	0.537626,	0.537916,	0.538206,	0.538495,	0.538785,	0.539074,	0.539362,	0.53965,	0.539938,	0.540226,	0.540513,	0.5408,	0.541086,	0.541372,	0.541658,	0.541943,	0.542228,	0.542512,	0.542795,	0.543078,	0.543361,	0.543643,	0.543925,	0.544206,	0.544486,	0.544766,	0.545045,	0.545323,	0.545601,	0.545878,	0.546155,	0.546431,	0.546706,	0.54698,	0.547254,	0.547527,	0.547799,	0.54807,	0.548341,	0.548611,	0.54888,	0.549148,	0.549415,	0.549681,	0.549947,	0.550212,	0.550475,	0.550738,	0.551,	0.551261,	0.551521,	0.55178,	0.552037,	0.552294,	0.55255,	0.552805,	0.553059,	0.553312,	0.553563,	0.553814,	0.554063,	0.554312,	0.554559,	0.554805,	0.55505,	0.555293,	0.555536,	0.555777,	0.556017,	0.556256,	0.556494,	0.55673,	0.556965,	0.557199,	0.557431,	0.557662,	0.557892,	0.558121,	0.558348,	0.558574,	0.558798,	0.559021,	0.559243,	0.559463,	0.559682,	0.5599,	0.560116,	0.56033,	0.560543,	0.560755,	0.560965,	0.561173,	0.56138,	0.561586,	0.56179,	0.561992,	0.562193,	0.562393,	0.56259,	0.562787,	0.562981,	0.563174,	0.563365,	0.563555,	0.563743,	0.563929,	0.564114,	0.564297,	0.564478,	0.564658,	0.564836,	0.565012,	0.565187,	0.565359,	0.56553,	0.5657,	0.565867,	0.566033,	0.566197,	0.566359,	0.566519,	0.566678,	0.566835,	0.566989,	0.567142,	0.567294,	0.567443,	0.567591,	0.567736,	0.56788,	0.568022,	0.568162,	0.5683,	0.568436,	0.56857,	0.568703,	0.568833,	0.568962,	0.569088,	0.569213,	0.569335,	0.569456,	0.569575,	0.569691,	0.569806,	0.569919,	0.57003,	0.570138,	0.570245,	0.57035,	0.570453,	0.570553,	0.570652,	0.570748,	0.570843,	0.570936,	0.571026,	0.571115,	0.571201,	0.571285,	0.571367,	0.571448,	0.571526,	0.571602,	0.571676,	0.571747,	0.571817,	0.571885,	0.57195,	0.572014,	0.572075,	0.572134,	0.572192,	0.572246,	0.572299,	0.57235,	0.572399,	0.572445,	0.57249,	0.572532,	0.572572,	0.57261,	0.572646,	0.572679,	0.572711,	0.57274,	0.572768,	0.572793,	0.572816,	0.572836,	0.572855,	0.572871,	0.572886,	0.572898,	0.572908,	0.572916,	0.572922,	0.572925,	0.572927,	0.572926,	0.572923,	0.572918,	0.572911,	0.572901,	0.57289,	0.572876,	0.57286,	0.572843,	0.572822,	0.5728,	0.572776,	0.572749,	0.572721,	0.57269,	0.572657,	0.572622,	0.572584,	0.572545,	0.572504,	0.57246,	0.572414,	0.572366,	0.572316,	0.572264,	0.57221,	0.572154,	0.572095,	0.572034,	0.571972,	0.571907,	0.57184,	0.571771,	0.5717,	0.571627,	0.571552,	0.571475,	0.571395,	0.571314,	0.57123,	0.571145,	0.571057,	0.570968,	0.570876,	0.570782,	0.570686,	0.570589,	0.570489,	0.570387,	0.570283,	0.570177,	0.57007,	0.56996,	0.569848,	0.569734,	0.569618,	0.569501,	0.569381,	0.569259,	0.569136,	0.56901,	0.568883,	0.568753,	0.568622,	0.568489,	0.568353,	0.568216,	0.568077,	0.567937,	0.567794,	0.567649,	0.567503,	0.567355,	0.567204,	0.567052,	0.566899,	0.566743,	0.566586,	0.566426,	0.566265,	0.566102,	0.565938,	0.565772,	0.565603,	0.565434,	0.565262,	0.565089,	0.564913,	0.564737,	0.564558,	0.564378,	0.564196,	0.564013,	0.563827,	0.563641,	0.563452,	0.563262,	0.56307,	0.562877,	0.562682,	0.562485,	0.562287,	0.562087,	0.561886,	0.561683,	0.561479,	0.561273,	0.561065,	0.560856,	0.560646,	0.560434,	0.560221,	0.560006,	0.559789,	0.559572,	0.559353,	0.559132,	0.55891,	0.558687,	0.558462,	0.558236,	0.558008,	0.557779,	0.557549,	0.557318,	0.557085,	0.556851,	0.556615,	0.556379,	0.556141,	0.555902,	0.555661,	0.55542,	0.555177,	0.554933,	0.554687,	0.554441,	0.554193,	0.553945,	0.553695,	0.553444,	0.553192,	0.552939,	0.552685,	0.552429,	0.552173,	0.551916,	0.551657,	0.551398,	0.551137,	0.550876,	0.550614,	0.55035,	0.550086,	0.549821,	0.549555,	0.549288,	0.54902,	0.548751,	0.548481,	0.548211,	0.547939,	0.547667,	0.547394,	0.547121,	0.546846,	0.546571,	0.546295,	0.546018,	0.54574,	0.545462,	0.545183,	0.544904,	0.544623,	0.544342,	0.544061,	0.543779,	0.543496,	0.543212,	0.542928,	0.542644,	0.542359,	0.542073,	0.541787,	0.5415,	0.541213,	0.540925,	0.540637,	0.540349,	0.54006,	0.53977,	0.53948,	0.53919,	0.5389,	0.538609,	0.538317,	0.538026,	0.537734,	0.537441,	0.537149,	0.536856,	0.536563,	0.536269,	0.535976,	0.535682,	0.535388,	0.535093,	0.534799,	0.534504,	0.53421,	0.533915,	0.53362,	0.533324,	0.533029,	0.532734,	0.532438,	0.532143,	0.531848,	0.531552,	0.531256,	0.530961,	0.530665,	0.53037,	0.530075,	0.529779,	0.529484,	0.529189,	0.528893,	0.528598,	0.528304,	0.528009,	0.527714,	0.52742,	0.527125,	0.526831,	0.526538,	0.526244,	0.52595,	0.525657,	0.525364,	0.525072,	0.524779,	0.524487,	0.524196,	0.523904,	0.523613,	0.523322,	0.523032,	0.522742,	0.522452,	0.522163,	0.521874,	0.521586,	0.521298,	0.521011,	0.520724,	0.520437,	0.520151,	0.519865,	0.51958,	0.519296,	0.519012,	0.518728,	0.518445,	0.518163,	0.517881,	0.5176,	0.51732,	0.51704,	0.51676,	0.516482,	0.516204,	0.515926,	0.51565,	0.515374,	0.515098,	0.514824,	0.51455,	0.514276,	0.514004,	0.513732,	0.513461,	0.513191,	0.512922,	0.512653,	0.512385,	0.512118,	0.511852,	0.511587,	0.511322,	0.511058,	0.510796,	0.510534,	0.510272,	0.510012,	0.509753,	0.509494,	0.509237,	0.50898,	0.508724,	0.50847,	0.508216,	0.507963,	0.507711,	0.50746,	0.50721,	0.506961,	0.506713,	0.506466,	0.50622,	0.505975,	0.505731,	0.505488,	0.505246,	0.505005,	0.504765,	0.504527,	0.504289,	0.504052,	0.503817,	0.503582,	0.503349,	0.503116,	0.502885,	0.502655,	0.502426,	0.502198,	0.501971,	0.501746,	0.501521,	0.501298,	0.501076,	0.500855,	0.500635,	0.500416,	0.500199,	0.499982,	0.499767,	0.499553,	0.49934,	0.499128,	0.498918,	0.498708,	0.4985,	0.498293,	0.498088,	0.497883,	0.49768,	0.497478,	0.497277,	0.497077,	0.496879,	0.496682,	0.496486,	0.496291,	0.496098,	0.495906,	0.495715,	0.495525,	0.495336,	0.495149,	0.494963,	0.494778,	0.494595,	0.494413,	0.494232,	0.494052,	0.493873,	0.493696,	0.49352,	0.493345,	0.493172,	0.493,	0.492829,	0.492659,	0.492491,	0.492323,	0.492158,	0.491993,	0.49183,	0.491667,	0.491507,	0.491347,	0.491189,	0.491032,	0.490876,	0.490721,	0.490568,	0.490416,	0.490265,	0.490115,	0.489967,	0.48982,	0.489674,	0.48953,	0.489386,	0.489244,	0.489103,	0.488964,	0.488825,	0.488688,	0.488552,	0.488418,	0.488284,	0.488152,	0.488021,	0.487891,	0.487763,	0.487635,	0.487509,	0.487384,	0.48726,	0.487138,	0.487016,	0.486896,	0.486777,	0.486659,	0.486543,	0.486427,	0.486313,	0.4862,	0.486088,	0.485977,	0.485867,	0.485759,	0.485651,	0.485545,	0.48544,	0.485336,	0.485233,	0.485131,	0.485031,	0.484931,	0.484833,	0.484735,	0.484639,	0.484544,	0.48445,	0.484357,	0.484265,	0.484174,	0.484085,	0.483996,	0.483908,	0.483822,	0.483736,	0.483652,	0.483568,	0.483486,	0.483404,	0.483324,	0.483244,	0.483166,	0.483089,	0.483012,	0.482937,	0.482862,	0.482789,	0.482716,	0.482644,	0.482574,	0.482504,	0.482435,	0.482368,	0.482301,	0.482235,	0.48217,	0.482105,	0.482042,	0.48198,	0.481918,	0.481858,	0.481798,	0.481739,	0.481681,	0.481624,	0.481568,	0.481512,	0.481458,	0.481404,	0.481351,	0.481299,	0.481248,	0.481197,	0.481148,	0.481099,	0.48105,	0.481003,	0.480957,	0.480911,	0.480866,	0.480822,	0.480778,	0.480735,	0.480693,	0.480652,	0.480611,	0.480571,	0.480532,	0.480494,	0.480456,	0.480419,	0.480383,	0.480347,	0.480312,	0.480278,	0.480244,	0.480211,	0.480179,	0.480147,	0.480116,	0.480086,	0.480056,	0.480027,	0.479999,	0.479971,	0.479944,	0.479917,	0.479891,	0.479866,	0.479841,	0.479817,	0.479793,	0.47977,	0.479747,	0.479726,	0.479704,	0.479684,	0.479663,	0.479644,	0.479625,	0.479606,	0.479588,	0.479571,	0.479554,	0.479538,	0.479522,	0.479507,	0.479492,	0.479478,	0.479464,	0.479451,	0.479439,	0.479427,	0.479415,	0.479404,	0.479394,	0.479384,	0.479374,	0.479365,	0.479357,	0.479349,	0.479341,	0.479334,	0.479328,	0.479322,	0.479317,	0.479312,	0.479307,	0.479303,	0.4793,	0.479297,	0.479295,	0.479293,	0.479292,	0.479291,	0.47929,	0.47929,	0.479291,	0.479292,	0.479294,	0.479296,	0.479299,	0.479302,	0.479306,	0.47931,	0.479315,	0.479321,	0.479326,	0.479333,	0.47934,	0.479347,	0.479355,	0.479364,	0.479373,	0.479383,	0.479393,	0.479404,	0.479416,	0.479428,	0.47944,	0.479454,	0.479467,	0.479482,	0.479497,	0.479513,	0.479529,	0.479546,	0.479563,	0.479582,	0.4796,	0.47962,	0.47964,	0.479661,	0.479682,	0.479705,	0.479728,	0.479751,	0.479775,	0.479801,	0.479826,	0.479853,	0.47988,	0.479908,	0.479937,	0.479967,	0.479997,	0.480028,	0.48006,	0.480093,	0.480127,	0.480162,	0.480197,	0.480233,	0.480271,	0.480309,	0.480348,	0.480388,	0.480429,	0.480471,	0.480513,	0.480557,	0.480602,	0.480648,	0.480695,	0.480743,	0.480791,	0.480841,	0.480893,	0.480945,	0.480998,	0.481053,	0.481108,	0.481165,	0.481223,	0.481282,	0.481343,	0.481404,	0.481467,	0.481531,	0.481597,	0.481663,	0.481732,	0.481801,	0.481872,	0.481944,	0.482018,	0.482093,	0.482169,	0.482247,	0.482327,	0.482407,	0.48249,	0.482574,	0.48266,	0.482747,	0.482836,	0.482926,	0.483018,	0.483112,	0.483207,	0.483305,	0.483404,	0.483504,	0.483607,	0.483711,	0.483817,	0.483925,	0.484035,	0.484147,	0.484261,	0.484377,	0.484495,	0.484614,	0.484736,	0.48486,	0.484986,	0.485114,	0.485244,	0.485377,	0.485512,	0.485648,	0.485788,	0.485929,	0.486073,	0.486219,	0.486367,	0.486518,	0.486671,	0.486827,	0.486985,	0.487146,	0.487309,	0.487475,	0.487643,	0.487814,	0.487988,	0.488164,	0.488343,	0.488525,	0.48871,	0.488897,	0.489087,	0.489281,	0.489477,	0.489675,	0.489877,	0.490082,	0.49029,	0.490501,	0.490715,	0.490932,	0.491153,	0.491376,	0.491603,	0.491833,	0.492066,	0.492303,	0.492543,	0.492786,	0.493033,	0.493283,	0.493537,	0.493794,	0.494055,	0.494319,	0.494587,	0.494859,	0.495134,	0.495413,	0.495696,	0.495982,	0.496273,	0.496567,	0.496865,	0.497167,	0.497473,	0.497783,	0.498097,	0.498415,	0.498738,	0.499064,	0.499395,	0.499729,	0.500068,	0.500412,	0.500759,	0.501111,	0.501468,	0.501828,	0.502194,	0.502563,	0.502938,	0.503317,	0.5037,	0.504088,	0.504481,	0.504878,	0.505281,	0.505688,	0.5061,	0.506516,	0.506938,	0.507364,	0.507796,	0.508232,	0.508674,	0.509121,	0.509572,	0.510029,	0.510491,	0.510959,	0.511431,	0.511909,	0.512392,	0.512881,	0.513375,	0.513874,	0.514379,	0.514889,	0.515405,	0.515927,	0.516454,	0.516987,	0.517525,	0.518069,	0.518619,	0.519175,	0.519737,	0.520304,	0.520878,	0.521457,	0.522042,	0.522633,	0.523231,	0.523834,	0.524444,	0.525059,	0.525681,	0.526309,	0.526943,	0.527584,	0.528231,	0.528884,	0.529544,	0.53021,	0.530882,	0.531561,	0.532247,	0.532939,	0.533638,	0.534343,	0.535055,	0.535773,	0.536499,	0.537231,	0.53797,	0.538715,	0.539468,	0.540227,	0.540994,	0.541767,	0.542547,	0.543334,	0.544128,	0.54493,	0.545738,	0.546554,	0.547376,	0.548206,	0.549043,	0.549888,	0.550739,	0.551598,	0.552464,	0.553338,	0.554219,	0.555107,	0.556003,	0.556906,	0.557817,	0.558735,	0.559661,	0.560594,	0.561535,	0.562484,	0.56344,	0.564404,	0.565376,	0.566355,	0.567342,	0.568337,	0.56934,	0.57035,	0.571369,	0.572395,	0.573429,	0.574471,	0.575521,	0.576579,	0.577645,	0.578719,	0.579801,	0.58089,	0.581988,	0.583095,	0.584209,	0.585331,	0.586461,	0.5876,	0.588747,	0.589902,	0.591065,	0.592236,	0.593416,	0.594604,	0.5958,	0.597004,	0.598217,	0.599438,	0.600668,	0.601906,	0.603152,	0.604406,	0.605669,	0.60694,	0.60822,	0.609508,	0.610805,	0.61211,	0.613424,	0.614746,	0.616076,	0.617415,	0.618763,	0.620119,	0.621483,	0.622856,	0.624238,	0.625628,	0.627027,	0.628434,	0.62985,	0.631274,	0.632707,	0.634148,	0.635598,	0.637057,	0.638524,	0.64,	0.641485,	0.642978,	0.644479,	0.64599,	0.647509,	0.649036,	0.650572,	0.652117,	0.65367,	0.655232,	0.656802,	0.658381,	0.659969,	0.661565,	0.66317,	0.664784,	0.666405,	0.668036,	0.669675,	0.671323,	0.672979,	0.674644,	0.676317,	0.677999,	0.679689,	0.681388,	0.683096,	0.684811,	0.686536,	0.688269,	0.69001,	0.69176,	0.693518,	0.695284,	0.697059,	0.698843,	0.700635,	0.702435,	0.704243,	0.70606,	0.707885,	0.709719,	0.711561,	0.713411,	0.715269,	0.717136,	0.71901,	0.720893,	0.722785,	0.724684,	0.726591,	0.728507,	0.730431,	0.732362,	0.734302,	0.73625,	0.738206,	0.74017,	0.742141,	0.744121,	0.746108,	0.748104,	0.750107,	0.752118,	0.754137,	0.756164,	0.758198,	0.76024,	0.76229,	0.764348,	0.766413,	0.768485,	0.770566,	0.772653,	0.774748,	0.776851,	0.778961,	0.781079,	0.783203,	0.785336,	0.787475,	0.789622,	0.791776,	0.793937,	0.796105,	0.79828,	0.800462,	0.802652,	0.804848,	0.807051,	0.809262,	0.811479,	0.813703,	0.815933,	0.818171,	0.820415,	0.822665,	0.824923,	0.827187,	0.829457,	0.831734,	0.834017,	0.836307,	0.838603,	0.840905,	0.843214,	0.845529,	0.84785,	0.850177,	0.85251,	0.854849,	0.857194,	0.859545,	0.861901,	0.864264,	0.866632,	0.869006,	0.871386,	0.873771,	0.876162,	0.878558,	0.88096,	0.883367,	0.885779,	0.888197,	0.890619,	0.893047,	0.89548,	0.897918,	0.900361,	0.902809,	0.905262,	0.90772,	0.910182,	0.912649,	0.915121,	0.917597,	0.920078,	0.922563,	0.925053,	0.927547,	0.930045,	0.932547,	0.935054,	0.937564,	0.940079,	0.942597,	0.94512,	0.947646,	0.950176,	0.95271,	0.955247,	0.957788,	0.960332,	0.96288,	0.965431,	0.967985,	0.970543,	0.973104,	0.975667,	0.978234,	0.980804,	0.983377,	0.985952,	0.98853,	0.991111,	0.993695,	0.996281,	0.998869,	1.00146,	1.00405,	1.00665,	1.00925,	1.01185,	1.01445,	1.01705,	1.01966,	1.02226,	1.02487,	1.02748,	1.0301,	1.03271,	1.03532,	1.03794,	1.04056,	1.04318,	1.0458,	1.04842,	1.05104,	1.05366,	1.05629,	1.05891,	1.06154,	1.06416,	1.06679,	1.06942,	1.07205,	1.07467,	1.0773,	1.07993,	1.08256,	1.08518,	1.08781,	1.09044,	1.09307,	1.0957,	1.09832,	1.10095,	1.10357,	1.1062,	1.10882,	1.11145,	1.11407,	1.11669,	1.11931,	1.12193,	1.12455,	1.12717,	1.12978,	1.1324,	1.13501,	1.13762,	1.14023,	1.14284,	1.14544,	1.14805,	1.15065,	1.15325,	1.15584,	1.15844,	1.16103,	1.16362,	1.16621,	1.1688,	1.17138,	1.17396,	1.17654,	1.17911,	1.18168,	1.18425,	1.18681,	1.18938,	1.19193,	1.19449,	1.19704,	1.19959,	1.20213,	1.20467,	1.20721,	1.20974,	1.21227,	1.2148,	1.21732,	1.21984,	1.22235,	1.22486,	1.22736,	1.22986,	1.23235,	1.23484,	1.23733,	1.23981,	1.24228,	1.24475,	1.24722,	1.24968,	1.25213,	1.25458,	1.25703,	1.25946,	1.2619,	1.26432,	1.26675,	1.26916,	1.27157,	1.27397,	1.27637,	1.27876,	1.28115,	1.28353,	1.2859,	1.28827,	1.29063,	1.29298,	1.29533,	1.29767,	1.3,	1.30233,	1.30465,	1.30696,	1.30927,	1.31156,	1.31385,	1.31614,	1.31841,	1.32068,	1.32294,	1.3252,	1.32744,	1.32968,	1.33191,	1.33413,	1.33635,	1.33855,	1.34075,	1.34294,	1.34512,	1.34729,	1.34946,	1.35161,	1.35376,	1.3559,	1.35803,	1.36015,	1.36226,	1.36437,	1.36646,	1.36855,	1.37062,	1.37269,	1.37475,	1.3768,	1.37884,	1.38087,	1.38289,	1.3849,	1.3869,	1.38889,	1.39087,	1.39284,	1.3948,	1.39676,	1.3987,	1.40063,	1.40255,	1.40446,	1.40636,	1.40825,	1.41013,	1.412,	1.41386,	1.41571,	1.41755,	1.41937,	1.42119,	1.42299,	1.42479,	1.42657,	1.42835,	1.43011,	1.43186,	1.4336,	1.43532,	1.43704,	1.43875,	1.44044,	1.44212,	1.44379,	1.44545,	1.4471,	1.44874,	1.45036,	1.45197,	1.45357,	1.45516,	1.45674,	1.45831,	1.45986,	1.4614,	1.46293,	1.46444,	1.46595,	1.46744,	1.46892,	1.47039,	1.47184,	1.47329,	1.47472,	1.47614,	1.47754,	1.47893,	1.48031,	1.48168,	1.48303,	1.48438,	1.48571,	1.48702,	1.48832,	1.48962,	1.49089,	1.49216,	1.49341,	1.49465,	1.49587,	1.49708,	1.49828,	1.49947,	1.50064,	1.5018,	1.50294,	1.50408,	1.5052,	1.5063,	1.50739,	1.50847,	1.50954,	1.51059,	1.51163,	1.51265,	1.51366,	1.51466,	1.51564,	1.51661,	1.51757,	1.51851,	1.51944,	1.52035,	1.52125,	1.52214,	1.52301,	1.52387,	1.52472,	1.52555,	1.52636,	1.52717,	1.52796,	1.52873,	1.52949,	1.53024,	1.53097,	1.53169,	1.5324,	1.53309,	1.53376,	1.53443,	1.53507,	1.53571,	1.53633,	1.53693,	1.53752,	1.5381,	1.53866,	1.53921,	1.53975,	1.54027,	1.54077,	1.54126,	1.54174,	1.5422,	1.54265,	1.54309,	1.54351,	1.54391,	1.5443,	1.54468,	1.54504,	1.54539,	1.54572,	1.54604,	1.54635,	1.54664,	1.54692,	1.54718,	1.54743,	1.54766,	1.54788,	1.54808,	1.54827,	1.54845,	1.54861,	1.54876,	1.54889,	1.54901,	1.54911,	1.5492,	1.54928,	1.54934,	1.54939,	1.54942,	1.54944,	1.54944,	1.54943,	1.54941,	1.54937,	1.54932,	1.54925,	1.54917,	1.54908,	1.54897,	1.54884,	1.54871,	1.54855,	1.54839,	1.54821,	1.54801,	1.54781,	1.54758,	1.54735,	1.5471,	1.54683,	1.54656,	1.54626,	1.54596,	1.54564,	1.54531,	1.54496,	1.5446,	1.54422,	1.54383,	1.54343,	1.54301,	1.54258,	1.54214,	1.54168,	1.54121,	1.54073,	1.54023,	1.53972,	1.53919,	1.53865,	1.5381,	1.53753,	1.53695,	1.53636,	1.53575,	1.53514,	1.5345,	1.53386,	1.5332,	1.53253,	1.53184,	1.53114,	1.53043,	1.52971,	1.52897,	1.52822,	1.52745,	1.52668,	1.52589,	1.52509,	1.52427,	1.52344,	1.5226,	1.52175,	1.52088,	1.52001,	1.51911,	1.51821,	1.5173,	1.51637,	1.51543,	1.51447,	1.51351,	1.51253,	1.51154,	1.51054,	1.50952,	1.5085,	1.50746,	1.50641,	1.50535,	1.50427,	1.50318,	1.50209,	1.50098,	1.49986,	1.49872,	1.49758,	1.49642,	1.49525,	1.49407,	1.49288,	1.49168,	1.49047,	1.48924,	1.488,	1.48676,	1.4855,	1.48423,	1.48295,	1.48166,	1.48035,	1.47904,	1.47772,	1.47638,	1.47503,	1.47368,	1.47231,	1.47093,	1.46954,	1.46814,	1.46674,	1.46532,	1.46389,	1.46245,	1.461,	1.45953,	1.45806,	1.45658,	1.45509,	1.45359,	1.45208,	1.45056,	1.44903,	1.44749,	1.44594,	1.44438,	1.44282,	1.44124,	1.43965,	1.43805,	1.43645,	1.43483,	1.43321,	1.43158,	1.42993,	1.42828,	1.42662,	1.42495,	1.42328,	1.42159,	1.41989,	1.41819,	1.41648,	1.41476,	1.41303,	1.41129,	1.40954,	1.40779,	1.40603,	1.40426,	1.40248,	1.40069,	1.3989,	1.39709,	1.39528,	1.39347,	1.39164,	1.38981,	1.38797,	1.38612,	1.38426,	1.3824,	1.38053,	1.37865,	1.37677,	1.37488,	1.37298,	1.37107,	1.36916,	1.36724,	1.36531,	1.36338,	1.36144,	1.35949,	1.35754,	1.35558,	1.35361,	1.35164,	1.34966,	1.34768,	1.34569,	1.34369,	1.34169,	1.33968,	1.33766,	1.33564,	1.33362,	1.33158,	1.32955,	1.3275,	1.32545,	1.3234,	1.32134,	1.31928,	1.31721,	1.31513,	1.31305,	1.31096,	1.30887,	1.30678,	1.30468,	1.30257,	1.30046,	1.29835,	1.29623,	1.29411,	1.29198,	1.28985,	1.28771,	1.28557,	1.28342,	1.28128,	1.27912,	1.27697,	1.2748,	1.27264,	1.27047,	1.2683,	1.26612,	1.26394,	1.26176,	1.25957,	1.25738,	1.25519,	1.25299,	1.25079,	1.24859,	1.24638,	1.24417,	1.24196,	1.23974,	1.23753,	1.2353,	1.23308,	1.23085,	1.22862,	1.22639,	1.22416,	1.22192,	1.21968,	1.21744,	1.2152,	1.21295,	1.21071,	1.20846,	1.20621,	1.20395,	1.2017,	1.19944,	1.19718,	1.19492,	1.19266,	1.19039,	1.18813,	1.18586,	1.18359,	1.18133,	1.17906,	1.17678,	1.17451,	1.17224,	1.16996,	1.16769,	1.16541,	1.16313,	1.16085,	1.15857,	1.15629,	1.15401,	1.15173,	1.14945,	1.14717,	1.14489,	1.1426,	1.14032,	1.13804,	1.13576,	1.13347,	1.13119,	1.12891,	1.12662,	1.12434,	1.12206,	1.11977,	1.11749,	1.11521,	1.11293,	1.11065,	1.10837,	1.10609,	1.10381,	1.10153,	1.09925,	1.09697,	1.0947,	1.09242,	1.09015,	1.08787,	1.0856,	1.08333,	1.08106,	1.07879,	1.07652,	1.07426,	1.07199,	1.06973,	1.06747,	1.0652,	1.06295,	1.06069,	1.05843,	1.05618,	1.05392,	1.05167,	1.04943,	1.04718,	1.04493,	1.04269,	1.04045,	1.03821,	1.03597,	1.03374,	1.03151,	1.02927,	1.02705,	1.02482,	1.0226,	1.02038,	1.01816,	1.01594,	1.01373,	1.01152,	1.00931,	1.00711,	1.0049,	1.0027,	1.00051,	0.998312,	0.99612,	0.993932,	0.991747,	0.989565,	0.987385,	0.985209,	0.983036,	0.980867,	0.9787,	0.976537,	0.974377,	0.97222,	0.970067,	0.967917,	0.965771,	0.963628,	0.961489,	0.959353,	0.957221,	0.955093,	0.952968,	0.950847,	0.948729,	0.946616,	0.944506,	0.9424,	0.940298,	0.9382,	0.936106,	0.934016,	0.93193,	0.929848,	0.92777,	0.925696,	0.923626,	0.921561,	0.919499,	0.917442,	0.91539,	0.913341,	0.911297,	0.909257,	0.907222,	0.905191,	0.903164,	0.901142,	0.899125,	0.897112,	0.895103,	0.8931,	0.8911,	0.889106,	0.887116,	0.885131,	0.88315,	0.881175,	0.879204,	0.877238,	0.875276,	0.87332,	0.871368,	0.869422,	0.86748,	0.865543,	0.863612,	0.861685,	0.859763,	0.857846,	0.855935,	0.854028,	0.852127,	0.85023,	0.848339,	0.846453,	0.844572,	0.842697,	0.840826,	0.838961,	0.837101,	0.835247,	0.833397,	0.831553,	0.829715,	0.827881,	0.826054,	0.824231,	0.822414,	0.820602,	0.818796,	0.816996,	0.8152,	0.813411,	0.811626,	0.809848,	0.808074,	0.806307,	0.804545,	0.802788,	0.801037,	0.799292,	0.797553,	0.795819,	0.79409,	0.792368,	0.790651,	0.788939,	0.787234,	0.785534,	0.783839,	0.782151,	0.780468,	0.778791,	0.77712,	0.775455,	0.773795,	0.772141,	0.770493,	0.768851,	0.767214,	0.765584,	0.763959,	0.76234,	0.760727,	0.75912,	0.757518,	0.755923,	0.754333,	0.752749,	0.751172,	0.7496,	0.748034,	0.746473,	0.744919,	0.743371,	0.741828,	0.740292,	0.738761,	0.737237,	0.735718,	0.734205,	0.732699,	0.731198,	0.729703,	0.728214,	0.726731,	0.725254,	0.723783,	0.722318,	0.720859,	0.719405,	0.717958,	0.716517,	0.715082,	0.713652,	0.712229,	0.710811,	0.7094,	0.707994,	0.706595,	0.705201,	0.703814,	0.702432,	0.701057,	0.699687,	0.698323,	0.696965,	0.695613,	0.694267,	0.692928,	0.691594,	0.690265,	0.688943,	0.687627,	0.686317,	0.685012,	0.683714,	0.682421,	0.681135,	0.679854,	0.678579,	0.67731,	0.676047,	0.67479,	0.673539,	0.672294,	0.671054,	0.66982,	0.668593,	0.667371,	0.666155,	0.664944,	0.66374,	0.662541,	0.661349,	0.660162,	0.65898,	0.657805,	0.656635,	0.655472,	0.654313,	0.653161,	0.652015,	0.650874,	0.649739,	0.648609,	0.647486,	0.646368,	0.645255,	0.644149,	0.643048,	0.641953,	0.640863,	0.639779,	0.638701,	0.637628,	0.636561,	0.6355,	0.634444,	0.633394,	0.632349,	0.63131,	0.630276,	0.629248,	0.628226,	0.627209,	0.626197,	0.625191,	0.624191,	0.623195,	0.622206,	0.621222,	0.620243,	0.619269,	0.618301,	0.617339,	0.616382,	0.61543,	0.614483,	0.613542,	0.612606,	0.611676,	0.61075,	0.60983,	0.608916,	0.608006,	0.607102,	0.606203,	0.605309,	0.604421,	0.603537,	0.602659,	0.601786,	0.600918,	0.600055,	0.599197,	0.598345,	0.597497,	0.596655,	0.595817,	0.594985,	0.594157,	0.593335,	0.592517,	0.591705,	0.590897,	0.590095,	0.589297,	0.588504,	0.587716,	0.586933,	0.586155,	0.585382,	0.584613,	0.583849,	0.58309,	0.582336,	0.581587,	0.580842,	0.580102,	0.579367,	0.578637,	0.577911,	0.577189,	0.576473,	0.575761,	0.575054,	0.574351,	0.573653,	0.572959,	0.57227,	0.571585,	0.570905,	0.57023,	0.569558,	0.568892,	0.568229,	0.567572,	0.566918,	0.566269,	0.565624,	0.564984,	0.564348,	0.563716,	0.563089,	0.562466,	0.561847,	0.561232,	0.560622,	0.560015,	0.559413,	0.558815,	0.558222,	0.557632,	0.557047,	0.556465,	0.555888,	0.555315,	0.554745,	0.55418,	0.553619,	0.553062,	0.552508,	0.551959,	0.551414,	0.550872,	0.550335,	0.549801,	0.549271,	0.548745,	0.548223,	0.547705,	0.54719,	0.54668,	0.546173,	0.545669,	0.54517,	0.544674,	0.544182,	0.543693,	0.543208,	0.542727,	0.54225,	0.541776,	0.541305,	0.540838,	0.540375,	0.539915,	0.539459,	0.539006,	0.538557,	0.538111,	0.537668,	0.537229,	0.536794,	0.536361,	0.535932,	0.535507,	0.535085,	0.534666,	0.53425,	0.533838,	0.533429,	0.533023,	0.53262,	0.532221,	0.531824,	0.531431,	0.531041,	0.530655,	0.530271,	0.52989,	0.529513,	0.529138,	0.528767,	0.528399,	0.528033,	0.527671,	0.527312,	0.526956,	0.526602,	0.526252,	0.525904,	0.525559,	0.525218,	0.524879,	0.524543,	0.52421,	0.523879,	0.523552,	0.523227,	0.522905,	0.522585,	0.522269,	0.521955,	0.521644,	0.521336,	0.52103,	0.520727,	0.520426,	0.520128,	0.519833,	0.519541,	0.519251,	0.518963,	0.518678,	0.518396,	0.518116,	0.517839,	0.517564,	0.517291,	0.517021,	0.516754,	0.516489,	0.516226,	0.515966,	0.515708,	0.515452,	0.515199,	0.514948,	0.5147,	0.514454,	0.51421,	0.513968,	0.513729,	0.513491,	0.513257,	0.513024,	0.512793,	0.512565,	0.512339,	0.512115,	0.511894,	0.511674,	0.511456,	0.511241,	0.511028,	0.510817,	0.510608,	0.5104,	0.510195,	0.509993,	0.509792,	0.509593,	0.509396,	0.509201,	0.509008,	0.508817,	0.508628,	0.508441,	0.508255,	0.508072,	0.507891,	0.507711,	0.507533,	0.507358,	0.507184,	0.507012,	0.506841,	0.506673,	0.506506,	0.506341,	0.506178,	0.506017,	0.505857,	0.505699,	0.505543,	0.505389,	0.505236,	0.505085,	0.504936,	0.504788,	0.504642,	0.504498,	0.504355,	0.504214,	0.504075,	0.503937,	0.503801,	0.503666,	0.503533,	0.503402,	0.503272,	0.503144,	0.503017,	0.502892,	0.502768,	0.502646,	0.502525,	0.502406,	0.502289,	0.502172,	0.502058,	0.501944,	0.501833,	0.501722,	0.501613,	0.501506,	0.5014,	0.501295,	0.501192,	0.50109,	0.500989,	0.50089,	0.500793,	0.500696,	0.500601,	0.500508,	0.500415,	0.500324,	0.500234,	0.500146,	0.500059,	0.499973,	0.499889,	0.499806,	0.499724,	0.499643,	0.499564,	0.499485,	0.499409,	0.499333,	0.499259,	0.499185,	0.499113,	0.499043,	0.498973,	0.498905,	0.498838,	0.498772,	0.498707,	0.498644,	0.498581,	0.49852,	0.49846,	0.498401,	0.498343,	0.498287,	0.498231,	0.498177,	0.498124,	0.498072,	0.498021,	0.497971,	0.497922,	0.497875,	0.497828,	0.497783,	0.497738,	0.497695,	0.497653,	0.497612,	0.497572,	0.497533,	0.497495,	0.497458,	0.497423,	0.497388,	0.497354,	0.497322,	0.49729,	0.49726,	0.49723,	0.497202,	0.497174,	0.497148,	0.497122,	0.497098,	0.497075,	0.497052,	0.497031,	0.497011,	0.496991,	0.496973,	0.496956,	0.496939,	0.496924,	0.49691,	0.496896,	0.496884,	0.496873,	0.496862,	0.496853,	0.496844,	0.496837,	0.49683,	0.496825,	0.49682,	0.496817,	0.496814,	0.496812,	0.496811,	0.496812,	0.496813,	0.496815,	0.496818,	0.496822,	0.496827,	0.496833,	0.49684,	0.496848,	0.496857,	0.496866,	0.496877,	0.496889,	0.496901,	0.496915,	0.496929,	0.496944,	0.496961,	0.496978,	0.496996,	0.497015,	0.497036,	0.497057,	0.497079,	0.497101,	0.497125,	0.49715,	0.497176,	0.497202,	0.49723,	0.497259,	0.497288,	0.497319,	0.49735,	0.497382,	0.497415,	0.49745,	0.497485,	0.497521,	0.497558,	0.497596,	0.497635,	0.497674,	0.497715,	0.497757,	0.4978,	0.497843,	0.497888,	0.497933,	0.49798,	0.498027,	0.498076,	0.498125,	0.498175,	0.498227,	0.498279,	0.498332,	0.498386,	0.498441,	0.498497,	0.498554,	0.498612,	0.498671,	0.498731,	0.498792,	0.498854,	0.498917,	0.498981,	0.499045,	0.499111,	0.499178,	0.499246,	0.499314,	0.499384,	0.499455,	0.499527,	0.499599,	0.499673,	0.499748,	0.499824,	0.4999,	0.499978,	0.500057,	0.500137,	0.500217,	0.500299,	0.500382,	0.500466,	0.500551,	0.500637,	0.500723,	0.500811,	0.5009,	0.50099,	0.501081,	0.501174,	0.501267,	0.501361,	0.501456,	0.501552,	0.50165,	0.501748,	0.501848,	0.501948,	0.50205,	0.502153,	0.502256,	0.502361,	0.502467,	0.502574,	0.502682,	0.502791,	0.502902,	0.503013,	0.503125,	0.503239,	0.503354,	0.50347,	0.503586,	0.503704,	0.503824,	0.503944,	0.504065,	0.504188,	0.504311,	0.504436,	0.504562,	0.504689,	0.504817,	0.504947,	0.505077,	0.505209,	0.505342,	0.505476,	0.505611,	0.505747,	0.505885,	0.506023,	0.506163,	0.506304,	0.506446,	0.50659,	0.506735,	0.50688,	0.507027,	0.507176,	0.507325,	0.507476,	0.507627,	0.507781,	0.507935,	0.50809,	0.508247,	0.508405,	0.508564,	0.508725,	0.508887,	0.50905,	0.509214,	0.509379,	0.509546,	0.509714,	0.509883,	0.510054,	0.510226,	0.510399,	0.510573,	0.510749,	0.510926,	0.511104,	0.511283,	0.511464,	0.511646,	0.51183,	0.512015,	0.512201,	0.512388,	0.512577,	0.512767,	0.512958,	0.513151,	0.513345,	0.51354,	0.513737,	0.513935,	0.514135,	0.514335,	0.514537,	0.514741,	0.514946,	0.515152,	0.51536,	0.515569,	0.515779,	0.515991,	0.516204,	0.516418,	0.516634,	0.516852,	0.51707,	0.51729,	0.517512,	0.517735,	0.517959,	0.518185,	0.518412,	0.518641,	0.518871,	0.519102,	0.519335,	0.51957,	0.519806,	0.520043,	0.520282,	0.520522,	0.520763,	0.521006,	0.521251,	0.521497,	0.521744,	0.521993,	0.522244,	0.522496,	0.522749,	0.523004,	0.52326,	0.523518,	0.523777,	0.524038,	0.524301,	0.524564,	0.52483,	0.525097,	0.525365,	0.525635,	0.525906,	0.526179,	0.526454,	0.52673,	0.527007,	0.527286,	0.527567,	0.527849,	0.528133,	0.528418,	0.528705,	0.528993,	0.529283,	0.529574,	0.529867,	0.530162,	0.530458,	0.530756,	0.531055,	0.531356,	0.531658,	0.531962,	0.532268,	0.532575,	0.532884,	0.533194,	0.533506,	0.533819,	0.534135,	0.534451,	0.53477,	0.535089,	0.535411,	0.535734,	0.536059,	0.536385,	0.536713,	0.537043,	0.537374,	0.537707,	0.538041,	0.538377,	0.538715,	0.539054,	0.539395,	0.539738,	0.540082,	0.540428,	0.540775,	0.541125,	0.541475,	0.541828,	0.542182,	0.542538,	0.542895,	0.543254,	0.543615,	0.543977,	0.544341,	0.544707,	0.545074,	0.545443,	0.545814,	0.546186,	0.54656,	0.546935,	0.547313,	0.547692,	0.548072,	0.548455,	0.548839,	0.549224,	0.549612,	0.550001,	0.550391,	0.550784,	0.551178,	0.551574,	0.551971,	0.55237,	0.552771,	0.553173,	0.553578,	0.553983,	0.554391,	0.5548,	0.555211,	0.555624,	0.556038,	0.556454,	0.556872,	0.557291,	0.557712,	0.558135,	0.55856,	0.558986,	0.559414,	0.559843,	0.560275,	0.560708,	0.561142,	0.561579,	0.562017,	0.562457,	0.562898,	0.563341,	0.563786,	0.564233,	0.564681,	0.565131,	0.565583,	0.566036,	0.566491,	0.566948,	0.567407,	0.567867,	0.568329,	0.568793,	0.569258,	0.569725,	0.570194,	0.570664,	0.571136,	0.57161,	0.572086,	0.572563,	0.573042,	0.573522,	0.574005,	0.574489,	0.574975,	0.575462,	0.575951,	0.576442,	0.576934,	0.577429,	0.577925,	0.578422,	0.578922,	0.579423,	0.579925,	0.58043,	0.580936,	0.581443,	0.581953,	0.582464,	0.582977,	0.583491,	0.584007,	0.584525,	0.585045,	0.585566,	0.586089,	0.586614,	0.58714,	0.587668,	0.588197,	0.588729,	0.589262,	0.589796,	0.590332,	0.59087,	0.59141,	0.591951,	0.592494,	0.593039,	0.593585,	0.594133,	0.594683,	0.595234,	0.595787,	0.596341,	0.596897,	0.597455,	0.598015,	0.598576,	0.599139,	0.599703,	0.600269,	0.600837,	0.601406,	0.601977,	0.602549,	0.603124,	0.603699,	0.604277,	0.604856,	0.605436,	0.606019,	0.606603,	0.607188,	0.607775,	0.608364,	0.608954,	0.609546,	0.61014,	0.610735,	0.611332,	0.61193,	0.61253,	0.613131,	0.613734,	0.614339,	0.614945,	0.615553,	0.616162,	0.616773,	0.617386,	0.618,	0.618615,	0.619232,	0.619851,	0.620471,	0.621093,	0.621717,	0.622342,	0.622968,	0.623596,	0.624226,	0.624857,	0.625489,	0.626123,	0.626759,	0.627396,	0.628035,	0.628675,	0.629317,	0.62996,	0.630605,	0.631251,	0.631898,	0.632548,	0.633198,	0.63385,	0.634504,	0.635159,	0.635816,	0.636474,	0.637133,	0.637794,	0.638457,	0.63912,	0.639786,	0.640453,	0.641121,	0.64179,	0.642461,	0.643134,	0.643808,	0.644483,	0.64516,	0.645838,	0.646518,	0.647199,	0.647881,	0.648565,	0.649251,	0.649937,	0.650625,	0.651315,	0.652005,	0.652698,	0.653391,	0.654086,	0.654782,	0.65548,	0.656179,	0.656879,	0.657581,	0.658284,	0.658988,	0.659694,	0.660401,	0.661109,	0.661819,	0.66253,	0.663242,	0.663956,	0.664671,	0.665387,	0.666104,	0.666823,	0.667543,	0.668264,	0.668987,	0.669711,	0.670436,	0.671162,	0.67189,	0.672619,	0.673349,	0.674081,	0.674813,	0.675547,	0.676282,	0.677018,	0.677756,	0.678495,	0.679235,	0.679976,	0.680718,	0.681462,	0.682206,	0.682952,	0.683699,	0.684448,	0.685197,	0.685948,	0.686699,	0.687452,	0.688206,	0.688962,	0.689718,	0.690475,	0.691234,	0.691994,	0.692755,	0.693517,	0.69428,	0.695044,	0.695809,	0.696575,	0.697343,	0.698111,	0.698881,	0.699652,	0.700423,	0.701196,	0.70197,	0.702745,	0.703521,	0.704298,	0.705076,	0.705855,	0.706635,	0.707416,	0.708198,	0.708981,	0.709765,	0.71055,	0.711336,	0.712123,	0.712911,	0.7137,	0.71449,	0.715281,	0.716073,	0.716866,	0.71766,	0.718455,	0.71925,	0.720047,	0.720844,	0.721643,	0.722442,	0.723242,	0.724044,	0.724846,	0.725649,	0.726452,	0.727257,	0.728063,	0.728869,	0.729676,	0.730485,	0.731294,	0.732103,	0.732914,	0.733726,	0.734538,	0.735351,	0.736165,	0.73698,	0.737796,	0.738612,	0.739429,	0.740247,	0.741066,	0.741885,	0.742706,	0.743527,	0.744349,	0.745171,	0.745994,	0.746818,	0.747643,	0.748469,	0.749295,	0.750122,	0.75095,	0.751778,	0.752607,	0.753437,	0.754267,	0.755098,	0.75593,	0.756763,	0.757596,	0.75843,	0.759264,	0.760099,	0.760935,	0.761771,	0.762608,	0.763446,	0.764284,	0.765123,	0.765962,	0.766802,	0.767643,	0.768484,	0.769326,	0.770168,	0.771011,	0.771855,	0.772699,	0.773543,	0.774389,	0.775234,	0.776081,	0.776927,	0.777775,	0.778622,	0.779471,	0.780319,	0.781169,	0.782019,	0.782869,	0.78372,	0.784571,	0.785422,	0.786275,	0.787127,	0.78798,	0.788834,	0.789688,	0.790542,	0.791397,	0.792252,	0.793108,	0.793964,	0.79482,	0.795677,	0.796534,	0.797392,	0.79825,	0.799108,	0.799967,	0.800826,	0.801686,	0.802545,	0.803406,	0.804266,	0.805127,	0.805988,	0.806849,	0.807711,	0.808573,	0.809436,	0.810298,	0.811161,	0.812024,	0.812888,	0.813752,	0.814616,	0.81548,	0.816345,	0.817209,	0.818074,	0.81894,	0.819805,	0.820671,	0.821537,	0.822403,	0.823269,	0.824136,	0.825003,	0.82587,	0.826737,	0.827604,	0.828472,	0.829339,	0.830207,	0.831075,	0.831943,	0.832812,	0.83368,	0.834549,	0.835417,	0.836286,	0.837155,	0.838024,	0.838893,	0.839762,	0.840631,	0.841501,	0.84237,	0.84324,	0.844109,	0.844979,	0.845849,	0.846718,	0.847588,	0.848458,	0.849328,	0.850198,	0.851068,	0.851938,	0.852808,	0.853678,	0.854548,	0.855418,	0.856288,	0.857158,	0.858027,	0.858897,	0.859767,	0.860637,	0.861507,	0.862376,	0.863246,	0.864116,	0.864985,	0.865855,	0.866724,	0.867593,	0.868463,	0.869332,	0.870201,	0.87107,	0.871938,	0.872807,	0.873676,	0.874544,	0.875412,	0.87628,	0.877148,	0.878016,	0.878884,	0.879752,	0.880619,	0.881486,	0.882353,	0.88322,	0.884087,	0.884953,	0.88582,	0.886686,	0.887551,	0.888417,	0.889283,	0.890148,	0.891013,	0.891878,	0.892742,	0.893606,	0.89447,	0.895334,	0.896198,	0.897061,	0.897924,	0.898787,	0.899649,	0.900511,	0.901373,	0.902234,	0.903096,	0.903957,	0.904817,	0.905678,	0.906538,	0.907397,	0.908257,	0.909116,	0.909974,	0.910833,	0.91169,	0.912548,	0.913405,	0.914262,	0.915119,	0.915975,	0.916831,	0.917686,	0.918541,	0.919396,	0.92025,	0.921103,	0.921957,	0.92281,	0.923662,	0.924514,	0.925366,	0.926217,	0.927068,	0.927919,	0.928768,	0.929618,	0.930467,	0.931315,	0.932164,	0.933011,	0.933858,	0.934705,	0.935551,	0.936397,	0.937242,	0.938087,	0.938931,	0.939774,	0.940618,	0.94146,	0.942302,	0.943144,	0.943985,	0.944826,	0.945666,	0.946505,	0.947344,	0.948182,	0.94902,	0.949857,	0.950694,	0.95153,	0.952366,	0.9532,	0.954035,	0.954869,	0.955702,	0.956534,	0.957366,	0.958198,	0.959028,	0.959859,	0.960688,	0.961517,	0.962345,	0.963173,	0.964,	0.964826,	0.965652,	0.966477,	0.967302,	0.968126,	0.968949,	0.969771,	0.970593,	0.971414,	0.972235,	0.973054,	0.973873,	0.974692,	0.97551,	0.976327,	0.977143,	0.977958,	0.978773,	0.979588,	0.980401,	0.981214,	0.982026,	0.982837,	0.983648,	0.984458,	0.985267,	0.986075,	0.986883,	0.98769,	0.988496,	0.989301,	0.990106,	0.99091,	0.991713,	0.992515,	0.993317,	0.994117,	0.994917,	0.995717,	0.996515,	0.997313,	0.99811,	0.998906,	0.999701,	1.0005,	1.00129,	1.00208,	1.00287,	1.00366,	1.00446,	1.00524,	1.00603,	1.00682,	1.00761,	1.00839,	1.00918,	1.00996,	1.01075,	1.01153,	1.01231,	1.01309,	1.01387,	1.01465,	1.01543,	1.01621,	1.01699,	1.01776,	1.01854,	1.01931,	1.02008,	1.02086,	1.02163,	1.0224,	1.02317,	1.02394,	1.0247,	1.02547,	1.02624,	1.027,	1.02777,	1.02853,	1.02929,	1.03005,	1.03081,	1.03157,	1.03233,	1.03309,	1.03384,	1.0346,	1.03535,	1.03611,	1.03686,	1.03761,	1.03836,	1.03911,	1.03986,	1.04061,	1.04136,	1.0421,	1.04285,	1.04359,	1.04434,	1.04508,	1.04582,	1.04656,	1.0473,	1.04804,	1.04877,	1.04951,	1.05025,	1.05098,	1.05171,	1.05244,	1.05318,	1.05391,	1.05463,	1.05536,	1.05609,	1.05682,	1.05754,	1.05826,	1.05899,	1.05971,	1.06043,	1.06115,	1.06187,	1.06259,	1.0633,	1.06402,	1.06473,	1.06545,	1.06616,	1.06687,	1.06758,	1.06829,	1.069,	1.0697,	1.07041,	1.07112,	1.07182,	1.07252,	1.07322,	1.07392,	1.07462,	1.07532,	1.07602,	1.07672,	1.07741,	1.07811,	1.0788,	1.07949,	1.08018,	1.08087,	1.08156,	1.08225,	1.08293,	1.08362,	1.0843,	1.08498,	1.08567,	1.08635,	1.08703,	1.08771,	1.08838,	1.08906,	1.08973,	1.09041,	1.09108,	1.09175,	1.09242,	1.09309,	1.09376,	1.09443,	1.09509,	1.09576,	1.09642,	1.09709,	1.09775,	1.09841,	1.09907,	1.09972,	1.10038,	1.10104,	1.10169,	1.10234,	1.103,	1.10365,	1.1043,	1.10495,	1.10559,	1.10624,	1.10689,	1.10753,	1.10817,	1.10881,	1.10945,	1.11009,	1.11073,	1.11137,	1.112,	1.11264,	1.11327,	1.1139,	1.11453,	1.11516,	1.11579,	1.11642,	1.11705,	1.11767,	1.1183,	1.11892,	1.11954,	1.12016,	1.12078,	1.1214,	1.12201,	1.12263,	1.12324,	1.12385,	1.12447,	1.12508,	1.12569,	1.12629,	1.1269,	1.12751,	1.12811,	1.12871,	1.12932,	1.12992,	1.13052,	1.13111,	1.13171,	1.13231,	1.1329,	1.1335,	1.13409,	1.13468,	1.13527,	1.13586,	1.13644,	1.13703,	1.13761,	1.1382,	1.13878,	1.13936,	1.13994,	1.14052,	1.1411,	1.14167,	1.14225,	1.14282,	1.14339,	1.14396,	1.14453,	1.1451,	1.14567,	1.14623,	1.1468,	1.14736,	1.14793,	1.14849,	1.14905,	1.1496,	1.15016,	1.15072,	1.15127,	1.15183,	1.15238,	1.15293,	1.15348,	1.15403,	1.15457,	1.15512,	1.15566,	1.15621,	1.15675,	1.15729,	1.15783,	1.15837,	1.1589,	1.15944,	1.15997,	1.16051,	1.16104,	1.16157,	1.1621,	1.16263,	1.16315,	1.16368,	1.1642,	1.16473,	1.16525,	1.16577,	1.16629,	1.16681,	1.16732,	1.16784,	1.16835,	1.16886,	1.16938,	1.16989,	1.17039,	1.1709,	1.17141,	1.17191,	1.17242,	1.17292,	1.17342,	1.17392,	1.17442,	1.17492,	1.17541,	1.17591,	1.1764,	1.17689,	1.17738,	1.17787,	1.17836,	1.17885,	1.17933,	1.17982,	1.1803,	1.18078,	1.18126,	1.18174,	1.18222,	1.1827,	1.18317,	1.18364,	1.18412,	1.18459,	1.18506,	1.18553,	1.18599,	1.18646,	1.18693,	1.18739,	1.18785,	1.18831,	1.18877,	1.18923,	1.18969,	1.19014,	1.1906,	1.19105,	1.1915,	1.19195,	1.1924,	1.19285,	1.1933,	1.19374,	1.19418,	1.19463,	1.19507,	1.19551,	1.19595,	1.19638,	1.19682,	1.19726,	1.19769,	1.19812,	1.19855,	1.19898,	1.19941,	1.19984,	1.20026,	1.20069,	1.20111,	1.20153,	1.20195,	1.20237,	1.20279,	1.20321,	1.20362,	1.20403,	1.20445,	1.20486,	1.20527,	1.20568,	1.20608,	1.20649,	1.20689,	1.2073,	1.2077,	1.2081,	1.2085,	1.2089,	1.20929,	1.20969,	1.21008,	1.21048,	1.21087,	1.21126,	1.21165,	1.21204,	1.21242,	1.21281,	1.21319,	1.21357,	1.21395,	1.21433,	1.21471,	1.21509,	1.21546,	1.21584,	1.21621,	1.21658,	1.21695,	1.21732,	1.21769,	1.21806,	1.21842,	1.21879,	1.21915,	1.21951,	1.21987,	1.22023,	1.22059,	1.22094,	1.2213,	1.22165,	1.222,	1.22235,	1.2227,	1.22305,	1.2234,	1.22374,	1.22409,	1.22443,	1.22477,	1.22511,	1.22545,	1.22579,	1.22612,	1.22646,	1.22679,	1.22712,	1.22746,	1.22778,	1.22811,	1.22844,	1.22877,	1.22909,	1.22941,	1.22973,	1.23006,	1.23037,	1.23069,	1.23101,	1.23132,	1.23164,	1.23195,	1.23226,	1.23257,	1.23288,	1.23319,	1.23349,	1.2338,	1.2341,	1.2344,	1.2347,	1.235,	1.2353,	1.2356,	1.23589,	1.23619,	1.23648,	1.23677,	1.23706,	1.23735,	1.23764,	1.23792,	1.23821,	1.23849,	1.23877,	1.23905,	1.23933,	1.23961,	1.23989,	1.24016,	1.24044,	1.24071,	1.24098,	1.24125,	1.24152,	1.24179,	1.24205,	1.24232,	1.24258,	1.24284,	1.2431,	1.24336,	1.24362,	1.24388,	1.24414,	1.24439,	1.24464,	1.24489,	1.24514,	1.24539,	1.24564,	1.24589,	1.24613,	1.24638,	1.24662,	1.24686,	1.2471,	1.24734,	1.24757,	1.24781,	1.24804,	1.24828,	1.24851,	1.24874,	1.24897,	1.2492,	1.24942,	1.24965,	1.24987,	1.25009,	1.25032,	1.25054,	1.25075,	1.25097,	1.25119,	1.2514,	1.25161,	1.25183,	1.25204,	1.25225,	1.25245,	1.25266,	1.25287,	1.25307,	1.25327,	1.25347,	1.25367,	1.25387,	1.25407,	1.25426,	1.25446,	1.25465,	1.25484,	1.25503,	1.25522,	1.25541,	1.2556,	1.25578,	1.25597,	1.25615,	1.25633,	1.25651,	1.25669,	1.25687,	1.25704,	1.25722,	1.25739,	1.25756,	1.25773,	1.2579,	1.25807,	1.25823,	1.2584,	1.25856,	1.25873,	1.25889,	1.25905,	1.2592,	1.25936,	1.25952,	1.25967,	1.25982,	1.25998,	1.26013,	1.26028,	1.26042,	1.26057,	1.26071,	1.26086,	1.261,	1.26114,	1.26128,	1.26142,	1.26156,	1.26169,	1.26182,	1.26196,	1.26209,	1.26222,	1.26235,	1.26248,	1.2626,	1.26273,	1.26285,	1.26297,	1.26309,	1.26321,	1.26333,	1.26345,	1.26356,	1.26367,	1.26379,	1.2639,	1.26401,	1.26412,	1.26422,	1.26433,	1.26443,	1.26454,	1.26464,	1.26474,	1.26484,	1.26493,	1.26503,	1.26512,	1.26522,	1.26531,	1.2654,	1.26549,	1.26558,	1.26566,	1.26575,	1.26583,	1.26591,	1.266,	1.26608,	1.26615,	1.26623,	1.26631,	1.26638,	1.26645,	1.26652,	1.26659,	1.26666,	1.26673,	1.2668,	1.26686,	1.26692,	1.26698,	1.26704,	1.2671,	1.26716,	1.26722,	1.26727,	1.26733,	1.26738,	1.26743,	1.26748,	1.26752,	1.26757,	1.26762,	1.26766,	1.2677,	1.26774,	1.26778,	1.26782,	1.26786,	1.26789,	1.26792,	1.26796,	1.26799,	1.26802,	1.26805,	1.26807,	1.2681,	1.26812,	1.26814,	1.26816,	1.26818,	1.2682,	1.26822,	1.26823,	1.26825,	1.26826,	1.26827,	1.26828,	1.26829,	1.2683,	1.2683,	1.26831,	1.26831,	1.26831,	1.26831,	1.26831,	1.2683,	1.2683,	1.26829,	1.26829,	1.26828,	1.26827,	1.26825,	1.26824,	1.26823,	1.26821,	1.26819,	1.26817,	1.26815,	1.26813,	1.26811,	1.26808,	1.26806,	1.26803,	1.268,	1.26797,	1.26794,	1.2679,	1.26787,	1.26783,	1.26779,	1.26775,	1.26771,	1.26767,	1.26762,	1.26758,	1.26753,	1.26748,	1.26743,	1.26738,	1.26733,	1.26728,	1.26722,	1.26716,	1.2671,	1.26704,	1.26698,	1.26692,	1.26685,	1.26679,	1.26672,	1.26665,	1.26658,	1.26651,	1.26643,	1.26636,	1.26628,	1.2662,	1.26612,	1.26604,	1.26596,	1.26587,	1.26579,	1.2657,	1.26561,	1.26552,	1.26543,	1.26533,	1.26524,	1.26514,	1.26504,	1.26494,	1.26484,	1.26474,	1.26464,	1.26453,	1.26442,	1.26431,	1.2642,	1.26409,	1.26398,	1.26386,	1.26375,	1.26363,	1.26351,	1.26339,	1.26326,	1.26314,	1.26301,	1.26288,	1.26275,	1.26262,	1.26249,	1.26236,	1.26222,	1.26208,	1.26194,	1.2618,	1.26166,	1.26152,	1.26137,	1.26123,	1.26108,	1.26093,	1.26078,	1.26062,	1.26047,	1.26031,	1.26015,	1.25999,	1.25983,	1.25967,	1.2595,	1.25934,	1.25917,	1.259,	1.25883,	1.25866,	1.25848,	1.25831,	1.25813,	1.25795,	1.25777,	1.25758,	1.2574,	1.25721,	1.25703,	1.25684,	1.25665,	1.25645,	1.25626,	1.25606,	1.25587,	1.25567,	1.25546,	1.25526,	1.25506,	1.25485,	1.25464,	1.25443,	1.25422,	1.25401,	1.25379,	1.25358,	1.25336,	1.25314,	1.25292,	1.2527,	1.25247,	1.25224,	1.25202,	1.25179,	1.25155,	1.25132,	1.25108,	1.25085,	1.25061,	1.25037,	1.25013,	1.24988,	1.24964,	1.24939,	1.24914,	1.24889,	1.24863,	1.24838,	1.24812,	1.24787,	1.24761,	1.24734,	1.24708,	1.24681,	1.24655,	1.24628,	1.24601,	1.24574,	1.24546,	1.24518,	1.24491,	1.24463,	1.24435,	1.24406,	1.24378,	1.24349,	1.2432,	1.24291,	1.24262,	1.24232,	1.24203,	1.24173,	1.24143,	1.24113,	1.24082,	1.24052,	1.24021,	1.2399,	1.23959,	1.23928,	1.23896,	1.23864,	1.23833,	1.238,	1.23768,	1.23736,	1.23703,	1.2367,	1.23637,	1.23604,	1.23571,	1.23537,	1.23503,	1.23469,	1.23435,	1.23401,	1.23366,	1.23332,	1.23297,	1.23262,	1.23226,	1.23191,	1.23155,	1.23119,	1.23083,	1.23047,	1.2301,	1.22973,	1.22937,	1.22899,	1.22862,	1.22825,	1.22787,	1.22749,	1.22711,	1.22673,	1.22634,	1.22595,	1.22557,	1.22517,	1.22478,	1.22439,	1.22399,	1.22359,	1.22319,	1.22279,	1.22238,	1.22197,	1.22156,	1.22115,	1.22074,	1.22032,	1.21991,	1.21949,	1.21906,	1.21864,	1.21821,	1.21779,	1.21736,	1.21692,	1.21649,	1.21605,	1.21561,	1.21517,	1.21473,	1.21429,	1.21384,	1.21339,	1.21294,	1.21248,	1.21203,	1.21157,	1.21111,	1.21065,	1.21018,	1.20972,	1.20925,	1.20878,	1.20831,	1.20783,	1.20735,	1.20687,	1.20639,	1.20591,	1.20542,	1.20493,	1.20444,	1.20395,	1.20345,	1.20296,	1.20246,	1.20196,	1.20145,	1.20095,	1.20044,	1.19993,	1.19941,	1.1989,	1.19838,	1.19786,	1.19734,	1.19681,	1.19629,	1.19576,	1.19523,	1.19469,	1.19416,	1.19362,	1.19308,	1.19254,	1.19199,	1.19144,	1.19089,	1.19034,	1.18979,	1.18923,	1.18867,	1.18811,	1.18755,	1.18698,	1.18641,	1.18584,	1.18527,	1.18469,	1.18411,	1.18353,	1.18295,	1.18236,	1.18178,	1.18119,	1.18059,	1.18,	1.1794,	1.1788,	1.1782,	1.1776,	1.17699,	1.17638,	1.17577,	1.17515,	1.17454,	1.17392,	1.17329,	1.17267,	1.17204,	1.17141,	1.17078,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	1.34512,	


Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7   time = 398619 ms
------------------
------------------
Start Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7 > Output 
Thread 0: j = 0
Thread 1: j = 32
Thread 2: j = 64
Thread 3: j = 96
Thread 0: j = 1
Thread 1: j = 33
Thread 2: j = 65
Thread 3: j = 97
Thread 0: j = 2
Thread 1: j = 34
Thread 2: j = 66
Thread 3: j = 98
Thread 0: j = 3
Thread 1: j = 35
Thread 2: j = 67
Thread 3: j = 99
Thread 0: j = 4
Thread 1: j = 36
Thread 2: j = 68
Thread 3: j = 100
Thread 0: j = 5
Thread 1: j = 37
Thread 2: j = 69
Thread 3: j = 101
Thread 0: j = 6
Thread 1: j = 38
Thread 2: j = 70
Thread 3: j = 102
Thread 0: j = 7
Thread 1: j = 39
Thread 2: j = 71
Thread 3: j = 103
Thread 0: j = 8
Thread 1: j = 40
Thread 1: j = 41
Thread 3: j = 104
Thread 0: j = 9
Thread 2: j = 72
Thread 1: j = 42
Thread 3: j = 105
Thread 0: j = 10
Thread 2: j = 73
Thread 1: j = 43
Thread 3: j = 106
Thread 0: j = 11
Thread 2: j = 74
Thread 1: j = 44
Thread 3: j = 107
Thread 0: j = 12
Thread 2: j = 75
Thread 1: j = 45
Thread 3: j = 108
Thread 0: j = 13
Thread 0: j = 14
Thread 0: j = 15
Thread 3: j = 109
Thread 2: j = 76
Thread 1: j = 46
Thread 0: j = 16
Thread 3: j = 110
Thread 2: j = 77
Thread 1: j = 47
Thread 0: j = 17
Thread 3: j = 111
Thread 2: j = 78
Thread 2: j = 79
Thread 0: j = 18
Thread 3: j = 112
Thread 1: j = 48
Thread 2: j = 80
Thread 0: j = 19
Thread 3: j = 113
Thread 1: j = 49
Thread 2: j = 81
Thread 0: j = 20
Thread 3: j = 114
Thread 3: j = 115
Thread 3: j = 116
Thread 0: j = 21
Thread 1: j = 50
Thread 2: j = 82
Thread 3: j = 117
Thread 0: j = 22
Thread 1: j = 51
Thread 2: j = 83
Thread 3: j = 118
Thread 0: j = 23
Thread 0: j = 24
Thread 2: j = 84
Thread 3: j = 119
Thread 1: j = 52
Thread 0: j = 25
Thread 2: j = 85
Thread 3: j = 120
Thread 1: j = 53
Thread 0: j = 26
Thread 2: j = 86
Thread 3: j = 121
Thread 1: j = 54
Thread 0: j = 27
Thread 2: j = 87
Thread 3: j = 122
Thread 1: j = 55
Thread 0: j = 28
Thread 2: j = 88
Thread 3: j = 123
Thread 1: j = 56
Thread 0: j = 29
Thread 2: j = 89
Thread 3: j = 124
Thread 1: j = 57
Thread 0: j = 30
Thread 2: j = 90
Thread 3: j = 125
Thread 3: j = 126
Thread 0: j = 31
Thread 2: j = 91
Thread 1: j = 58
Thread 3: j = 127
Thread 2: j = 92
Thread 2: j = 93
Thread 1: j = 59
Thread 2: j = 94
Thread 1: j = 60
Thread 2: j = 95
Thread 1: j = 61
Thread 1: j = 62
Thread 1: j = 63
All tasks completed.
Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7 > Output  time = 2631.7 ms
------------------
The Total Time Consumed time = 2.96111e+06 ms
------------------

END: Input > Layer1 > Layer2 > Layer3 > Layer4 > Layer5 > Layer6 > Layer7 > Output
------------------
Start Decrypt batch
Decrypt batch time = 30.768 ms
------------------



SDFS:
-0.485396,	-0.488677,	-0.491629,	-0.494271,	-0.49662,	-0.498693,	-0.500507,	-0.502078,	-0.503423,	-0.504556,	-0.505493,	-0.506248,	-0.506834,	-0.507266,	-0.507555,	-0.507715,	-0.507757,	-0.507692,	-0.507531,	-0.507285,	-0.506962,	-0.506573,	-0.506125,	-0.505627,	-0.505087,	-0.504512,	-0.503909,	-0.503283,	-0.502641,	-0.501989,	-0.501331,	-0.500672,	-0.500016,	-0.499368,	-0.49873,	-0.498107,	-0.4975,	-0.496913,	-0.496348,	-0.495807,	-0.495291,	-0.494803,	-0.494344,	-0.493914,	-0.493514,	-0.493146,	-0.49281,	-0.492505,	-0.492233,	-0.491993,	-0.491785,	-0.491608,	-0.491463,	-0.491349,	-0.491266,	-0.491212,	-0.491187,	-0.49119,	-0.491221,	-0.491278,	-0.49136,	-0.491466,	-0.491596,	-0.491748,	-0.491921,	-0.492114,	-0.492325,	-0.492554,	-0.4928,	-0.49306,	-0.493335,	-0.493623,	-0.493922,	-0.494232,	-0.494552,	-0.49488,	-0.495215,	-0.495556,	-0.495903,	-0.496254,	-0.496608,	-0.496964,	-0.497322,	-0.49768,	-0.498037,	-0.498393,	-0.498748,	-0.499099,	-0.499447,	-0.499791,	-0.50013,	-0.500463,	-0.50079,	-0.501111,	-0.501424,	-0.50173,	-0.502027,	-0.502317,	-0.502597,	-0.502868,	-0.503129,	-0.50338,	-0.503621,	-0.503852,	-0.504073,	-0.504282,	-0.50448,	-0.504668,	-0.504844,	-0.505009,	-0.505163,	-0.505305,	-0.505437,	-0.505556,	-0.505665,	-0.505762,	-0.505848,	-0.505924,	-0.505988,	-0.506041,	-0.506084,	-0.506116,	-0.506137,	-0.506149,	-0.50615,	-0.506142,	-0.506124,	-0.506096,	-0.50606,	-0.506014,	-0.50596,	-0.505897,	-0.505827,	-0.505748,	-0.505662,	-0.505568,	-0.505467,	-0.505359,	-0.505245,	-0.505125,	-0.504999,	-0.504867,	-0.504729,	-0.504587,	-0.50444,	-0.504288,	-0.504132,	-0.503972,	-0.503809,	-0.503642,	-0.503472,	-0.503299,	-0.503124,	-0.502946,	-0.502767,	-0.502585,	-0.502403,	-0.502219,	-0.502034,	-0.501848,	-0.501662,	-0.501476,	-0.50129,	-0.501104,	-0.500918,	-0.500734,	-0.50055,	-0.500367,	-0.500185,	-0.500005,	-0.499827,	-0.499651,	-0.499477,	-0.499305,	-0.499135,	-0.498968,	-0.498804,	-0.498642,	-0.498484,	-0.498329,	-0.498177,	-0.498028,	-0.497883,	-0.497742,	-0.497604,	-0.49747,	-0.497341,	-0.497215,	-0.497093,	-0.496976,	-0.496863,	-0.496754,	-0.49665,	-0.49655,	-0.496455,	-0.496364,	-0.496278,	-0.496196,	-0.496119,	-0.496047,	-0.49598,	-0.495917,	-0.495859,	-0.495806,	-0.495758,	-0.495714,	-0.495675,	-0.495641,	-0.495611,	-0.495586,	-0.495566,	-0.495551,	-0.49554,	-0.495534,	-0.495532,	-0.495535,	-0.495542,	-0.495554,	-0.49557,	-0.49559,	-0.495615,	-0.495644,	-0.495676,	-0.495713,	-0.495754,	-0.495799,	-0.495848,	-0.4959,	-0.495956,	-0.496016,	-0.496079,	-0.496146,	-0.496216,	-0.496289,	-0.496365,	-0.496445,	-0.496527,	-0.496613,	-0.496701,	-0.496792,	-0.496885,	-0.496981,	-0.49708,	-0.497181,	-0.497284,	-0.497389,	-0.497496,	-0.497605,	-0.497715,	-0.497828,	-0.497942,	-0.498057,	-0.498174,	-0.498292,	-0.498412,	-0.498532,	-0.498654,	-0.498776,	-0.498899,	-0.499023,	-0.499147,	-0.499272,	-0.499397,	-0.499522,	-0.499647,	-0.499773,	-0.499898,	-0.500024,	-0.500149,	-0.500274,	-0.500398,	-0.500522,	-0.500645,	-0.500768,	-0.500889,	-0.50101,	-0.50113,	-0.501249,	-0.501367,	-0.501484,	-0.501599,	-0.501713,	-0.501825,	-0.501936,	-0.502045,	-0.502153,	-0.502259,	-0.502363,	-0.502465,	-0.502566,	-0.502664,	-0.50276,	-0.502854,	-0.502946,	-0.503036,	-0.503123,	-0.503208,	-0.503291,	-0.503371,	-0.503448,	-0.503524,	-0.503596,	-0.503666,	-0.503733,	-0.503798,	-0.50386,	-0.503919,	-0.503975,	-0.504028,	-0.504079,	-0.504127,	-0.504171,	-0.504213,	-0.504252,	-0.504288,	-0.504321,	-0.504351,	-0.504378,	-0.504403,	-0.504424,	-0.504442,	-0.504457,	-0.504469,	-0.504478,	-0.504484,	-0.504487,	-0.504487,	-0.504484,	-0.504478,	-0.504469,	-0.504457,	-0.504442,	-0.504425,	-0.504404,	-0.50438,	-0.504354,	-0.504325,	-0.504293,	-0.504258,	-0.504221,	-0.50418,	-0.504138,	-0.504092,	-0.504044,	-0.503993,	-0.50394,	-0.503884,	-0.503826,	-0.503765,	-0.503702,	-0.503636,	-0.503569,	-0.503499,	-0.503426,	-0.503352,	-0.503276,	-0.503197,	-0.503117,	-0.503034,	-0.50295,	-0.502863,	-0.502775,	-0.502686,	-0.502594,	-0.502501,	-0.502406,	-0.50231,	-0.502212,	-0.502113,	-0.502013,	-0.501911,	-0.501808,	-0.501704,	-0.501599,	-0.501493,	-0.501386,	-0.501278,	-0.501169,	-0.501059,	-0.500948,	-0.500837,	-0.500725,	-0.500613,	-0.5005,	-0.500387,	-0.500273,	-0.500159,	-0.500045,	-0.499931,	-0.499816,	-0.499702,	-0.499587,	-0.499472,	-0.499358,	-0.499244,	-0.49913,	-0.499016,	-0.498903,	-0.49879,	-0.498677,	-0.498565,	-0.498454,	-0.498343,	-0.498233,	-0.498123,	-0.498015,	-0.497907,	-0.4978,	-0.497694,	-0.497589,	-0.497485,	-0.497383,	-0.497281,	-0.49718,	-0.497081,	-0.496983,	-0.496886,	-0.496791,	-0.496697,	-0.496605,	-0.496514,	-0.496424,	-0.496336,	-0.49625,	-0.496165,	-0.496082,	-0.496001,	-0.495921,	-0.495844,	-0.495768,	-0.495693,	-0.495621,	-0.495551,	-0.495482,	-0.495416,	-0.495351,	-0.495288,	-0.495228,	-0.495169,	-0.495112,	-0.495058,	-0.495006,	-0.494955,	-0.494907,	-0.494861,	-0.494817,	-0.494775,	-0.494736,	-0.494698,	-0.494663,	-0.49463,	-0.494599,	-0.49457,	-0.494544,	-0.49452,	-0.494498,	-0.494478,	-0.49446,	-0.494445,	-0.494432,	-0.494421,	-0.494412,	-0.494406,	-0.494401,	-0.494399,	-0.494399,	-0.494402,	-0.494406,	-0.494412,	-0.494421,	-0.494432,	-0.494445,	-0.49446,	-0.494477,	-0.494496,	-0.494517,	-0.49454,	-0.494566,	-0.494593,	-0.494622,	-0.494653,	-0.494686,	-0.494721,	-0.494758,	-0.494797,	-0.494837,	-0.49488,	-0.494924,	-0.49497,	-0.495017,	-0.495067,	-0.495118,	-0.495171,	-0.495225,	-0.495281,	-0.495338,	-0.495397,	-0.495457,	-0.495519,	-0.495583,	-0.495647,	-0.495713,	-0.495781,	-0.49585,	-0.495919,	-0.495991,	-0.496063,	-0.496137,	-0.496211,	-0.496287,	-0.496364,	-0.496441,	-0.49652,	-0.4966,	-0.49668,	-0.496762,	-0.496844,	-0.496927,	-0.497011,	-0.497095,	-0.497181,	-0.497266,	-0.497353,	-0.49744,	-0.497527,	-0.497615,	-0.497704,	-0.497792,	-0.497882,	-0.497971,	-0.498061,	-0.498151,	-0.498242,	-0.498332,	-0.498423,	-0.498513,	-0.498604,	-0.498695,	-0.498786,	-0.498877,	-0.498968,	-0.499058,	-0.499149,	-0.499239,	-0.49933,	-0.49942,	-0.499509,	-0.499599,	-0.499688,	-0.499776,	-0.499864,	-0.499952,	-0.50004,	-0.500126,	-0.500213,	-0.500298,	-0.500384,	-0.500468,	-0.500552,	-0.500635,	-0.500717,	-0.500799,	-0.50088,	-0.50096,	-0.50104,	-0.501118,	-0.501196,	-0.501272,	-0.501348,	-0.501423,	-0.501497,	-0.50157,	-0.501641,	-0.501712,	-0.501782,	-0.501851,	-0.501918,	-0.501985,	-0.50205,	-0.502114,	-0.502177,	-0.502239,	-0.502299,	-0.502358,	-0.502417,	-0.502473,	-0.502529,	-0.502583,	-0.502636,	-0.502687,	-0.502738,	-0.502787,	-0.502834,	-0.50288,	-0.502925,	-0.502968,	-0.50301,	-0.503051,	-0.50309,	-0.503128,	-0.503164,	-0.503199,	-0.503232,	-0.503264,	-0.503295,	-0.503324,	-0.503352,	-0.503378,	-0.503402,	-0.503425,	-0.503447,	-0.503467,	-0.503486,	-0.503503,	-0.503519,	-0.503533,	-0.503546,	-0.503558,	-0.503567,	-0.503576,	-0.503583,	-0.503588,	-0.503592,	-0.503595,	-0.503596,	-0.503596,	-0.503594,	-0.503591,	-0.503586,	-0.50358,	-0.503573,	-0.503564,	-0.503554,	-0.503542,	-0.503529,	-0.503515,	-0.503499,	-0.503482,	-0.503463,	-0.503444,	-0.503423,	-0.5034,	-0.503377,	-0.503352,	-0.503326,	-0.503298,	-0.50327,	-0.50324,	-0.503209,	-0.503177,	-0.503143,	-0.503109,	-0.503073,	-0.503036,	-0.502998,	-0.502959,	-0.502919,	-0.502878,	-0.502836,	-0.502793,	-0.502748,	-0.502703,	-0.502657,	-0.50261,	-0.502562,	-0.502513,	-0.502463,	-0.502412,	-0.502361,	-0.502308,	-0.502255,	-0.502201,	-0.502146,	-0.50209,	-0.502034,	-0.501977,	-0.501919,	-0.50186,	-0.501801,	-0.501741,	-0.501681,	-0.50162,	-0.501558,	-0.501496,	-0.501434,	-0.50137,	-0.501307,	-0.501242,	-0.501178,	-0.501113,	-0.501047,	-0.500982,	-0.500915,	-0.500849,	-0.500782,	-0.500715,	-0.500647,	-0.50058,	-0.500512,	-0.500443,	-0.500375,	-0.500306,	-0.500238,	-0.500169,	-0.5001,	-0.500031,	-0.499962,	-0.499893,	-0.499823,	-0.499754,	-0.499685,	-0.499616,	-0.499547,	-0.499477,	-0.499409,	-0.49934,	-0.499271,	-0.499202,	-0.499134,	-0.499066,	-0.498998,	-0.49893,	-0.498862,	-0.498795,	-0.498728,	-0.498661,	-0.498595,	-0.498529,	-0.498463,	-0.498398,	-0.498333,	-0.498268,	-0.498204,	-0.49814,	-0.498077,	-0.498014,	-0.497952,	-0.49789,	-0.497829,	-0.497768,	-0.497708,	-0.497649,	-0.49759,	-0.497531,	-0.497474,	-0.497416,	-0.49736,	-0.497304,	-0.497249,	-0.497194,	-0.497141,	-0.497087,	-0.497035,	-0.496983,	-0.496933,	-0.496882,	-0.496833,	-0.496784,	-0.496737,	-0.49669,	-0.496643,	-0.496598,	-0.496554,	-0.49651,	-0.496467,	-0.496425,	-0.496384,	-0.496344,	-0.496305,	-0.496266,	-0.496229,	-0.496192,	-0.496157,	-0.496122,	-0.496088,	-0.496055,	-0.496023,	-0.495992,	-0.495962,	-0.495933,	-0.495905,	-0.495878,	-0.495852,	-0.495827,	-0.495803,	-0.49578,	-0.495758,	-0.495737,	-0.495717,	-0.495698,	-0.49568,	-0.495663,	-0.495647,	-0.495632,	-0.495618,	-0.495605,	-0.495594,	-0.495583,	-0.495573,	-0.495564,	-0.495556,	-0.49555,	-0.495544,	-0.495539,	-0.495536,	-0.495533,	-0.495532,	-0.495531,	-0.495532,	-0.495533,	-0.495536,	-0.495539,	-0.495544,	-0.49555,	-0.495556,	-0.495564,	-0.495572,	-0.495582,	-0.495593,	-0.495604,	-0.495617,	-0.49563,	-0.495645,	-0.49566,	-0.495677,	-0.495694,	-0.495713,	-0.495732,	-0.495752,	-0.495773,	-0.495796,	-0.495819,	-0.495843,	-0.495867,	-0.495893,	-0.49592,	-0.495947,	-0.495976,	-0.496005,	-0.496035,	-0.496066,	-0.496098,	-0.496131,	-0.496164,	-0.496199,	-0.496234,	-0.49627,	-0.496306,	-0.496344,	-0.496382,	-0.496421,	-0.496461,	-0.496501,	-0.496543,	-0.496585,	-0.496627,	-0.496671,	-0.496715,	-0.496759,	-0.496805,	-0.496851,	-0.496897,	-0.496944,	-0.496992,	-0.497041,	-0.49709,	-0.497139,	-0.497189,	-0.49724,	-0.497291,	-0.497343,	-0.497395,	-0.497448,	-0.497501,	-0.497555,	-0.497609,	-0.497664,	-0.497719,	-0.497775,	-0.49783,	-0.497887,	-0.497943,	-0.498,	-0.498058,	-0.498116,	-0.498174,	-0.498232,	-0.498291,	-0.498349,	-0.498409,	-0.498468,	-0.498528,	-0.498588,	-0.498648,	-0.498708,	-0.498769,	-0.498829,	-0.49889,	-0.498951,	-0.499012,	-0.499073,	-0.499135,	-0.499196,	-0.499258,	-0.499319,	-0.499381,	-0.499442,	-0.499504,	-0.499566,	-0.499627,	-0.499689,	-0.49975,	-0.499812,	-0.499873,	-0.499934,	-0.499996,	-0.500057,	-0.500118,	-0.500179,	-0.500239,	-0.5003,	-0.50036,	-0.50042,	-0.50048,	-0.50054,	-0.5006,	-0.500659,	-0.500718,	-0.500777,	-0.500835,	-0.500893,	-0.500951,	-0.501008,	-0.501066,	-0.501122,	-0.501179,	-0.501235,	-0.501291,	-0.501346,	-0.501401,	-0.501455,	-0.501509,	-0.501563,	-0.501616,	-0.501669,	-0.501721,	-0.501773,	-0.501824,	-0.501874,	-0.501925,	-0.501974,	-0.502023,	-0.502072,	-0.50212,	-0.502167,	-0.502214,	-0.50226,	-0.502306,	-0.50235,	-0.502395,	-0.502438,	-0.502481,	-0.502524,	-0.502566,	-0.502607,	-0.502647,	-0.502687,	-0.502726,	-0.502764,	-0.502801,	-0.502838,	-0.502874,	-0.50291,	-0.502944,	-0.502978,	-0.503011,	-0.503044,	-0.503075,	-0.503106,	-0.503136,	-0.503165,	-0.503194,	-0.503221,	-0.503248,	-0.503274,	-0.503299,	-0.503323,	-0.503347,	-0.503369,	-0.503391,	-0.503412,	-0.503432,	-0.503452,	-0.50347,	-0.503488,	-0.503504,	-0.50352,	-0.503535,	-0.503549,	-0.503562,	-0.503574,	-0.503586,	-0.503596,	-0.503606,	-0.503615,	-0.503623,	-0.50363,	-0.503636,	-0.503641,	-0.503645,	-0.503649,	-0.503651,	-0.503653,	-0.503653,	-0.503653,	-0.503652,	-0.50365,	-0.503647,	-0.503643,	-0.503639,	-0.503633,	-0.503627,	-0.503619,	-0.503611,	-0.503602,	-0.503592,	-0.503581,	-0.503569,	-0.503556,	-0.503543,	-0.503528,	-0.503513,	-0.503497,	-0.50348,	-0.503462,	-0.503443,	-0.503423,	-0.503403,	-0.503382,	-0.50336,	-0.503337,	-0.503313,	-0.503288,	-0.503263,	-0.503236,	-0.503209,	-0.503181,	-0.503153,	-0.503123,	-0.503093,	-0.503062,	-0.50303,	-0.502997,	-0.502964,	-0.50293,	-0.502895,	-0.502859,	-0.502823,	-0.502786,	-0.502748,	-0.50271,	-0.502671,	-0.502631,	-0.50259,	-0.502549,	-0.502507,	-0.502464,	-0.502421,	-0.502377,	-0.502332,	-0.502287,	-0.502242,	-0.502195,	-0.502148,	-0.5021,	-0.502052,	-0.502004,	-0.501954,	-0.501904,	-0.501854,	-0.501803,	-0.501751,	-0.5017,	-0.501647,	-0.501594,	-0.501541,	-0.501487,	-0.501432,	-0.501377,	-0.501322,	-0.501266,	-0.50121,	-0.501154,	-0.501097,	-0.501039,	-0.500982,	-0.500924,	-0.500865,	-0.500806,	-0.500747,	-0.500688,	-0.500628,	-0.500568,	-0.500508,	-0.500447,	-0.500387,	-0.500326,	-0.500264,	-0.500203,	-0.500141,	-0.500079,	-0.500017,	-0.499955,	-0.499892,	-0.49983,	-0.499767,	-0.499704,	-0.499641,	-0.499578,	-0.499515,	-0.499451,	-0.499388,	-0.499325,	-0.499261,	-0.499198,	-0.499134,	-0.499071,	-0.499007,	-0.498944,	-0.49888,	-0.498817,	-0.498754,	-0.49869,	-0.498627,	-0.498564,	-0.498501,	-0.498438,	-0.498375,	-0.498313,	-0.49825,	-0.498188,	-0.498126,	-0.498064,	-0.498002,	-0.497941,	-0.497879,	-0.497818,	-0.497757,	-0.497697,	-0.497636,	-0.497576,	-0.497516,	-0.497457,	-0.497397,	-0.497339,	-0.49728,	-0.497222,	-0.497164,	-0.497106,	-0.497049,	-0.496992,	-0.496936,	-0.49688,	-0.496825,	-0.496769,	-0.496715,	-0.496661,	-0.496607,	-0.496553,	-0.496501,	-0.496448,	-0.496396,	-0.496345,	-0.496294,	-0.496244,	-0.496194,	-0.496144,	-0.496096,	-0.496047,	-0.496,	-0.495953,	-0.495906,	-0.49586,	-0.495815,	-0.49577,	-0.495726,	-0.495683,	-0.49564,	-0.495598,	-0.495556,	-0.495515,	-0.495475,	-0.495435,	-0.495397,	-0.495358,	-0.495321,	-0.495284,	-0.495248,	-0.495212,	-0.495177,	-0.495143,	-0.49511,	-0.495077,	-0.495046,	-0.495014,	-0.494984,	-0.494954,	-0.494925,	-0.494897,	-0.49487,	-0.494843,	-0.494817,	-0.494792,	-0.494768,	-0.494745,	-0.494722,	-0.4947,	-0.494679,	-0.494659,	-0.494639,	-0.49462,	-0.494602,	-0.494585,	-0.494569,	-0.494553,	-0.494539,	-0.494525,	-0.494512,	-0.4945,	-0.494488,	-0.494478,	-0.494468,	-0.494459,	-0.494451,	-0.494444,	-0.494437,	-0.494432,	-0.494427,	-0.494423,	-0.49442,	-0.494418,	-0.494416,	-0.494415,	-0.494416,	-0.494417,	-0.494419,	-0.494421,	-0.494425,	-0.494429,	-0.494434,	-0.49444,	-0.494447,	-0.494455,	-0.494463,	-0.494473,	-0.494483,	-0.494494,	-0.494506,	-0.494518,	-0.494531,	-0.494546,	-0.494561,	-0.494576,	-0.494593,	-0.49461,	-0.494628,	-0.494647,	-0.494667,	-0.494687,	-0.494709,	-0.494731,	-0.494753,	-0.494777,	-0.494801,	-0.494826,	-0.494852,	-0.494878,	-0.494906,	-0.494934,	-0.494962,	-0.494992,	-0.495022,	-0.495053,	-0.495084,	-0.495116,	-0.495149,	-0.495183,	-0.495217,	-0.495252,	-0.495288,	-0.495324,	-0.495361,	-0.495398,	-0.495436,	-0.495475,	-0.495515,	-0.495555,	-0.495595,	-0.495637,	-0.495679,	-0.495721,	-0.495764,	-0.495808,	-0.495852,	-0.495897,	-0.495942,	-0.495988,	-0.496034,	-0.496081,	-0.496128,	-0.496176,	-0.496225,	-0.496274,	-0.496323,	-0.496373,	-0.496423,	-0.496474,	-0.496525,	-0.496577,	-0.496629,	-0.496681,	-0.496734,	-0.496788,	-0.496841,	-0.496896,	-0.49695,	-0.497005,	-0.49706,	-0.497116,	-0.497172,	-0.497228,	-0.497284,	-0.497341,	-0.497398,	-0.497456,	-0.497514,	-0.497572,	-0.49763,	-0.497689,	-0.497747,	-0.497806,	-0.497866,	-0.497925,	-0.497985,	-0.498045,	-0.498105,	-0.498165,	-0.498225,	-0.498286,	-0.498346,	-0.498407,	-0.498468,	-0.498529,	-0.49859,	-0.498652,	-0.498713,	-0.498775,	-0.498836,	-0.498898,	-0.498959,	-0.499021,	-0.499083,	-0.499144,	-0.499206,	-0.499268,	-0.499329,	-0.499391,	-0.499453,	-0.499514,	-0.499576,	-0.499637,	-0.499699,	-0.49976,	-0.499821,	-0.499882,	-0.499943,	-0.500004,	-0.500065,	-0.500126,	-0.500186,	-0.500247,	-0.500307,	-0.500367,	-0.500427,	-0.500487,	-0.500546,	-0.500605,	-0.500664,	-0.500723,	-0.500782,	-0.50084,	-0.500898,	-0.500956,	-0.501013,	-0.501071,	-0.501128,	-0.501184,	-0.501241,	-0.501297,	-0.501352,	-0.501408,	-0.501463,	-0.501518,	-0.501572,	-0.501626,	-0.50168,	-0.501733,	-0.501786,	-0.501838,	-0.50189,	-0.501942,	-0.501993,	-0.502044,	-0.502094,	-0.502144,	-0.502194,	-0.502243,	-0.502291,	-0.502339,	-0.502387,	-0.502434,	-0.502481,	-0.502527,	-0.502573,	-0.502618,	-0.502663,	-0.502707,	-0.50275,	-0.502793,	-0.502836,	-0.502878,	-0.502919,	-0.50296,	-0.503001,	-0.50304,	-0.50308,	-0.503118,	-0.503156,	-0.503194,	-0.503231,	-0.503267,	-0.503303,	-0.503338,	-0.503372,	-0.503406,	-0.503439,	-0.503472,	-0.503504,	-0.503535,	-0.503566,	-0.503596,	-0.503625,	-0.503654,	-0.503682,	-0.50371,	-0.503736,	-0.503763,	-0.503788,	-0.503813,	-0.503837,	-0.50386,	-0.503883,	-0.503905,	-0.503927,	-0.503948,	-0.503968,	-0.503987,	-0.504006,	-0.504024,	-0.504041,	-0.504057,	-0.504073,	-0.504089,	-0.504103,	-0.504117,	-0.50413,	-0.504142,	-0.504154,	-0.504165,	-0.504175,	-0.504185,	-0.504194,	-0.504202,	-0.504209,	-0.504216,	-0.504222,	-0.504227,	-0.504232,	-0.504235,	-0.504239,	-0.504241,	-0.504243,	-0.504244,	-0.504244,	-0.504243,	-0.504242,	-0.50424,	-0.504238,	-0.504235,	-0.504231,	-0.504226,	-0.504221,	-0.504214,	-0.504208,	-0.5042,	-0.504192,	-0.504183,	-0.504174,	-0.504163,	-0.504152,	-0.504141,	-0.504128,	-0.504115,	-0.504102,	-0.504087,	-0.504072,	-0.504056,	-0.50404,	-0.504023,	-0.504005,	-0.503987,	-0.503968,	-0.503948,	-0.503928,	-0.503907,	-0.503885,	-0.503863,	-0.50384,	-0.503816,	-0.503792,	-0.503767,	-0.503741,	-0.503715,	-0.503689,	-0.503661,	-0.503633,	-0.503605,	-0.503576,	-0.503546,	-0.503516,	-0.503485,	-0.503453,	-0.503421,	-0.503389,	-0.503355,	-0.503322,	-0.503287,	-0.503252,	-0.503217,	-0.503181,	-0.503144,	-0.503107,	-0.50307,	-0.503032,	-0.502993,	-0.502954,	-0.502914,	-0.502874,	-0.502834,	-0.502793,	-0.502751,	-0.502709,	-0.502666,	-0.502623,	-0.50258,	-0.502536,	-0.502492,	-0.502447,	-0.502402,	-0.502356,	-0.50231,	-0.502264,	-0.502217,	-0.502169,	-0.502122,	-0.502074,	-0.502025,	-0.501976,	-0.501927,	-0.501878,	-0.501828,	-0.501778,	-0.501727,	-0.501676,	-0.501625,	-0.501573,	-0.501521,	-0.501469,	-0.501417,	-0.501364,	-0.501311,	-0.501257,	-0.501204,	-0.50115,	-0.501096,	-0.501041,	-0.500986,	-0.500932,	-0.500876,	-0.500821,	-0.500766,	-0.50071,	-0.500654,	-0.500598,	-0.500541,	-0.500485,	-0.500428,	-0.500371,	-0.500314,	-0.500257,	-0.5002,	-0.500142,	-0.500085,	-0.500027,	-0.499969,	-0.499911,	-0.499853,	-0.499795,	-0.499737,	-0.499679,	-0.49962,	-0.499562,	-0.499504,	-0.499445,	-0.499387,	-0.499328,	-0.499269,	-0.499211,	-0.499152,	-0.499094,	-0.499035,	-0.498976,	-0.498918,	-0.498859,	-0.498801,	-0.498742,	-0.498684,	-0.498626,	-0.498567,	-0.498509,	-0.498451,	-0.498393,	-0.498335,	-0.498277,	-0.498219,	-0.498162,	-0.498104,	-0.498047,	-0.497989,	-0.497932,	-0.497875,	-0.497818,	-0.497762,	-0.497705,	-0.497649,	-0.497593,	-0.497537,	-0.497481,	-0.497426,	-0.49737,	-0.497315,	-0.49726,	-0.497206,	-0.497151,	-0.497097,	-0.497043,	-0.496989,	-0.496936,	-0.496883,	-0.49683,	-0.496777,	-0.496725,	-0.496673,	-0.496621,	-0.49657,	-0.496519,	-0.496468,	-0.496418,	-0.496368,	-0.496318,	-0.496269,	-0.49622,	-0.496171,	-0.496122,	-0.496074,	-0.496027,	-0.49598,	-0.495933,	-0.495886,	-0.49584,	-0.495795,	-0.495749,	-0.495704,	-0.49566,	-0.495616,	-0.495572,	-0.495529,	-0.495487,	-0.495444,	-0.495402,	-0.495361,	-0.49532,	-0.49528,	-0.49524,	-0.4952,	-0.495161,	-0.495123,	-0.495085,	-0.495047,	-0.49501,	-0.494973,	-0.494937,	-0.494902,	-0.494866,	-0.494832,	-0.494798,	-0.494764,	-0.494731,	-0.494699,	-0.494667,	-0.494636,	-0.494605,	-0.494574,	-0.494545,	-0.494515,	-0.494487,	-0.494459,	-0.494431,	-0.494404,	-0.494378,	-0.494352,	-0.494327,	-0.494302,	-0.494278,	-0.494254,	-0.494231,	-0.494209,	-0.494187,	-0.494166,	-0.494146,	-0.494126,	-0.494106,	-0.494088,	-0.494069,	-0.494052,	-0.494035,	-0.494019,	-0.494003,	-0.493988,	-0.493973,	-0.493959,	-0.493946,	-0.493934,	-0.493922,	-0.49391,	-0.493899,	-0.493889,	-0.49388,	-0.493871,	-0.493863,	-0.493855,	-0.493848,	-0.493842,	-0.493836,	-0.493831,	-0.493827,	-0.493823,	-0.49382,	-0.493817,	-0.493815,	-0.493814,	-0.493814,	-0.493814,	-0.493814,	-0.493816,	-0.493818,	-0.49382,	-0.493824,	-0.493827,	-0.493832,	-0.493837,	-0.493843,	-0.493849,	-0.493856,	-0.493864,	-0.493872,	-0.493881,	-0.493891,	-0.493901,	-0.493912,	-0.493924,	-0.493936,	-0.493949,	-0.493962,	-0.493976,	-0.493991,	-0.494006,	-0.494022,	-0.494038,	-0.494055,	-0.494073,	-0.494091,	-0.49411,	-0.49413,	-0.49415,	-0.494171,	-0.494192,	-0.494214,	-0.494237,	-0.49426,	-0.494284,	-0.494308,	-0.494333,	-0.494358,	-0.494385,	-0.494411,	-0.494439,	-0.494466,	-0.494495,	-0.494524,	-0.494553,	-0.494583,	-0.494614,	-0.494645,	-0.494677,	-0.494709,	-0.494742,	-0.494776,	-0.49481,	-0.494844,	-0.494879,	-0.494915,	-0.494951,	-0.494987,	-0.495025,	-0.495062,	-0.4951,	-0.495139,	-0.495178,	-0.495218,	-0.495258,	-0.495298,	-0.495339,	-0.495381,	-0.495423,	-0.495466,	-0.495508,	-0.495552,	-0.495596,	-0.49564,	-0.495685,	-0.49573,	-0.495776,	-0.495822,	-0.495868,	-0.495915,	-0.495963,	-0.49601,	-0.496058,	-0.496107,	-0.496156,	-0.496205,	-0.496255,	-0.496305,	-0.496355,	-0.496406,	-0.496457,	-0.496509,	-0.496561,	-0.496613,	-0.496666,	-0.496718,	-0.496772,	-0.496825,	-0.496879,	-0.496933,	-0.496988,	-0.497042,	-0.497097,	-0.497153,	-0.497208,	-0.497264,	-0.49732,	-0.497377,	-0.497433,	-0.49749,	-0.497547,	-0.497605,	-0.497662,	-0.49772,	-0.497778,	-0.497836,	-0.497895,	-0.497953,	-0.498012,	-0.498071,	-0.49813,	-0.498189,	-0.498249,	-0.498309,	-0.498368,	-0.498428,	-0.498488,	-0.498548,	-0.498609,	-0.498669,	-0.49873,	-0.49879,	-0.498851,	-0.498912,	-0.498972,	-0.499033,	-0.499094,	-0.499155,	-0.499216,	-0.499277,	-0.499339,	-0.4994,	-0.499461,	-0.499522,	-0.499583,	-0.499645,	-0.499706,	-0.499767,	-0.499828,	-0.499889,	-0.49995,	-0.500011,	-0.500072,	-0.500133,	-0.500194,	-0.500255,	-0.500315,	-0.500376,	-0.500436,	-0.500497,	-0.500557,	-0.500617,	-0.500677,	-0.500737,	-0.500797,	-0.500857,	-0.500916,	-0.500975,	-0.501034,	-0.501093,	-0.501152,	-0.501211,	-0.501269,	-0.501327,	-0.501385,	-0.501443,	-0.5015,	-0.501558,	-0.501615,	-0.501671,	-0.501728,	-0.501784,	-0.50184,	-0.501896,	-0.501951,	-0.502006,	-0.502061,	-0.502116,	-0.50217,	-0.502224,	-0.502277,	-0.502331,	-0.502383,	-0.502436,	-0.502488,	-0.50254,	-0.502591,	-0.502642,	-0.502693,	-0.502743,	-0.502793,	-0.502843,	-0.502892,	-0.502941,	-0.502989,	-0.503037,	-0.503084,	-0.503131,	-0.503178,	-0.503224,	-0.503269,	-0.503314,	-0.503359,	-0.503403,	-0.503447,	-0.50349,	-0.503533,	-0.503575,	-0.503617,	-0.503658,	-0.503698,	-0.503739,	-0.503778,	-0.503817,	-0.503856,	-0.503894,	-0.503931,	-0.503968,	-0.504004,	-0.50404,	-0.504075,	-0.504109,	-0.504143,	-0.504177,	-0.50421,	-0.504242,	-0.504273,	-0.504304,	-0.504334,	-0.504364,	-0.504393,	-0.504422,	-0.504449,	-0.504477,	-0.504503,	-0.504529,	-0.504554,	-0.504579,	-0.504602,	-0.504626,	-0.504648,	-0.50467,	-0.504691,	-0.504711,	-0.504731,	-0.50475,	-0.504769,	-0.504786,	-0.504803,	-0.50482,	-0.504835,	-0.50485,	-0.504864,	-0.504877,	-0.50489,	-0.504902,	-0.504913,	-0.504924,	-0.504933,	-0.504942,	-0.504951,	-0.504958,	-0.504965,	-0.504971,	-0.504976,	-0.50498,	-0.504984,	-0.504987,	-0.504989,	-0.504991,	-0.504991,	-0.504991,	-0.50499,	-0.504989,	-0.504986,	-0.504983,	-0.504979,	-0.504974,	-0.504968,	-0.504962,	-0.504955,	-0.504947,	-0.504938,	-0.504929,	-0.504919,	-0.504907,	-0.504896,	-0.504883,	-0.50487,	-0.504855,	-0.50484,	-0.504824,	-0.504808,	-0.50479,	-0.504772,	-0.504753,	-0.504734,	-0.504713,	-0.504692,	-0.504669,	-0.504647,	-0.504623,	-0.504598,	-0.504573,	-0.504547,	-0.50452,	-0.504492,	-0.504464,	-0.504435,	-0.504405,	-0.504374,	-0.504343,	-0.50431,	-0.504277,	-0.504243,	-0.504209,	-0.504173,	-0.504137,	-0.5041,	-0.504063,	-0.504024,	-0.503985,	-0.503945,	-0.503904,	-0.503863,	-0.503821,	-0.503778,	-0.503734,	-0.50369,	-0.503645,	-0.503599,	-0.503552,	-0.503505,	-0.503457,	-0.503408,	-0.503359,	-0.503309,	-0.503258,	-0.503206,	-0.503154,	-0.503101,	-0.503048,	-0.502994,	-0.502939,	-0.502883,	-0.502827,	-0.50277,	-0.502712,	-0.502654,	-0.502595,	-0.502536,	-0.502476,	-0.502415,	-0.502353,	-0.502291,	-0.502229,	-0.502166,	-0.502102,	-0.502037,	-0.501972,	-0.501907,	-0.501841,	-0.501774,	-0.501707,	-0.501639,	-0.501571,	-0.501502,	-0.501432,	-0.501362,	-0.501292,	-0.501221,	-0.501149,	-0.501077,	-0.501005,	-0.500932,	-0.500858,	-0.500785,	-0.50071,	-0.500635,	-0.50056,	-0.500484,	-0.500408,	-0.500332,	-0.500255,	-0.500177,	-0.500099,	-0.500021,	-0.499943,	-0.499864,	-0.499784,	-0.499705,	-0.499625,	-0.499544,	-0.499464,	-0.499383,	-0.499302,	-0.49922,	-0.499138,	-0.499056,	-0.498973,	-0.498891,	-0.498808,	-0.498724,	-0.498641,	-0.498557,	-0.498473,	-0.498389,	-0.498305,	-0.49822,	-0.498136,	-0.498051,	-0.497966,	-0.497881,	-0.497795,	-0.49771,	-0.497624,	-0.497539,	-0.497453,	-0.497367,	-0.497281,	-0.497195,	-0.497109,	-0.497023,	-0.496937,	-0.49685,	-0.496764,	-0.496678,	-0.496592,	-0.496505,	-0.496419,	-0.496333,	-0.496247,	-0.496161,	-0.496075,	-0.495989,	-0.495903,	-0.495817,	-0.495732,	-0.495646,	-0.495561,	-0.495476,	-0.495391,	-0.495306,	-0.495221,	-0.495136,	-0.495052,	-0.494968,	-0.494884,	-0.4948,	-0.494717,	-0.494634,	-0.494551,	-0.494468,	-0.494386,	-0.494304,	-0.494222,	-0.49414,	-0.494059,	-0.493978,	-0.493898,	-0.493818,	-0.493738,	-0.493659,	-0.49358,	-0.493501,	-0.493423,	-0.493345,	-0.493268,	-0.493191,	-0.493115,	-0.493039,	-0.492964,	-0.492889,	-0.492814,	-0.49274,	-0.492667,	-0.492594,	-0.492522,	-0.49245,	-0.492379,	-0.492308,	-0.492238,	-0.492169,	-0.4921,	-0.492032,	-0.491965,	-0.491898,	-0.491831,	-0.491766,	-0.491701,	-0.491637,	-0.491573,	-0.49151,	-0.491448,	-0.491387,	-0.491326,	-0.491266,	-0.491207,	-0.491148,	-0.491091,	-0.491034,	-0.490978,	-0.490922,	-0.490868,	-0.490814,	-0.490761,	-0.490709,	-0.490658,	-0.490607,	-0.490558,	-0.490509,	-0.490462,	-0.490415,	-0.490369,	-0.490324,	-0.49028,	-0.490236,	-0.490194,	-0.490153,	-0.490112,	-0.490073,	-0.490034,	-0.489997,	-0.48996,	-0.489924,	-0.48989,	-0.489856,	-0.489824,	-0.489792,	-0.489761,	-0.489732,	-0.489703,	-0.489676,	-0.489649,	-0.489624,	-0.4896,	-0.489576,	-0.489554,	-0.489533,	-0.489513,	-0.489494,	-0.489476,	-0.48946,	-0.489444,	-0.489429,	-0.489416,	-0.489404,	-0.489392,	-0.489382,	-0.489373,	-0.489365,	-0.489359,	-0.489353,	-0.489349,	-0.489346,	-0.489344,	-0.489343,	-0.489343,	-0.489344,	-0.489347,	-0.489351,	-0.489356,	-0.489362,	-0.489369,	-0.489378,	-0.489387,	-0.489398,	-0.48941,	-0.489423,	-0.489438,	-0.489453,	-0.48947,	-0.489488,	-0.489507,	-0.489528,	-0.489549,	-0.489572,	-0.489596,	-0.489621,	-0.489647,	-0.489675,	-0.489704,	-0.489734,	-0.489765,	-0.489797,	-0.48983,	-0.489865,	-0.489901,	-0.489938,	-0.489976,	-0.490016,	-0.490056,	-0.490098,	-0.490141,	-0.490185,	-0.490231,	-0.490277,	-0.490325,	-0.490373,	-0.490423,	-0.490475,	-0.490527,	-0.49058,	-0.490635,	-0.49069,	-0.490747,	-0.490805,	-0.490864,	-0.490924,	-0.490985,	-0.491048,	-0.491111,	-0.491175,	-0.491241,	-0.491308,	-0.491375,	-0.491444,	-0.491514,	-0.491585,	-0.491657,	-0.49173,	-0.491804,	-0.491879,	-0.491954,	-0.492031,	-0.492109,	-0.492188,	-0.492268,	-0.492349,	-0.492431,	-0.492513,	-0.492597,	-0.492682,	-0.492767,	-0.492853,	-0.492941,	-0.493029,	-0.493118,	-0.493207,	-0.493298,	-0.49339,	-0.493482,	-0.493575,	-0.493669,	-0.493763,	-0.493859,	-0.493955,	-0.494052,	-0.494149,	-0.494248,	-0.494347,	-0.494446,	-0.494546,	-0.494647,	-0.494749,	-0.494851,	-0.494954,	-0.495057,	-0.495161,	-0.495266,	-0.495371,	-0.495476,	-0.495582,	-0.495689,	-0.495796,	-0.495903,	-0.496011,	-0.49612,	-0.496228,	-0.496338,	-0.496447,	-0.496557,	-0.496667,	-0.496777,	-0.496888,	-0.496999,	-0.49711,	-0.497222,	-0.497333,	-0.497445,	-0.497557,	-0.497669,	-0.497782,	-0.497894,	-0.498006,	-0.498119,	-0.498232,	-0.498344,	-0.498457,	-0.498569,	-0.498682,	-0.498794,	-0.498907,	-0.499019,	-0.499131,	-0.499243,	-0.499355,	-0.499466,	-0.499577,	-0.499688,	-0.499799,	-0.49991,	-0.50002,	-0.50013,	-0.500239,	-0.500348,	-0.500457,	-0.500565,	-0.500672,	-0.500779,	-0.500886,	-0.500992,	-0.501097,	-0.501202,	-0.501307,	-0.50141,	-0.501513,	-0.501615,	-0.501716,	-0.501817,	-0.501917,	-0.502016,	-0.502114,	-0.502211,	-0.502308,	-0.502403,	-0.502497,	-0.502591,	-0.502683,	-0.502775,	-0.502865,	-0.502954,	-0.503042,	-0.503129,	-0.503215,	-0.503299,	-0.503382,	-0.503464,	-0.503545,	-0.503624,	-0.503702,	-0.503778,	-0.503853,	-0.503927,	-0.503999,	-0.504069,	-0.504138,	-0.504205,	-0.504271,	-0.504335,	-0.504397,	-0.504458,	-0.504517,	-0.504574,	-0.504629,	-0.504683,	-0.504734,	-0.504784,	-0.504832,	-0.504877,	-0.504921,	-0.504963,	-0.505003,	-0.50504,	-0.505076,	-0.505109,	-0.50514,	-0.505169,	-0.505195,	-0.505219,	-0.505241,	-0.505261,	-0.505278,	-0.505293,	-0.505305,	-0.505315,	-0.505322,	-0.505326,	-0.505328,	-0.505328,	-0.505325,	-0.505319,	-0.50531,	-0.505298,	-0.505284,	-0.505267,	-0.505247,	-0.505224,	-0.505198,	-0.50517,	-0.505138,	-0.505103,	-0.505065,	-0.505024,	-0.50498,	-0.504933,	-0.504882,	-0.504829,	-0.504772,	-0.504711,	-0.504648,	-0.504581,	-0.50451,	-0.504436,	-0.504359,	-0.504278,	-0.504194,	-0.504106,	-0.504014,	-0.503919,	-0.50382,	-0.503717,	-0.503611,	-0.503501,	-0.503387,	-0.503269,	-0.503147,	-0.503022,	-0.502892,	-0.502758,	-0.502621,	-0.502479,	-0.502334,	-0.502184,	-0.50203,	-0.501872,	-0.501709,	-0.501543,	-0.501372,	-0.501197,	-0.501017,	-0.500833,	-0.500645,	-0.500452,	-0.500255,	-0.500053,	-0.499847,	-0.499636,	-0.499421,	-0.499201,	-0.498976,	-0.498746,	-0.498512,	-0.498273,	-0.49803,	-0.497781,	-0.497528,	-0.497269,	-0.497006,	-0.496738,	-0.496465,	-0.496187,	-0.495904,	-0.495616,	-0.495322,	-0.495024,	-0.49472,	-0.494411,	-0.494097,	-0.493778,	-0.493454,	-0.493124,	-0.492789,	-0.492448,	-0.492102,	-0.491751,	-0.491394,	-0.491032,	-0.490664,	-0.490291,	-0.489912,	-0.489528,	-0.489138,	-0.488742,	-0.488341,	-0.487934,	-0.487521,	-0.487102,	-0.486678,	-0.486248,	-0.485812,	-0.48537,	-0.484923,	-0.484469,	-0.48401,	-0.483544,	-0.483073,	-0.482596,	-0.482112,	-0.481623,	-0.481127,	-0.480626,	-0.480118,	-0.479604,	-0.479084,	-0.478558,	-0.478026,	-0.477487,	-0.476942,	-0.476391,	-0.475833,	-0.47527,	-0.4747,	-0.474123,	-0.47354,	-0.472951,	-0.472355,	-0.471753,	-0.471145,	-0.47053,	-0.469908,	-0.46928,	-0.468645,	-0.468004,	-0.467357,	-0.466702,	-0.466041,	-0.465374,	-0.4647,	-0.464019,	-0.463331,	-0.462637,	-0.461936,	-0.461229,	-0.460514,	-0.459793,	-0.459065,	-0.458331,	-0.457589,	-0.456841,	-0.456086,	-0.455324,	-0.454555,	-0.453779,	-0.452997,	-0.452208,	-0.451411,	-0.450608,	-0.449798,	-0.448981,	-0.448157,	-0.447326,	-0.446488,	-0.445643,	-0.444791,	-0.443932,	-0.443066,	-0.442194,	-0.441314,	-0.440427,	-0.439533,	-0.438632,	-0.437724,	-0.436808,	-0.435886,	-0.434957,	-0.434021,	-0.433077,	-0.432127,	-0.431169,	-0.430204,	-0.429233,	-0.428254,	-0.427268,	-0.426275,	-0.425274,	-0.424267,	-0.423252,	-0.422231,	-0.421202,	-0.420166,	-0.419123,	-0.418073,	-0.417016,	-0.415951,	-0.41488,	-0.413801,	-0.412716,	-0.411623,	-0.410523,	-0.409415,	-0.408301,	-0.40718,	-0.406051,	-0.404916,	-0.403773,	-0.402623,	-0.401466,	-0.400302,	-0.399131,	-0.397953,	-0.396767,	-0.395575,	-0.394376,	-0.393169,	-0.391956,	-0.390735,	-0.389507,	-0.388272,	-0.387031,	-0.385782,	-0.384526,	-0.383263,	-0.381994,	-0.380717,	-0.379433,	-0.378142,	-0.376845,	-0.37554,	-0.374228,	-0.37291,	-0.371585,	-0.370252,	-0.368913,	-0.367567,	-0.366214,	-0.364855,	-0.363488,	-0.362115,	-0.360734,	-0.359347,	-0.357954,	-0.356553,	-0.355146,	-0.353732,	-0.352311,	-0.350884,	-0.34945,	-0.348009,	-0.346562,	-0.345108,	-0.343647,	-0.34218,	-0.340706,	-0.339226,	-0.337739,	-0.336246,	-0.334746,	-0.33324,	-0.331727,	-0.330208,	-0.328682,	-0.32715,	-0.325612,	-0.324067,	-0.322516,	-0.320959,	-0.319395,	-0.317826,	-0.31625,	-0.314667,	-0.313079,	-0.311484,	-0.309884,	-0.308277,	-0.306664,	-0.305045,	-0.30342,	-0.301789,	-0.300152,	-0.29851,	-0.296861,	-0.295206,	-0.293546,	-0.291879,	-0.290207,	-0.288529,	-0.286846,	-0.285156,	-0.283461,	-0.28176,	-0.280054,	-0.278342,	-0.276625,	-0.274901,	-0.273173,	-0.271439,	-0.269699,	-0.267954,	-0.266204,	-0.264448,	-0.262687,	-0.260921,	-0.25915,	-0.257373,	-0.255591,	-0.253804,	-0.252012,	-0.250215,	-0.248412,	-0.246605,	-0.244793,	-0.242975,	-0.241153,	-0.239326,	-0.237494,	-0.235658,	-0.233816,	-0.23197,	-0.230119,	-0.228264,	-0.226404,	-0.224539,	-0.22267,	-0.220796,	-0.218918,	-0.217036,	-0.215149,	-0.213257,	-0.211362,	-0.209462,	-0.207557,	-0.205649,	-0.203737,	-0.20182,	-0.199899,	-0.197974,	-0.196046,	-0.194113,	-0.192176,	-0.190236,	-0.188292,	-0.186344,	-0.184392,	-0.182436,	-0.180477,	-0.178514,	-0.176548,	-0.174578,	-0.172604,	-0.170628,	-0.168647,	-0.166664,	-0.164677,	-0.162686,	-0.160693,	-0.158696,	-0.156696,	-0.154693,	-0.152687,	-0.150678,	-0.148666,	-0.146651,	-0.144633,	-0.142612,	-0.140589,	-0.138562,	-0.136533,	-0.134502,	-0.132468,	-0.130431,	-0.128391,	-0.126349,	-0.124305,	-0.122258,	-0.120209,	-0.118158,	-0.116104,	-0.114048,	-0.11199,	-0.10993,	-0.107868,	-0.105804,	-0.103738,	-0.101669,	-0.0995994,	-0.0975275,	-0.0954538,	-0.0933783,	-0.0913012,	-0.0892224,	-0.0871419,	-0.0850599,	-0.0829764,	-0.0808915,	-0.0788051,	-0.0767173,	-0.0746282,	-0.0725378,	-0.0704461,	-0.0683533,	-0.0662593,	-0.0641643,	-0.0620682,	-0.0599711,	-0.057873,	-0.055774,	-0.0536742,	-0.0515735,	-0.0494721,	-0.04737,	-0.0452672,	-0.0431638,	-0.0410597,	-0.0389552,	-0.0368502,	-0.0347447,	-0.0326389,	-0.0305327,	-0.0284263,	-0.0263195,	-0.0242126,	-0.0221055,	-0.0199984,	-0.0178911,	-0.0157839,	-0.0136767,	-0.0115695,	-0.00946253,	-0.00735571,	-0.00524911,	-0.00314278,	-0.00103677,	0.00106888,	0.00317412,	0.0052789,	0.00738318,	0.0094869,	0.01159,	0.0136925,	0.0157943,	0.0178954,	0.0199957,	0.0220951,	0.0241937,	0.0262914,	0.0283881,	0.0304837,	0.0325784,	0.0346719,	0.0367643,	0.0388555,	0.0409454,	0.0430341,	0.0451214,	0.0472073,	0.0492919,	0.0513749,	0.0534565,	0.0555365,	0.0576149,	0.0596917,	0.0617668,	0.0638401,	0.0659117,	0.0679814,	0.0700493,	0.0721153,	0.0741793,	0.0762414,	0.0783014,	0.0803593,	0.0824151,	0.0844687,	0.0865201,	0.0885693,	0.0906162,	0.0926607,	0.0947028,	0.0967426,	0.0987798,	0.100815,	0.102847,	0.104876,	0.106903,	0.108928,	0.110949,	0.112968,	0.114984,	0.116997,	0.119008,	0.121015,	0.12302,	0.125021,	0.12702,	0.129015,	0.131007,	0.132996,	0.134982,	0.136965,	0.138944,	0.140921,	0.142893,	0.144863,	0.146829,	0.148791,	0.15075,	0.152706,	0.154657,	0.156606,	0.15855,	0.160491,	0.162429,	0.164362,	0.166292,	0.168218,	0.17014,	0.172058,	0.173972,	0.175882,	0.177788,	0.17969,	0.181589,	0.183483,	0.185372,	0.187258,	0.18914,	0.191017,	0.19289,	0.194758,	0.196623,	0.198483,	0.200338,	0.202189,	0.204036,	0.205878,	0.207716,	0.209549,	0.211377,	0.213201,	0.215021,	0.216835,	0.218645,	0.22045,	0.22225,	0.224046,	0.225837,	0.227623,	0.229404,	0.23118,	0.232951,	0.234717,	0.236478,	0.238234,	0.239986,	0.241732,	0.243473,	0.245208,	0.246939,	0.248665,	0.250385,	0.2521,	0.25381,	0.255514,	0.257214,	0.258908,	0.260596,	0.262279,	0.263957,	0.26563,	0.267297,	0.268958,	0.270614,	0.272265,	0.27391,	0.275549,	0.277183,	0.278812,	0.280434,	0.282051,	0.283663,	0.285269,	0.286869,	0.288463,	0.290052,	0.291634,	0.293212,	0.294783,	0.296348,	0.297908,	0.299462,	0.30101,	0.302552,	0.304088,	0.305619,	0.307143,	0.308662,	0.310174,	0.311681,	0.313182,	0.314676,	0.316165,	0.317647,	0.319124,	0.320594,	0.322059,	0.323517,	0.32497,	0.326416,	0.327856,	0.32929,	0.330717,	0.332139,	0.333555,	0.334964,	0.336367,	0.337764,	0.339155,	0.340539,	0.341917,	0.343289,	0.344655,	0.346015,	0.347368,	0.348715,	0.350056,	0.35139,	0.352718,	0.35404,	0.355356,	0.356665,	0.357968,	0.359265,	0.360555,	0.361839,	0.363117,	0.364388,	0.365653,	0.366911,	0.368163,	0.369409,	0.370649,	0.371882,	0.373108,	0.374329,	0.375543,	0.37675,	0.377951,	0.379146,	0.380335,	0.381517,	0.382692,	0.383861,	0.385024,	0.386181,	0.387331,	0.388474,	0.389611,	0.390742,	0.391867,	0.392985,	0.394096,	0.395201,	0.3963,	0.397393,	0.398479,	0.399558,	0.400632,	0.401699,	0.402759,	0.403813,	0.404861,	0.405903,	0.406938,	0.407966,	0.408989,	0.410005,	0.411014,	0.412018,	0.413015,	0.414005,	0.41499,	0.415968,	0.416939,	0.417905,	0.418864,	0.419817,	0.420763,	0.421703,	0.422637,	0.423565,	0.424486,	0.425402,	0.426311,	0.427213,	0.42811,	0.429,	0.429884,	0.430762,	0.431634,	0.4325,	0.433359,	0.434212,	0.435059,	0.4359,	0.436735,	0.437564,	0.438387,	0.439203,	0.440014,	0.440818,	0.441616,	0.442409,	0.443195,	0.443975,	0.44475,	0.445518,	0.44628,	0.447037,	0.447787,	0.448531,	0.44927,	0.450003,	0.450729,	0.45145,	0.452165,	0.452874,	0.453578,	0.454275,	0.454967,	0.455653,	0.456333,	0.457007,	0.457676,	0.458339,	0.458996,	0.459648,	0.460293,	0.460934,	0.461568,	0.462197,	0.46282,	0.463438,	0.46405,	0.464656,	0.465257,	0.465853,	0.466443,	0.467027,	0.467606,	0.46818,	0.468748,	0.469311,	0.469868,	0.47042,	0.470967,	0.471508,	0.472044,	0.472574,	0.4731,	0.47362,	0.474135,	0.474644,	0.475149,	0.475648,	0.476142,	0.476631,	0.477115,	0.477594,	0.478067,	0.478536,	0.478999,	0.479458,	0.479911,	0.48036,	0.480803,	0.481242,	0.481676,	0.482105,	0.482529,	0.482948,	0.483362,	0.483772,	0.484177,	0.484577,	0.484972,	0.485362,	0.485748,	0.486129,	0.486506,	0.486878,	0.487245,	0.487608,	0.487966,	0.48832,	0.488669,	0.489014,	0.489354,	0.48969,	0.490021,	0.490348,	0.49067,	0.490989,	0.491303,	0.491612,	0.491918,	0.492219,	0.492515,	0.492808,	0.493097,	0.493381,	0.493661,	0.493937,	0.494209,	0.494477,	0.494741,	0.495001,	0.495257,	0.495509,	0.495756,	0.496001,	0.496241,	0.496477,	0.496709,	0.496938,	0.497163,	0.497384,	0.497601,	0.497815,	0.498025,	0.498231,	0.498434,	0.498633,	0.498828,	0.49902,	0.499208,	0.499393,	0.499574,	0.499752,	0.499926,	0.500097,	0.500264,	0.500428,	0.500589,	0.500746,	0.500901,	0.501051,	0.501199,	0.501343,	0.501484,	0.501622,	0.501757,	0.501889,	0.502017,	0.502143,	0.502265,	0.502385,	0.502501,	0.502614,	0.502725,	0.502832,	0.502937,	0.503039,	0.503138,	0.503234,	0.503327,	0.503417,	0.503505,	0.50359,	0.503672,	0.503752,	0.503829,	0.503903,	0.503974,	0.504043,	0.50411,	0.504174,	0.504235,	0.504294,	0.50435,	0.504404,	0.504456,	0.504505,	0.504552,	0.504596,	0.504638,	0.504678,	0.504716,	0.504751,	0.504784,	0.504815,	0.504843,	0.50487,	0.504894,	0.504916,	0.504936,	0.504955,	0.504971,	0.504984,	0.504996,	0.505006,	0.505014,	0.505021,	0.505025,	0.505027,	0.505028,	0.505026,	0.505023,	0.505018,	0.505011,	0.505003,	0.504992,	0.50498,	0.504967,	0.504951,	0.504934,	0.504916,	0.504896,	0.504874,	0.504851,	0.504826,	0.5048,	0.504772,	0.504742,	0.504712,	0.50468,	0.504646,	0.504611,	0.504575,	0.504537,	0.504498,	0.504458,	0.504416,	0.504373,	0.504329,	0.504284,	0.504238,	0.50419,	0.504141,	0.504091,	0.50404,	0.503988,	0.503935,	0.503881,	0.503825,	0.503769,	0.503712,	0.503654,	0.503594,	0.503534,	0.503473,	0.503411,	0.503348,	0.503284,	0.50322,	0.503154,	0.503088,	0.503021,	0.502953,	0.502885,	0.502815,	0.502745,	0.502675,	0.502603,	0.502531,	0.502458,	0.502385,	0.502311,	0.502237,	0.502161,	0.502086,	0.502009,	0.501933,	0.501855,	0.501778,	0.501699,	0.501621,	0.501542,	0.501462,	0.501382,	0.501302,	0.501221,	0.50114,	0.501058,	0.500976,	0.500894,	0.500812,	0.500729,	0.500646,	0.500563,	0.500479,	0.500396,	0.500312,	0.500228,	0.500143,	0.500059,	0.499974,	0.499889,	0.499805,	0.49972,	0.499634,	0.499549,	0.499464,	0.499379,	0.499293,	0.499208,	0.499122,	0.499037,	0.498952,	0.498866,	0.498781,	0.498695,	0.49861,	0.498525,	0.49844,	0.498355,	0.49827,	0.498185,	0.4981,	0.498016,	0.497932,	0.497847,	0.497763,	0.49768,	0.497596,	0.497512,	0.497429,	0.497346,	0.497264,	0.497181,	0.497099,	0.497017,	0.496935,	0.496854,	0.496773,	0.496692,	0.496612,	0.496532,	0.496452,	0.496372,	0.496293,	0.496215,	0.496137,	0.496059,	0.495981,	0.495904,	0.495827,	0.495751,	0.495675,	0.4956,	0.495525,	0.495451,	0.495377,	0.495303,	0.49523,	0.495158,	0.495085,	0.495014,	0.494943,	0.494872,	0.494802,	0.494733,	0.494664,	0.494596,	0.494528,	0.494461,	0.494394,	0.494328,	0.494262,	0.494197,	0.494133,	0.494069,	0.494006,	0.493944,	0.493882,	0.49382,	0.49376,	0.4937,	0.49364,	0.493581,	0.493523,	0.493466,	0.493409,	0.493353,	0.493297,	0.493243,	0.493188,	0.493135,	0.493082,	0.49303,	0.492979,	0.492928,	0.492878,	0.492829,	0.49278,	0.492732,	0.492685,	0.492639,	0.492593,	0.492548,	0.492504,	0.49246,	0.492418,	0.492376,	0.492334,	0.492294,	0.492254,	0.492215,	0.492176,	0.492139,	0.492102,	0.492066,	0.492031,	0.491996,	0.491962,	0.491929,	0.491897,	0.491866,	0.491835,	0.491805,	0.491776,	0.491748,	0.49172,	0.491693,	0.491667,	0.491642,	0.491617,	0.491594,	0.491571,	0.491549,	0.491527,	0.491507,	0.491487,	0.491468,	0.49145,	0.491432,	0.491416,	0.4914,	0.491385,	0.49137,	0.491357,	0.491344,	0.491332,	0.491321,	0.49131,	0.491301,	0.491292,	0.491284,	0.491277,	0.49127,	0.491264,	0.49126,	0.491255,	0.491252,	0.491249,	0.491247,	0.491246,	0.491246,	0.491246,	0.491248,	0.49125,	0.491252,	0.491256,	0.49126,	0.491265,	0.491271,	0.491277,	0.491285,	0.491293,	0.491302,	0.491311,	0.491321,	0.491332,	0.491344,	0.491356,	0.49137,	0.491384,	0.491398,	0.491414,	0.49143,	0.491447,	0.491464,	0.491482,	0.491501,	0.491521,	0.491541,	0.491562,	0.491584,	0.491607,	0.49163,	0.491654,	0.491678,	0.491703,	0.491729,	0.491756,	0.491783,	0.491811,	0.491839,	0.491869,	0.491899,	0.491929,	0.49196,	0.491992,	0.492024,	0.492058,	0.492091,	0.492126,	0.492161,	0.492196,	0.492232,	0.492269,	0.492307,	0.492345,	0.492383,	0.492423,	0.492463,	0.492503,	0.492544,	0.492586,	0.492628,	0.49267,	0.492714,	0.492758,	0.492802,	0.492847,	0.492892,	0.492938,	0.492985,	0.493032,	0.49308,	0.493128,	0.493177,	0.493226,	0.493276,	0.493326,	0.493376,	0.493428,	0.493479,	0.493532,	0.493584,	0.493637,	0.493691,	0.493745,	0.493799,	0.493854,	0.49391,	0.493966,	0.494022,	0.494079,	0.494136,	0.494194,	0.494252,	0.49431,	0.494369,	0.494428,	0.494488,	0.494548,	0.494608,	0.494669,	0.49473,	0.494791,	0.494853,	0.494916,	0.494978,	0.495041,	0.495104,	0.495168,	0.495232,	0.495296,	0.495361,	0.495426,	0.495491,	0.495557,	0.495622,	0.495689,	0.495755,	0.495822,	0.495889,	0.495956,	0.496023,	0.496091,	0.496159,	0.496228,	0.496296,	0.496365,	0.496434,	0.496503,	0.496573,	0.496642,	0.496712,	0.496782,	0.496852,	0.496923,	0.496994,	0.497065,	0.497136,	0.497207,	0.497278,	0.49735,	0.497421,	0.497493,	0.497565,	0.497637,	0.49771,	0.497782,	0.497855,	0.497927,	0.498,	0.498073,	0.498146,	0.498219,	0.498292,	0.498365,	0.498439,	0.498512,	0.498586,	0.498659,	0.498733,	0.498807,	0.49888,	0.498954,	0.499028,	0.499102,	0.499176,	0.499249,	0.499323,	0.499397,	0.499471,	0.499545,	0.499619,	0.499693,	0.499767,	0.499841,	0.499915,	0.499989,	0.500062,	0.500136,	0.50021,	0.500284,	0.500357,	0.500431,	0.500504,	0.500578,	0.500651,	0.500724,	0.500798,	0.500871,	0.500944,	0.501017,	0.50109,	0.501162,	0.501235,	0.501307,	0.50138,	0.501452,	0.501524,	0.501596,	0.501668,	0.50174,	0.501811,	0.501883,	0.501954,	0.502025,	0.502096,	0.502167,	0.502238,	0.502308,	0.502378,	0.502448,	0.502518,	0.502588,	0.502657,	0.502727,	0.502796,	0.502864,	0.502933,	0.503001,	0.50307,	0.503138,	0.503205,	0.503273,	0.50334,	0.503407,	0.503474,	0.50354,	0.503606,	0.503672,	0.503738,	0.503803,	0.503869,	0.503933,	0.503998,	0.504062,	0.504126,	0.50419,	0.504254,	0.504317,	0.50438,	0.504442,	0.504504,	0.504566,	0.504628,	0.504689,	0.50475,	0.504811,	0.504871,	0.504931,	0.504991,	0.50505,	0.505109,	0.505168,	0.505226,	0.505284,	0.505341,	0.505399,	0.505455,	0.505512,	0.505568,	0.505624,	0.505679,	0.505734,	0.505789,	0.505843,	0.505897,	0.50595,	0.506004,	0.506056,	0.506109,	0.50616,	0.506212,	0.506263,	0.506314,	0.506364,	0.506414,	0.506464,	0.506513,	0.506561,	0.506609,	0.506657,	0.506705,	0.506752,	0.506798,	0.506844,	0.50689,	0.506935,	0.50698,	0.507024,	0.507068,	0.507112,	0.507155,	0.507198,	0.50724,	0.507281,	0.507323,	0.507364,	0.507404,	0.507444,	0.507483,	0.507522,	0.507561,	0.507599,	0.507636,	0.507674,	0.50771,	0.507747,	0.507782,	0.507818,	0.507852,	0.507887,	0.507921,	0.507954,	0.507987,	0.508019,	0.508051,	0.508083,	0.508114,	0.508144,	0.508174,	0.508204,	0.508233,	0.508261,	0.508289,	0.508317,	0.508344,	0.508371,	0.508397,	0.508422,	0.508448,	0.508472,	0.508496,	0.50852,	0.508543,	0.508566,	0.508588,	0.50861,	0.508631,	0.508652,	0.508672,	0.508692,	0.508711,	0.50873,	0.508748,	0.508765,	0.508783,	0.508799,	0.508816,	0.508831,	0.508847,	0.508861,	0.508875,	0.508889,	0.508902,	0.508915,	0.508927,	0.508939,	0.50895,	0.508961,	0.508971,	0.508981,	0.50899,	0.508999,	0.509007,	0.509015,	0.509022,	0.509029,	0.509035,	0.509041,	0.509046,	0.509051,	0.509055,	0.509059,	0.509062,	0.509065,	0.509068,	0.509069,	0.509071,	0.509072,	0.509072,	0.509072,	0.509071,	0.50907,	0.509069,	0.509066,	0.509064,	0.509061,	0.509057,	0.509053,	0.509049,	0.509044,	0.509038,	0.509033,	0.509026,	0.509019,	0.509012,	0.509004,	0.508996,	0.508987,	0.508978,	0.508968,	0.508958,	0.508947,	0.508936,	0.508925,	0.508913,	0.5089,	0.508887,	0.508874,	0.50886,	0.508846,	0.508831,	0.508816,	0.5088,	0.508784,	0.508768,	0.508751,	0.508733,	0.508715,	0.508697,	0.508678,	0.508659,	0.50864,	0.50862,	0.508599,	0.508578,	0.508557,	0.508535,	0.508513,	0.50849,	0.508467,	0.508444,	0.50842,	0.508396,	0.508371,	0.508346,	0.50832,	0.508294,	0.508268,	0.508241,	0.508214,	0.508187,	0.508159,	0.50813,	0.508102,	0.508073,	0.508043,	0.508013,	0.507983,	0.507952,	0.507921,	0.50789,	0.507858,	0.507826,	0.507793,	0.507761,	0.507727,	0.507694,	0.50766,	0.507625,	0.507591,	0.507556,	0.50752,	0.507484,	0.507448,	0.507412,	0.507375,	0.507338,	0.5073,	0.507263,	0.507224,	0.507186,	0.507147,	0.507108,	0.507068,	0.507029,	0.506989,	0.506948,	0.506907,	0.506866,	0.506825,	0.506783,	0.506741,	0.506699,	0.506657,	0.506614,	0.50657,	0.506527,	0.506483,	0.506439,	0.506395,	0.50635,	0.506305,	0.50626,	0.506215,	0.506169,	0.506123,	0.506077,	0.506031,	0.505984,	0.505937,	0.50589,	0.505842,	0.505794,	0.505746,	0.505698,	0.50565,	0.505601,	0.505552,	0.505503,	0.505453,	0.505404,	0.505354,	0.505304,	0.505253,	0.505203,	0.505152,	0.505101,	0.50505,	0.504999,	0.504947,	0.504895,	0.504843,	0.504791,	0.504739,	0.504686,	0.504633,	0.504581,	0.504527,	0.504474,	0.504421,	0.504367,	0.504313,	0.504259,	0.504205,	0.504151,	0.504097,	0.504042,	0.503987,	0.503932,	0.503877,	0.503822,	0.503767,	0.503711,	0.503656,	0.5036,	0.503544,	0.503488,	0.503432,	0.503376,	0.50332,	0.503263,	0.503207,	0.50315,	0.503093,	0.503036,	0.502979,	0.502922,	0.502865,	0.502808,	0.50275,	0.502693,	0.502635,	0.502578,	0.50252,	0.502462,	0.502404,	0.502346,	0.502288,	0.50223,	0.502172,	0.502114,	0.502056,	0.501997,	0.501939,	0.501881,	0.501822,	0.501764,	0.501705,	0.501646,	0.501588,	0.501529,	0.501471,	0.501412,	0.501353,	0.501294,	0.501236,	0.501177,	0.501118,	0.501059,	0.501,	0.500941,	0.500883,	0.500824,	0.500765,	0.500706,	0.500647,	0.500588,	0.50053,	0.500471,	0.500412,	0.500353,	0.500295,	0.500236,	0.500177,	0.500118,	0.50006,	0.500001,	0.499943,	0.499884,	0.499826,	0.499767,	0.499709,	0.49965,	0.499592,	0.499534,	0.499476,	0.499418,	0.49936,	0.499302,	0.499244,	0.499186,	0.499128,	0.49907,	0.499013,	0.498955,	0.498898,	0.49884,	0.498783,	0.498726,	0.498669,	0.498612,	0.498555,	0.498498,	0.498441,	0.498384,	0.498328,	0.498271,	0.498215,	0.498159,	0.498103,	0.498047,	0.497991,	0.497935,	0.49788,	0.497824,	0.497769,	0.497713,	0.497658,	0.497603,	0.497548,	0.497494,	0.497439,	0.497385,	0.49733,	0.497276,	0.497222,	0.497168,	0.497114,	0.497061,	0.497007,	0.496954,	0.496901,	0.496848,	0.496795,	0.496743,	0.49669,	0.496638,	0.496586,	0.496534,	0.496482,	0.496431,	0.496379,	0.496328,	0.496277,	0.496226,	0.496175,	0.496125,	0.496075,	0.496024,	0.495974,	0.495925,	0.495875,	0.495826,	0.495777,	0.495728,	0.495679,	0.49563,	0.495582,	0.495534,	0.495486,	0.495438,	0.495391,	0.495343,	0.495296,	0.49525,	0.495203,	0.495156,	0.49511,	0.495064,	0.495018,	0.494973,	0.494928,	0.494883,	0.494838,	0.494793,	0.494749,	0.494704,	0.494661,	0.494617,	0.494573,	0.49453,	0.494487,	0.494444,	0.494402,	0.49436,	0.494318,	0.494276,	0.494234,	0.494193,	0.494152,	0.494111,	0.494071,	0.494031,	0.493991,	0.493951,	0.493911,	0.493872,	0.493833,	0.493794,	0.493756,	0.493718,	0.49368,	0.493642,	0.493605,	0.493568,	0.493531,	0.493494,	0.493458,	0.493422,	0.493386,	0.493351,	0.493315,	0.49328,	0.493246,	0.493211,	0.493177,	0.493143,	0.49311,	0.493076,	0.493043,	0.493011,	0.492978,	0.492946,	0.492914,	0.492883,	0.492851,	0.49282,	0.492789,	0.492759,	0.492729,	0.492699,	0.492669,	0.49264,	0.492611,	0.492582,	0.492554,	0.492526,	0.492498,	0.49247,	0.492443,	0.492416,	0.492389,	0.492363,	0.492337,	0.492311,	0.492285,	0.49226,	0.492235,	0.492211,	0.492186,	0.492162,	0.492138,	0.492115,	0.492092,	0.492069,	0.492046,	0.492024,	0.492002,	0.491981,	0.491959,	0.491938,	0.491918,	0.491897,	0.491877,	0.491857,	0.491838,	0.491818,	0.4918,	0.491781,	0.491763,	0.491745,	0.491727,	0.491709,	0.491692,	0.491676,	0.491659,	0.491643,	0.491627,	0.491611,	0.491596,	0.491581,	0.491566,	0.491552,	0.491538,	0.491524,	0.491511,	0.491498,	0.491485,	0.491472,	0.49146,	0.491448,	0.491436,	0.491425,	0.491414,	0.491403,	0.491393,	0.491383,	0.491373,	0.491363,	0.491354,	0.491345,	0.491336,	0.491328,	0.49132,	0.491312,	0.491305,	0.491298,	0.491291,	0.491284,	0.491278,	0.491272,	0.491267,	0.491261,	0.491256,	0.491251,	0.491247,	0.491243,	0.491239,	0.491235,	0.491232,	0.491229,	0.491226,	0.491224,	0.491222,	0.49122,	0.491219,	0.491217,	0.491216,	0.491216,	0.491215,	0.491215,	0.491216,	0.491216,	0.491217,	0.491218,	0.491219,	0.491221,	0.491223,	0.491225,	0.491228,	0.49123,	0.491234,	0.491237,	0.491241,	0.491244,	0.491249,	0.491253,	0.491258,	0.491263,	0.491268,	0.491274,	0.49128,	0.491286,	0.491292,	0.491299,	0.491306,	0.491313,	0.491321,	0.491328,	0.491336,	0.491345,	0.491353,	0.491362,	0.491371,	0.491381,	0.49139,	0.4914,	0.49141,	0.491421,	0.491432,	0.491443,	0.491454,	0.491465,	0.491477,	0.491489,	0.491501,	0.491514,	0.491526,	0.491539,	0.491553,	0.491566,	0.49158,	0.491594,	0.491608,	0.491623,	0.491637,	0.491652,	0.491668,	0.491683,	0.491699,	0.491715,	0.491731,	0.491747,	0.491764,	0.491781,	0.491798,	0.491815,	0.491833,	0.491851,	0.491869,	0.491887,	0.491906,	0.491925,	0.491944,	0.491963,	0.491982,	0.492002,	0.492022,	0.492042,	0.492062,	0.492083,	0.492104,	0.492125,	0.492146,	0.492167,	0.492189,	0.492211,	0.492233,	0.492255,	0.492277,	0.4923,	0.492323,	0.492346,	0.492369,	0.492393,	0.492417,	0.49244,	0.492464,	0.492489,	0.492513,	0.492538,	0.492563,	0.492588,	0.492613,	0.492639,	0.492664,	0.49269,	0.492716,	0.492742,	0.492769,	0.492795,	0.492822,	0.492849,	0.492876,	0.492903,	0.492931,	0.492958,	0.492986,	0.493014,	0.493042,	0.493071,	0.493099,	0.493128,	0.493157,	0.493186,	0.493215,	0.493244,	0.493274,	0.493303,	0.493333,	0.493363,	0.493393,	0.493423,	0.493454,	0.493484,	0.493515,	0.493546,	0.493577,	0.493608,	0.493639,	0.493671,	0.493702,	0.493734,	0.493766,	0.493798,	0.49383,	0.493862,	0.493895,	0.493927,	0.49396,	0.493993,	0.494025,	0.494059,	0.494092,	0.494125,	0.494158,	0.494192,	0.494226,	0.494259,	0.494293,	0.494327,	0.494361,	0.494396,	0.49443,	0.494465,	0.494499,	0.494534,	0.494569,	0.494603,	0.494638,	0.494674,	0.494709,	0.494744,	0.494779,	0.494815,	0.49485,	0.494886,	0.494922,	0.494958,	0.494994,	0.49503,	0.495066,	0.495102,	0.495138,	0.495175,	0.495211,	0.495248,	0.495284,	0.495321,	0.495358,	0.495395,	0.495432,	0.495469,	0.495506,	0.495543,	0.49558,	0.495617,	0.495655,	0.495692,	0.49573,	0.495767,	0.495805,	0.495842,	0.49588,	0.495918,	0.495955,	0.495993,	0.496031,	0.496069,	0.496107,	0.496145,	0.496183,	0.496222,	0.49626,	0.496298,	0.496336,	0.496374,	0.496413,	0.496451,	0.49649,	0.496528,	0.496567,	0.496605,	0.496644,	0.496682,	0.496721,	0.496759,	0.496798,	0.496837,	0.496875,	0.496914,	0.496953,	0.496992,	0.49703,	0.497069,	0.497108,	0.497147,	0.497186,	0.497224,	0.497263,	0.497302,	0.497341,	0.49738,	0.497419,	0.497458,	0.497496,	0.497535,	0.497574,	0.497613,	0.497652,	0.497691,	0.49773,	0.497768,	0.497807,	0.497846,	0.497885,	0.497924,	0.497963,	0.498001,	0.49804,	0.498079,	0.498117,	0.498156,	0.498195,	0.498234,	0.498272,	0.498311,	0.498349,	0.498388,	0.498426,	0.498465,	0.498503,	0.498542,	0.49858,	0.498619,	0.498657,	0.498695,	0.498733,	0.498772,	0.49881,	0.498848,	0.498886,	0.498924,	0.498962,	0.499,	0.499038,	0.499076,	0.499114,	0.499151,	0.499189,	0.499227,	0.499264,	0.499302,	0.499339,	0.499377,	0.499414,	0.499452,	0.499489,	0.499526,	0.499563,	0.4996,	0.499637,	0.499674,	0.499711,	0.499748,	0.499785,	0.499821,	0.499858,	0.499894,	0.499931,	0.499967,	0.500004,	0.50004,	0.500076,	0.500112,	0.500148,	0.500184,	0.50022,	0.500256,	0.500291,	0.500327,	0.500362,	0.500398,	0.500433,	0.500468,	0.500504,	0.500539,	0.500574,	0.500609,	0.500643,	0.500678,	0.500713,	0.500747,	0.500782,	0.500816,	0.50085,	0.500884,	0.500918,	0.500952,	0.500986,	0.50102,	0.501053,	0.501087,	0.50112,	0.501154,	0.501187,	0.50122,	0.501253,	0.501286,	0.501318,	0.501351,	0.501384,	0.501416,	0.501448,	0.501481,	0.501513,	0.501545,	0.501577,	0.501608,	0.50164,	0.501671,	0.501703,	0.501734,	0.501765,	0.501796,	0.501827,	0.501858,	0.501889,	0.501919,	0.501949,	0.50198,	0.50201,	0.50204,	0.50207,	0.5021,	0.502129,	0.502159,	0.502188,	0.502217,	0.502247,	0.502275,	0.502304,	0.502333,	0.502362,	0.50239,	0.502418,	0.502447,	0.502475,	0.502503,	0.50253,	0.502558,	0.502585,	0.502613,	0.50264,	0.502667,	0.502694,	0.502721,	0.502747,	0.502774,	0.5028,	0.502826,	0.502852,	0.502878,	0.502904,	0.50293,	0.502955,	0.50298,	0.503006,	0.503031,	0.503056,	0.50308,	0.503105,	0.503129,	0.503154,	0.503178,	0.503202,	0.503225,	0.503249,	0.503273,	0.503296,	0.503319,	0.503342,	0.503365,	0.503388,	0.50341,	0.503433,	0.503455,	0.503477,	0.503499,	0.503521,	0.503543,	0.503564,	0.503585,	0.503607,	0.503628,	0.503648,	0.503669,	0.50369,	0.50371,	0.50373,	0.50375,	0.50377,	0.50379,	0.503809,	0.503829,	0.503848,	0.503867,	0.503886,	0.503905,	0.503923,	0.503942,	0.50396,	0.503978,	0.503996,	0.504014,	0.504031,	0.504048,	0.504066,	0.504083,	0.5041,	0.504116,	0.504133,	0.504149,	0.504166,	0.504182,	0.504198,	0.504213,	0.504229,	0.504244,	0.50426,	0.504275,	0.504289,	0.504304,	0.504319,	0.504333,	0.504347,	0.504361,	0.504375,	0.504389,	0.504403,	0.504416,	0.504429,	0.504442,	0.504455,	0.504468,	0.50448,	0.504492,	0.504505,	0.504517,	0.504528,	0.50454,	0.504552,	0.504563,	0.504574,	0.504585,	0.504596,	0.504606,	0.504617,	0.504627,	0.504637,	0.504647,	0.504657,	0.504667,	0.504676,	0.504685,	0.504694,	0.504703,	0.504712,	0.504721,	0.504729,	0.504737,	0.504745,	0.504753,	0.504761,	0.504769,	0.504776,	0.504783,	0.50479,	0.504797,	0.504804,	0.50481,	0.504817,	0.504823,	0.504829,	0.504835,	0.504841,	0.504846,	0.504851,	0.504857,	0.504862,	0.504866,	0.504871,	0.504876,	0.50488,	0.504884,	0.504888,	0.504892,	0.504896,	0.504899,	0.504903,	0.504906,	0.504909,	0.504912,	0.504914,	0.504917,	0.504919,	0.504921,	0.504923,	0.504925,	0.504927,	0.504928,	0.50493,	0.504931,	0.504932,	0.504933,	0.504933,	0.504934,	0.504934,	0.504934,	0.504935,	0.504934,	0.504934,	0.504934,	0.504933,	0.504932,	0.504931,	0.50493,	0.504929,	0.504928,	0.504926,	0.504924,	0.504923,	0.504921,	0.504918,	0.504916,	0.504913,	0.504911,	0.504908,	0.504905,	0.504902,	0.504899,	0.504895,	0.504892,	0.504888,	0.504884,	0.50488,	0.504876,	0.504871,	0.504867,	0.504862,	0.504857,	0.504852,	0.504847,	0.504842,	0.504837,	0.504831,	0.504825,	0.504819,	0.504813,	0.504807,	0.504801,	0.504794,	0.504788,	0.504781,	0.504774,	0.504767,	0.50476,	0.504753,	0.504745,	0.504738,	0.50473,	0.504722,	0.504714,	0.504706,	0.504698,	0.504689,	0.50468,	0.504672,	0.504663,	0.504654,	0.504645,	0.504635,	0.504626,	0.504616,	0.504607,	0.504597,	0.504587,	0.504577,	0.504567,	0.504556,	0.504546,	0.504535,	0.504525,	0.504514,	0.504503,	0.504492,	0.50448,	0.504469,	0.504457,	0.504446,	0.504434,	0.504422,	0.50441,	0.504398,	0.504386,	0.504373,	0.504361,	0.504348,	0.504335,	0.504322,	0.504309,	0.504296,	0.504283,	0.50427,	0.504256,	0.504243,	0.504229,	0.504215,	0.504201,	0.504187,	0.504173,	0.504159,	0.504144,	0.50413,	0.504115,	0.5041,	0.504086,	0.504071,	0.504056,	0.50404,	0.504025,	0.50401,	0.503994,	0.503979,	0.503963,	0.503947,	0.503931,	0.503915,	0.503899,	0.503883,	0.503867,	0.50385,	0.503834,	0.503817,	0.5038,	0.503784,	0.503767,	0.50375,	0.503733,	0.503715,	0.503698,	0.503681,	0.503663,	0.503646,	0.503628,	0.50361,	0.503592,	0.503575,	0.503557,	0.503538,	0.50352,	0.503502,	0.503484,	0.503465,	0.503447,	0.503428,	0.503409,	0.503391,	0.503372,	0.503353,	0.503334,	0.503315,	0.503296,	0.503276,	0.503257,	0.503238,	0.503218,	0.503199,	0.503179,	0.503159,	0.50314,	0.50312,	0.5031,	0.50308,	0.50306,	0.50304,	0.503019,	0.502999,	0.502979,	0.502959,	0.502938,	0.502918,	0.502897,	0.502876,	0.502856,	0.502835,	0.502814,	0.502793,	0.502772,	0.502751,	0.50273,	0.502709,	0.502688,	0.502667,	0.502645,	0.502624,	0.502603,	0.502581,	0.50256,	0.502538,	0.502517,	0.502495,	0.502474,	0.502452,	0.50243,	0.502408,	0.502386,	0.502364,	0.502343,	0.502321,	0.502299,	0.502276,	0.502254,	0.502232,	0.50221,	0.502188,	0.502166,	0.502143,	0.502121,	0.502099,	0.502076,	0.502054,	0.502031,	0.502009,	0.501986,	0.501964,	0.501941,	0.501919,	0.501896,	0.501873,	0.501851,	0.501828,	0.501805,	0.501782,	0.50176,	0.501737,	0.501714,	0.501691,	0.501668,	0.501646,	0.501623,	0.5016,	0.501577,	0.501554,	0.501531,	0.501508,	0.501485,	0.501462,	0.501439,	0.501416,	0.501393,	0.50137,	0.501347,	0.501324,	0.501301,	0.501278,	0.501255,	0.501232,	0.501209,	0.501185,	0.501162,	0.501139,	0.501116,	0.501093,	0.50107,	0.501047,	0.501024,	0.501001,	0.500978,	0.500955,	0.500932,	0.500909,	0.500886,	0.500863,	0.50084,	0.500817,	0.500794,	0.500771,	0.500748,	0.500725,	0.500702,	0.500679,	0.500656,	0.500633,	0.50061,	0.500587,	0.500565,	0.500542,	0.500519,	0.500496,	0.500473,	0.500451,	0.500428,	0.500405,	0.500383,	0.50036,	0.500337,	0.500315,	0.500292,	0.50027,	0.500247,	0.500225,	0.500202,	0.50018,	0.500158,	0.500135,	0.500113,	0.500091,	0.500069,	0.500046,	0.500024,	0.500002,	0.49998,	0.499958,	0.499936,	0.499914,	0.499892,	0.49987,	0.499849,	0.499827,	0.499805,	0.499783,	0.499762,	0.49974,	0.499719,	0.499697,	0.499676,	0.499654,	0.499633,	0.499612,	0.49959,	0.499569,	0.499548,	0.499527,	0.499506,	0.499485,	0.499464,	0.499443,	0.499422,	0.499402,	0.499381,	0.49936,	0.49934,	0.499319,	0.499299,	0.499278,	0.499258,	0.499238,	0.499218,	0.499198,	0.499177,	0.499157,	0.499138,	0.499118,	0.499098,	0.499078,	0.499059,	0.499039,	0.49902,	0.499,	0.498981,	0.498961,	0.498942,	0.498923,	0.498904,	0.498885,	0.498866,	0.498847,	0.498829,	0.49881,	0.498791,	0.498773,	0.498754,	0.498736,	0.498718,	0.4987,	0.498682,	0.498664,	0.498646,	0.498628,	0.49861,	0.498592,	0.498575,	0.498557,	0.49854,	0.498523,	0.498505,	0.498488,	0.498471,	0.498454,	0.498437,	0.498421,	0.498404,	0.498387,	0.498371,	0.498355,	0.498338,	0.498322,	0.498306,	0.49829,	0.498274,	0.498258,	0.498242,	0.498227,	0.498211,	0.498196,	0.498181,	0.498165,	0.49815,	0.498135,	0.49812,	0.498106,	0.498091,	0.498076,	0.498062,	0.498048,	0.498033,	0.498019,	0.498005,	0.497991,	0.497977,	0.497964,	0.49795,	0.497937,	0.497923,	0.49791,	0.497897,	0.497884,	0.497871,	0.497858,	0.497845,	0.497833,	0.49782,	0.497808,	0.497796,	0.497783,	0.497771,	0.49776,	0.497748,	0.497736,	0.497725,	0.497713,	0.497702,	0.497691,	0.49768,	0.497669,	0.497658,	0.497647,	0.497637,	0.497626,	0.497616,	0.497606,	0.497595,	0.497585,	0.497576,	0.497566,	0.497556,	0.497547,	0.497538,	0.497528,	0.497519,	0.49751,	0.497502,	0.497493,	0.497484,	0.497476,	0.497468,	0.497459,	0.497451,	0.497443,	0.497436,	0.497428,	0.49742,	0.497413,	0.497406,	0.497399,	0.497392,	0.497385,	0.497378,	0.497372,	0.497365,	0.497359,	0.497353,	0.497346,	0.497341,	0.497335,	0.497329,	0.497324,	0.497318,	0.497313,	0.497308,	0.497303,	0.497298,	0.497293,	0.497289,	0.497284,	0.49728,	0.497276,	0.497272,	0.497268,	0.497265,	0.497261,	0.497258,	0.497254,	0.497251,	0.497248,	0.497245,	0.497242,	0.49724,	0.497237,	0.497235,	0.497233,	0.497231,	0.497229,	0.497227,	0.497226,	0.497224,	0.497223,	0.497222,	0.497221,	0.49722,	0.497219,	0.497219,	0.497218,	0.497218,	0.497218,	0.497218,	0.497218,	0.497218,	0.497218,	0.497219,	0.49722,	0.497221,	0.497222,	0.497223,	0.497224,	0.497225,	0.497227,	0.497229,	0.497231,	0.497233,	0.497235,	0.497237,	0.49724,	0.497242,	0.497245,	0.497248,	0.497251,	0.497254,	0.497257,	0.497261,	0.497264,	0.497268,	0.497272,	0.497276,	0.49728,	0.497285,	0.497289,	0.497294,	0.497299,	0.497304,	0.497309,	0.497314,	0.497319,	0.497325,	0.49733,	0.497336,	0.497342,	0.497348,	0.497354,	0.497361,	0.497367,	0.497374,	0.497381,	0.497388,	0.497395,	0.497402,	0.49741,	0.497417,	0.497425,	0.497433,	0.497441,	0.497449,	0.497457,	0.497465,	0.497474,	0.497483,	0.497491,	0.4975,	0.49751,	0.497519,	0.497528,	0.497538,	0.497547,	0.497557,	0.497567,	0.497577,	0.497588,	0.497598,	0.497609,	0.497619,	0.49763,	0.497641,	0.497652,	0.497663,	0.497675,	0.497686,	0.497698,	0.49771,	0.497722,	0.497734,	0.497746,	0.497758,	0.497771,	0.497783,	0.497796,	0.497809,	0.497822,	0.497835,	0.497848,	0.497862,	0.497875,	0.497889,	0.497903,	0.497917,	0.497931,	0.497945,	0.497959,	0.497974,	0.497988,	0.498003,	0.498018,	0.498033,	0.498048,	0.498063,	0.498079,	0.498094,	0.49811,	0.498126,	0.498142,	0.498158,	0.498174,	0.49819,	0.498207,	0.498223,	0.49824,	0.498256,	0.498273,	0.49829,	0.498308,	0.498325,	0.498342,	0.49836,	0.498377,	0.498395,	0.498413,	0.498431,	0.498449,	0.498467,	0.498486,	0.498504,	0.498523,	0.498541,	0.49856,	0.498579,	0.498598,	0.498617,	0.498636,	0.498656,	0.498675,	0.498695,	0.498714,	0.498734,	0.498754,	0.498774,	0.498794,	0.498814,	0.498835,	0.498855,	0.498876,	0.498896,	0.498917,	0.498938,	0.498959,	0.49898,	0.499001,	0.499022,	0.499044,	0.499065,	0.499087,	0.499108,	0.49913,	0.499152,	0.499174,	0.499196,	0.499218,	0.49924,	0.499262,	0.499285,	0.499307,	0.49933,	0.499352,	0.499375,	0.499398,	0.499421,	0.499444,	0.499467,	0.49949,	0.499513,	0.499536,	0.49956,	0.499583,	0.499607,	0.49963,	0.499654,	0.499678,	0.499702,	0.499726,	0.49975,	0.499774,	0.499798,	0.499822,	0.499846,	0.499871,	0.499895,	0.49992,	0.499944,	0.499969,	0.499993,	0.500018,	0.500043,	0.500068,	0.500093,	0.500118,	0.500143,	0.500168,	0.500193,	0.500218,	0.500243,	0.500269,	0.500294,	0.50032,	0.500345,	0.500371,	0.500396,	0.500422,	0.500447,	0.500473,	0.500499,	0.500524,	0.50055,	0.500576,	0.500602,	0.500628,	0.500654,	0.50068,	0.500706,	0.500732,	0.500758,	0.500784,	0.50081,	0.500836,	0.500863,	0.500889,	0.500915,	0.500941,	0.500968,	0.500994,	0.50102,	0.501047,	0.501073,	0.5011,	0.501126,	0.501152,	0.501179,	0.501205,	0.501232,	0.501258,	0.501285,	0.501311,	0.501338,	0.501364,	0.501391,	0.501417,	0.501444,	0.50147,	0.501496,	0.501523,	0.501549,	0.501576,	0.501602,	0.501629,	0.501655,	0.501682,	0.501708,	0.501734,	0.501761,	0.501787,	0.501813,	0.50184,	0.501866,	0.501892,	0.501919,	0.501945,	0.501971,	0.501997,	0.502023,	0.502049,	0.502075,	0.502102,	0.502128,	0.502153,	0.502179,	0.502205,	0.502231,	0.502257,	0.502283,	0.502308,	0.502334,	0.50236,	0.502385,	0.502411,	0.502436,	0.502462,	0.502487,	0.502512,	0.502537,	0.502563,	0.502588,	0.502613,	0.502638,	0.502662,	0.502687,	0.502712,	0.502737,	0.502761,	0.502786,	0.50281,	0.502835,	0.502859,	0.502883,	0.502907,	0.502931,	0.502955,	0.502979,	0.503003,	0.503027,	0.50305,	0.503074,	0.503097,	0.503121,	0.503144,	0.503167,	0.50319,	0.503213,	0.503236,	0.503258,	0.503281,	0.503303,	0.503326,	0.503348,	0.50337,	0.503392,	0.503414,	0.503436,	0.503458,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.0031741,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317413,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317407,	0.0031741,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317413,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317408,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317413,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317413,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317411,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	0.00317412,	


Model provider : begin : CurrentRSS (MB): 3497.06
Model provider : begin : PeakRSS    (MB): 3619.35

END OF THE PROGRAMM
